"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkrabbitmq_website"] = globalThis["webpackChunkrabbitmq_website"] || []).push([["content---rabbitmq-website-docs-4-0-rolling-upgrade-51-d-f71"],{

/***/ "./.docusaurus/docusaurus-plugin-content-docs/default/site-versioned-docs-version-4-0-rolling-upgrade-md-51d.json":
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"id":"rolling-upgrade","title":"Rolling (in-place) Upgrade","description":"<!--","source":"@site/versioned_docs/version-4.0/rolling-upgrade.md","sourceDirName":".","slug":"/rolling-upgrade","permalink":"/rabbitmq-website/docs/4.0/rolling-upgrade","draft":false,"unlisted":false,"editUrl":"https://github.com/rabbitmq/rabbitmq-website/tree/main/versioned_docs/version-4.0/rolling-upgrade.md","tags":[],"version":"4.0","frontMatter":{"title":"Rolling (in-place) Upgrade"},"sidebar":"docsSidebar","previous":{"title":"Upgrading RabbitMQ","permalink":"/rabbitmq-website/docs/4.0/upgrade"},"next":{"title":"Blue-Green Deployment","permalink":"/rabbitmq-website/docs/4.0/blue-green-upgrade"}}');

/***/ }),

/***/ "./versioned_docs/version-4.0/rolling-upgrade.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assets: () => (/* binding */ assets),\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   metadata: () => (/* reexport default export from named module */ _site_docusaurus_docusaurus_plugin_content_docs_default_site_versioned_docs_version_4_0_rolling_upgrade_md_51d_json__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var _site_docusaurus_docusaurus_plugin_content_docs_default_site_versioned_docs_version_4_0_rolling_upgrade_md_51d_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.docusaurus/docusaurus-plugin-content-docs/default/site-versioned-docs-version-4-0-rolling-upgrade-md-51d.json\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n/* harmony import */ var _theme_Tabs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n/* harmony import */ var _theme_TabItem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n\n\nconst frontMatter = {\n\ttitle: 'Rolling (in-place) Upgrade'\n};\nconst contentTitle = undefined;\n\nconst assets = {\n\n};\n\n\n\n\n\nconst toc = [{\n  \"value\": \"Before the Upgrade\",\n  \"id\": \"before\",\n  \"level\": 2\n}, {\n  \"value\": \"Investigate if the current and target versions have a rolling upgrade path\",\n  \"id\": \"investigate-if-the-current-and-target-versions-have-a-rolling-upgrade-path\",\n  \"level\": 3\n}, {\n  \"value\": \"Check Erlang Version Requirements\",\n  \"id\": \"check-erlang-version-requirements\",\n  \"level\": 3\n}, {\n  \"value\": \"Carefully Read the Release Notes Up to the Selected RabbitMQ Version\",\n  \"id\": \"carefully-read-the-release-notes-up-to-the-selected-rabbitmq-version\",\n  \"level\": 3\n}, {\n  \"value\": \"Verify All Stable Feature Flags Are Enabled\",\n  \"id\": \"verify-all-stable-feature-flags-are-enabled\",\n  \"level\": 3\n}, {\n  \"value\": \"Make Sure All Package Dependencies (including Erlang) are Available\",\n  \"id\": \"make-sure-all-package-dependencies-including-erlang-are-available\",\n  \"level\": 3\n}, {\n  \"value\": \"Assess Cluster Health\",\n  \"id\": \"assess-cluster-health\",\n  \"level\": 3\n}, {\n  \"value\": \"Ensure Cluster Has the Capacity for Upgrading\",\n  \"id\": \"ensure-cluster-has-the-capacity-for-upgrading\",\n  \"level\": 3\n}, {\n  \"value\": \"Perform the Upgrade\",\n  \"id\": \"perform-the-upgrade\",\n  \"level\": 2\n}, {\n  \"value\": \"Stop the Node\",\n  \"id\": \"stop-the-node\",\n  \"level\": 3\n}, {\n  \"value\": \"Take a Backup\",\n  \"id\": \"take-a-backup\",\n  \"level\": 3\n}, {\n  \"value\": \"Upgrade the Node\",\n  \"id\": \"upgrade-the-node\",\n  \"level\": 3\n}, {\n  \"value\": \"Start the Node\",\n  \"id\": \"start-the-node\",\n  \"level\": 3\n}, {\n  \"value\": \"After the Upgrade\",\n  \"id\": \"after\",\n  \"level\": 2\n}, {\n  \"value\": \"Verify that the Upgrade Has Succeeded\",\n  \"id\": \"verify-that-the-upgrade-has-succeeded\",\n  \"level\": 3\n}, {\n  \"value\": \"Enable New Feature Flags\",\n  \"id\": \"enable-ff-after-upgrade\",\n  \"level\": 3\n}, {\n  \"value\": \"Real-world Example\",\n  \"id\": \"example\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    admonition: \"admonition\",\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Rolling upgrade is a popular upgrade strategy, in which nodes are upgraded\\r\\none by one: each node is stopped, upgraded and then started. Upgraded nodes rejoin the cluster,\\r\\nwhich temporarily works in a mixed-version mode: some nodes run the old version, some run the new one.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"While all nodes have to be restarted during the upgrade, the\\r\\ncluster as a whole remains available throughout the process\\r\\n(unless it only has one node, of course).\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.admonition, {\n      type: \"important\",\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n        children: [\"Rolling upgrades don't support skipping versions, except patch releases (for example you \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n          children: \"can\"\n        }), \" upgrade directly\\r\\nfrom 3.13.0 to 3.13.7 but you \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n          children: \"cannot\"\n        }), \" upgrade directly from 3.12.x to 4.0). Moreover, for specific upgrades,\\r\\nadditional constraints may apply. Please refer to the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./upgrade#rabbitmq-version-upgradability\",\n          children: \"version upgradability\"\n        }), \" table for more information.\"]\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"before\",\n      children: \"Before the Upgrade\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"investigate-if-the-current-and-target-versions-have-a-rolling-upgrade-path\",\n      children: \"Investigate if the current and target versions have a rolling upgrade path\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Please refer to the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./upgrade#rabbitmq-version-upgradability\",\n        children: \"version upgradability\"\n      }), \" table for information\\r\\nabout the supported upgrade paths.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"check-erlang-version-requirements\",\n      children: \"Check Erlang Version Requirements\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Refer to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./upgrade#rabbitmq-erlang-version-requirement\",\n        children: \"Erlang Version Requirements\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"If the same Erlang version is supported by both the current and target RabbitMQ versions,\\r\\nyou can leave Erlang as is. However, you can consider upgrading Erlang to the latest\\r\\nsupported version at the same time. Both Erlang and RabbitMQ upgrades require a restart,\\r\\nso it may be more convenient to do both at the same time.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"If the target RabbitMQ version requires a newer Erlang version,\\r\\nyou need to prepare to upgrade Erlang together with RabbitMQ.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"carefully-read-the-release-notes-up-to-the-selected-rabbitmq-version\",\n      children: \"Carefully Read the Release Notes Up to the Selected RabbitMQ Version\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/rabbitmq-server/releases\",\n        children: \"release notes\"\n      }), \"\\r\\nmay indicate specific additional upgrade steps. Always consult the release notes\\r\\nof all versions between the one currently deployed and the target one.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"verify-all-stable-feature-flags-are-enabled\",\n      children: \"Verify All Stable Feature Flags Are Enabled\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./feature-flags#how-to-enable-feature-flags\",\n        children: \"All stable feature flags should be enabled\"\n      }), \" after each upgrade.\\r\\nOtherwise, the upgrade process is not really complete, since some of the changes are not effective.\\r\\nIf you follow this advice, there should be nothing to do with regards to the feature flags before the upgrade,\\r\\nsince they were all enabled after the previous upgrade.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"However, since attempting an upgrade with disabled feature flags may lead to serious issues, it's a good\\r\\npractice to check if all stable feature flags are enabled before starting the upgrade. You can safely\\r\\nrun \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl enable_feature_flag all\"\n      }), \" - it will do nothing if all flags are already enabled.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"make-sure-all-package-dependencies-including-erlang-are-available\",\n      children: \"Make Sure All Package Dependencies (including Erlang) are Available\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"If you are using Debian or RPM packages, you must ensure\\r\\nthat all dependencies are available. In particular, the\\r\\ncorrect version of Erlang. You may have to setup additional\\r\\nthird-party package repositories to achieve that.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Please read recommendations for\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./which-erlang#debian\",\n        children: \"Debian-based\"\n      }), \" and\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./which-erlang#redhat\",\n        children: \"RPM-based\"\n      }), \" distributions to find the\\r\\nappropriate repositories for Erlang.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"assess-cluster-health\",\n      children: \"Assess Cluster Health\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Make sure nodes are healthy and there are no \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./partitions\",\n        children: \"network partition\"\n      }), \"\\r\\nor \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./alarms\",\n        children: \"disk or memory alarms\"\n      }), \" in effect.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"RabbitMQ management UI, CLI tools or HTTP API can be used for\\r\\nassessing the health of the system.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The overview page in the management UI displays effective RabbitMQ\\r\\nand Erlang versions, multiple cluster-wide metrics and rates. From\\r\\nthis page ensure that all nodes are running and they are all \\\"green\\\"\\r\\n(w.r.t. file descriptors, memory, disk space, and so on).\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"We recommend recording the number of durable queues, the number\\r\\nof messages they hold and other pieces of information about the\\r\\ntopology that are relevant. This data will help verify that the\\r\\nsystem operates within reasonable parameters after the upgrade.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Use \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./monitoring#health-checks\",\n        children: \"node health checks\"\n      }), \" to\\r\\nvet individual nodes.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Queues in flow state or blocked/blocking connections might not be a problem,\\r\\ndepending on your workload. It's up to you to determine if this is\\r\\na normal situation or if the cluster is under unexpected load and\\r\\nthus, decide if it's safe to continue with the upgrade.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"However, if there are queues in an undefined state (a.k.a. \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"NaN\"\n      }), \" or\\r\\n\\\"ghost\\\" queues), you should first start by understanding what is\\r\\nwrong before starting an upgrade.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"ensure-cluster-has-the-capacity-for-upgrading\",\n      children: \"Ensure Cluster Has the Capacity for Upgrading\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Please refer to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./upgrade#system-resource-usage\",\n        children: \"changes in system resource usage\"\n      }), \"\\r\\nfor information about how the upgrade process can affect resource usage.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"perform-the-upgrade\",\n      children: \"Perform the Upgrade\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The main part of the upgrade process is performed by stopping, upgrading and starting each node one by one.\\r\\nThe following steps should be performed for all nodes.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"stop-the-node\",\n      children: \"Stop the Node\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The exact way to stop a node depends on how it was started.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"take-a-backup\",\n      children: \"Take a Backup\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Optionally, when the node is stopped, you can \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./backup\",\n        children: \"backup\"\n      }), \" its data folder.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"upgrade-the-node\",\n      children: \"Upgrade the Node\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Install the new version of RabbitMQ and other packages if necessary.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Make sure you have an Erlang version compatible with the new RabbitMQ version.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"start-the-node\",\n      children: \"Start the Node\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Start the node and verify that it joins the cluster.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"You can perform the following checks to ensure that the node started and rejoined\\r\\nthe cluster successfully:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"run \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"rabbitmqctl cluster_status\"\n        }), \" and verify the output\", \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n            children: \"the upgraded node should be listed as running\"\n          }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n            children: \"there should be no network partitions nor active alarms\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"check the management UI\", \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n            children: \"all nodes should be listed on the main page\"\n          }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n            children: \"resource usage should be within acceptable limits\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"check the logs\", \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n            children: \"there should be no errors\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"after\",\n      children: \"After the Upgrade\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"verify-that-the-upgrade-has-succeeded\",\n      children: \"Verify that the Upgrade Has Succeeded\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Like you did before the upgrade, verify the health and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./monitoring\",\n        children: \"monitoring data\"\n      }), \" to\\r\\nmake sure all cluster nodes are in good shape and the service is running again.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"enable-ff-after-upgrade\",\n      children: \"Enable New Feature Flags\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Once all the nodes are upgraded and the cluster is healthy,\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./feature-flags#how-to-enable-feature-flags\",\n        children: \"enable all stable feature flags\"\n      }), \".\\r\\nIf the new version doesn't provide any new feature flags, you can still run\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl enable_feature_flag all\"\n      }), \" - it will simply do nothing.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"example\",\n      children: \"Real-world Example\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Rolling upgrade strategy is not specific to any particular deployment tooling\\r\\nor infrastructure. Many orchestration tools have a built-in concept of rolling upgrades\\r\\nwith hooks allowing to perform custom actions before and after each node is upgraded.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"One such orchestration tool is Kubernetes. It can perform a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#rolling-update\",\n        children: \"rolling update\"\n      }), \"\\r\\nof a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"StatefulSet\"\n      }), \". Let's walk through what happens when you want to upgrade RabbitMQ\\r\\ndeployed to Kubernetes using the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/kubernetes/operator/operator-overview\",\n        children: \"Cluster Operator\"\n      }), \".\\r\\nLet's assume the cluster has three nodes, which means the nodes are called \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"server-0\"\n      }), \", \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"server-1\"\n      }), \", and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"server-2\"\n      }), \"\\r\\n(there would be a prefix with the name of your cluster, but that's irrelevant for this example).\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Make sure the existing cluster is running RabbitMQ 3.13 and has all stable feature flags enabled\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Update the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"RabbitmqCluster\"\n        }), \" object with the new image (eg. change from \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"rabbitmq:3.13.7-management\"\n        }), \" to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"rabbitmq:4.0.6-management\"\n        }), \")\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"The Cluster Operator will update the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"StatefulSet\"\n        }), \" object with the new image, triggering the rolling upgrade mechanism built-in to Kubernetes\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Kubernetes will stop \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"server-2\"\n        }), \" (it always goes from the highest index to the lowest)\", \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n            children: [\"The pod will check if it can safely stop, by calling \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n              children: \"rabbitmq-upgrade await_online_quorum_plus_one\"\n            })]\n          }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n            children: \"When that command exits with a zero status, the pod will stop\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Kubernetes will download and start the new OCI image. Effectively, it upgraded the packages of RabbitMQ, Erlang and other system dependencies\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"server-2\"\n        }), \" starts and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./feature-flags#version-compatibility\",\n          children: \"attempts to rejoin the cluster\"\n        }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n          children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n            children: \"it has the same feature flags enabled as it had before it stopped (the state of feature flags is stored in a file)\"\n          }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n            children: [\"feature flags that were introduced in RabbitMQ 4.0 or \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n              children: \"not\"\n            }), \" enabled at this point\"]\n          }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n            children: \"therefore, the upgraded node can join the cluster\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Once the node starts, it synchronizes its metadata (eg. becomes aware of queues declared while it was down), and starts quorum\\r\\nqueue and stream members, which should quickly catch up with the rest of the cluster (any messages published while the node was down\\r\\nare replicated to it, etc)\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Once \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"server-2\"\n        }), \" is running, Kubernetes stops \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"server-1\"\n        }), \" and the process repeats\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Once \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"server-0\"\n        }), \" is upgraded and running, all nodes are running on the new version\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"You can now enable new feature flags and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./upgrade#rebalance\",\n          children: \"rebalance the cluster\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"While the process has many steps (and we skipped some details), you only had to change the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"image\"\n      }), \" value,\\r\\nwait a few minutes and then ran two commands to enable new feature flags and rebalance the cluster.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"When performing a rolling upgrade without Kubernetes, you need to go through the same steps - you just have\\r\\nto do them manually or using some other automation. Using OCI images further simplifies the process since the image\\r\\ncontains the new RabbitMQ version already with a compatible Erlang version and other dependencies.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./versioned_docs/version-4.0/rolling-upgrade.md\n");

/***/ })

}]);