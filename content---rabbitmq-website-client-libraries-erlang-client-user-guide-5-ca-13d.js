"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkrabbitmq_website"] = globalThis["webpackChunkrabbitmq_website"] || []).push([["content---rabbitmq-website-client-libraries-erlang-client-user-guide-5-ca-13d"],{

/***/ "./.docusaurus/docusaurus-plugin-content-docs/client-libraries/site-client-libraries-erlang-client-user-guide-md-5ca.json":
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"id":"erlang-client-user-guide","title":"Erlang RabbitMQ Client library","description":"<!--","source":"@site/client-libraries/erlang-client-user-guide.md","sourceDirName":".","slug":"/erlang-client-user-guide","permalink":"/rabbitmq-website/client-libraries/erlang-client-user-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/rabbitmq/rabbitmq-website/tree/main/client-libraries/erlang-client-user-guide.md","tags":[],"version":"current","frontMatter":{"title":"Erlang RabbitMQ Client library"},"sidebar":"clientLibsSidebar","previous":{"title":"Erlang RabbitMQ client Library","permalink":"/rabbitmq-website/client-libraries/erlang-client"},"next":{"title":"Developer tools","permalink":"/rabbitmq-website/client-libraries/devtools"}}');

/***/ }),

/***/ "./client-libraries/erlang-client-user-guide.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assets: () => (/* binding */ assets),\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   metadata: () => (/* reexport default export from named module */ _site_docusaurus_docusaurus_plugin_content_docs_client_libraries_site_client_libraries_erlang_client_user_guide_md_5ca_json__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var _site_docusaurus_docusaurus_plugin_content_docs_client_libraries_site_client_libraries_erlang_client_user_guide_md_5ca_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.docusaurus/docusaurus-plugin-content-docs/client-libraries/site-client-libraries-erlang-client-user-guide-md-5ca.json\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n\n\nconst frontMatter = {\n\ttitle: 'Erlang RabbitMQ Client library'\n};\nconst contentTitle = 'Erlang RabbitMQ Client library';\n\nconst assets = {\n\n};\n\n\n\nconst toc = [{\n  \"value\": \"Overview\",\n  \"id\": \"overview\",\n  \"level\": 2\n}, {\n  \"value\": \"Dependency\",\n  \"id\": \"dependency\",\n  \"level\": 2\n}, {\n  \"value\": \"Mix\",\n  \"id\": \"mix\",\n  \"level\": 3\n}, {\n  \"value\": \"Rebar 3\",\n  \"id\": \"rebar-3\",\n  \"level\": 3\n}, {\n  \"value\": \"erlang.mk\",\n  \"id\": \"erlangmk\",\n  \"level\": 3\n}, {\n  \"value\": \"Basics\",\n  \"id\": \"basics\",\n  \"level\": 2\n}, {\n  \"value\": \"The amqp_client Application\",\n  \"id\": \"amqp-client-app\",\n  \"level\": 3\n}, {\n  \"value\": \"Key Modules and Concepts\",\n  \"id\": \"key-modules\",\n  \"level\": 3\n}, {\n  \"value\": \"Network Connection Types\",\n  \"id\": \"driver-types\",\n  \"level\": 3\n}, {\n  \"value\": \"Network Client\",\n  \"id\": \"network-client\",\n  \"level\": 4\n}, {\n  \"value\": \"Direct (Erlang Distribution) Client\",\n  \"id\": \"direct-erlang-distribution-client\",\n  \"level\": 4\n}, {\n  \"value\": \"Including Header Files\",\n  \"id\": \"headers\",\n  \"level\": 3\n}, {\n  \"value\": \"Connecting to RabbitMQ\",\n  \"id\": \"connecting\",\n  \"level\": 2\n}, {\n  \"value\": \"Direct (Erlang Distribution) Client\",\n  \"id\": \"direct-erlang-distribution-client-1\",\n  \"level\": 3\n}, {\n  \"value\": \"Connecting to RabbitMQ Using an AMQP URI\",\n  \"id\": \"amqp-uris\",\n  \"level\": 3\n}, {\n  \"value\": \"Creating Channels\",\n  \"id\": \"channels\",\n  \"level\": 2\n}, {\n  \"value\": \"Using AMQP 0-9-1 Methods (Protocol Operations)\",\n  \"id\": \"methods\",\n  \"level\": 2\n}, {\n  \"value\": \"Defining a Topology: Exchanges, Queues, Bindings\",\n  \"id\": \"topology\",\n  \"level\": 2\n}, {\n  \"value\": \"Bindings\",\n  \"id\": \"bindings\",\n  \"level\": 3\n}, {\n  \"value\": \"Deleting Entities\",\n  \"id\": \"deleting-entities\",\n  \"level\": 3\n}, {\n  \"value\": \"Synchronous and Asynchronous Protocol Methods, Calls and Casts\",\n  \"id\": \"call-or-cast\",\n  \"level\": 3\n}, {\n  \"value\": \"Publishing Messages\",\n  \"id\": \"publishing\",\n  \"level\": 2\n}, {\n  \"value\": \"Consumers: Subscribing To Queues Using the &quot;Push API&quot;\",\n  \"id\": \"consumers\",\n  \"level\": 2\n}, {\n  \"value\": \"Cancelling a Consumer\",\n  \"id\": \"cancelling-a-consumer\",\n  \"level\": 3\n}, {\n  \"value\": \"Implementation of Consumers\",\n  \"id\": \"consumers-imlementation\",\n  \"level\": 2\n}, {\n  \"value\": \"Closing Channels And The Connection\",\n  \"id\": \"disconnecting\",\n  \"level\": 2\n}, {\n  \"value\": \"Delivery Flow Control\",\n  \"id\": \"flow\",\n  \"level\": 2\n}, {\n  \"value\": \"Blocked Connections\",\n  \"id\": \"blocked\",\n  \"level\": 2\n}, {\n  \"value\": \"Handling Returned Messages\",\n  \"id\": \"returns\",\n  \"level\": 2\n}, {\n  \"value\": \"Receiving Messages Using the &quot;Fetch API&quot;\",\n  \"id\": \"polling\",\n  \"level\": 2\n}, {\n  \"value\": \"A Basic Example\",\n  \"id\": \"example\",\n  \"level\": 2\n}, {\n  \"value\": \"Compiling Code with Client as a Dependency\",\n  \"id\": \"deployment\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    header: \"header\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.header, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1, {\n        id: \"erlang-rabbitmq-client-library\",\n        children: \"Erlang RabbitMQ Client library\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"overview\",\n      children: \"Overview\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This guide covers an Erlang client for RabbitMQ (\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"a\", {\n        href: \"/tutorials/amqp-concepts\",\n        children: \"AMQP 0-9-1\"\n      }), \").\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This user guide assumes that the reader is familiar with \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"a\", {\n        href: \"/tutorials/amqp-concepts\",\n        children: \"basic concepts of AMQP 0-9-1\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Refer to guides on \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/connections\",\n        children: \"connections\"\n      }), \", \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/channels\",\n        children: \"channels\"\n      }), \", \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/queues\",\n        children: \"queues\"\n      }), \",\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/publishers\",\n        children: \"publishers\"\n      }), \", and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/consumers\",\n        children: \"consumers\"\n      }), \" to learn about those\\r\\nkey RabbitMQ concepts in more details.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Some topics covered in this guide include\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#dependency\",\n          children: \"How to add a dependency\"\n        }), \" on this client\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#basics\",\n          children: \"Usage basics\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"How to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#connecting\",\n          children: \"connect\"\n        }), \" to and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#disconnecting\",\n          children: \"disconnect\"\n        }), \" from a RabbitMQ node\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"How to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#channels\",\n          children: \"open a channel\"\n        }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#methods\",\n          children: \"perform protocol operations\"\n        }), \" on it\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"How to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#topology\",\n          children: \"define a topology\"\n        }), \": declare queues, exchanges and bindings\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#publishing\",\n          children: \"Publishing\"\n        }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#consumers\",\n          children: \"consumption\"\n        }), \" of messages\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Handling of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#returns\",\n          children: \"returned messages\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"and more.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"dependency\",\n      children: \"Dependency\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The client library is named \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_client\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://hex.pm/packages/amqp_client\",\n        children: \"distributed via Hex.pm\"\n      }), \"\\r\\ntogether with its key dependency, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://hex.pm/packages/rabbit_common\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"rabbit-common\"\n        })\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Below are dependency snippets to be used with popular build tools: Mix,\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://www.rebar3.org/docs/getting-started\",\n        children: \"Rebar 3\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://erlang.mk\",\n        children: \"erlang.mk\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"mix\",\n      children: \"Mix\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-elixir\",\n        children: \"{:rabbit_common, \\\"~> 3.8\\\"}\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"rebar-3\",\n      children: \"Rebar 3\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"{rabbit_common, \\\"&version-erlang-client;\\\"}\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"erlangmk\",\n      children: \"erlang.mk\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-makefile\",\n        children: \"dep_rabbit_common = hex &version-erlang-client;\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"basics\",\n      children: \"Basics\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The basic usage of the client follows these broad steps:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Make sure the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"amqp_client\"\n        }), \" Erlang application is started\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Establish a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"/docs/connections\",\n          children: \"connection\"\n        }), \" to a RabbitMQ node\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Open a new channel on the connection\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Execute \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"https://github.com/rabbitmq/amqp-0.9.1-spec/blob/main/pdf/amqp-xml-doc0-9-1.pdf\",\n          children: \"AMQP 0-9-1 commands\"\n        }), \" with a channel such as\\r\\ndeclaring exchanges and queues, defining bindings between them, publishing messages,\\r\\nregistering consumers (subscribing), and so on\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Register optional event handlers such as \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#returns\",\n          children: \"returned message handler\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"When no longer required, close the channel and the connection\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"amqp-client-app\",\n      children: \"The amqp_client Application\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"RabbitMQ Erlang client is an Erlang application named \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_client\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"As with any Erlang application, to begin using the client it's necessary to first\\r\\nmake sure it is started:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"application:ensure_started(amqp_client).\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"key-modules\",\n      children: \"Key Modules and Concepts\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The main two modules in the client library are:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"amqp_connection\"\n        }), \", which is used to open a connection to a\\r\\nRabbitMQ node and open channels on it\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"amqp_channel\"\n        }), \", which exposes most AMQP 0-9-1 operations such as queue declaration\\r\\nor consumer registration\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Once a connection has been established and successfully \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/access-control\",\n        children: \"authenticated\"\n      }), \",\\r\\nand a channel has been opened, an application will typically use the\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_channel:call/{2,3}\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_channel:cast/{2,3}\"\n      }), \" functions\\r\\ntogether with AMQP 0-9-1 protocol method records to perform most operations.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Several additional modules make it possible for applications to react to certain events.\\r\\nThey will be covered later in this guide.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The library is made up of two layers:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"A high level logical layer that follows the AMQP 0-9-1 protocol and operation execution model\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"A low-level protocol implementation layer that is responsible for communicating with RabbitMQ nodes\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"driver-types\",\n      children: \"Network Connection Types\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"AMQP 0-9-1 clients connect to RabbitMQ using TCP. One AMQP 0-9-1 connection uses one TCP connection\\r\\nunder the hood. However, the Erlang client is unique in that it provides\\r\\nan alternative way of communicating with RabbitMQ nodes.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"network-client\",\n      children: \"Network Client\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Much like other clients, this library provides a TCP-based client that uses a TCP connection\\r\\nto transfer serialised protocol frames to the server. This client is called\\r\\nthe network client and most applications should use.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To use the network client, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#connecting\",\n        children: \"start a connection\"\n      }), \" using \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_connection:start/1\"\n      }), \" with the\\r\\nparameter set to an \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#amqp_params_network\"\n      }), \" record.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"direct-erlang-distribution-client\",\n      children: \"Direct (Erlang Distribution) Client\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Alternatively, Erlang distribution connections can be used instead of separate TCP\\r\\nconnections. This communication method assumes that the application that uses\\r\\nthe client runs on the same Erlang cluster as RabbitMQ nodes.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The use of direct client should be limited to applications that are deployed\\r\\nside by side with RabbitMQ. \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/shovel\",\n        children: \"Shovel\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/federation\",\n        children: \"Federation\"\n      }), \"\\r\\nplugins are two examples of such applications.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"In most other cases, developers should prefer the more traditional network client covered above.\\r\\nIt will be easier to reason about for operators and developers not familiar with Erlang.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To use the direct driver, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#connecting\",\n        children: \"start a connection\"\n      }), \" using \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_connection:start/1\"\n      }), \" with the\\r\\nparameter set to an \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#amqp_params_direct\"\n      }), \" record.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"headers\",\n      children: \"Including Header Files\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The Erlang client uses a number of record definitions which you\\r\\nwill encounter in this guide. These records fall into two broad\\r\\ncategories:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Generated AMQP 0-9-1 method definitions\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Definitions of data structures that are commonly used throughout the client\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"To gain access to these records, you need to include the\\r\\namqp_client.hrl in every module that uses the Erlang client:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"-include(\\\"amqp_client.hrl\\\").\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"connecting\",\n      children: \"Connecting to RabbitMQ\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_connection\"\n      }), \" module is used to start a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/connections\",\n        children: \"connection\"\n      }), \" to a RabbitMQ node.\\r\\nIn this example we will use a network connection, which is the recommended\\r\\noption for most use cases:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"{ok, Connection} = amqp_connection:start(#amqp_params_network{})\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This function returns an \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"{ok, Connection}\"\n      }), \" pair, where \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Connection\"\n      }), \" is the\\r\\npid of a process that maintains a permanent connection.\\r\\nThis pid will be used to open channels on the connection and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#disconnecting\",\n        children: \"close the connection\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In case of an error, the above call returns an \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"{error, Error}\"\n      }), \" pair.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#amqp_params_network\"\n      }), \" record sets the following default values:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"table\", {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"thead\", {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"Parameter\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"Default Value\"\n          })]\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tbody\", {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"username\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"guest\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"password\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"guest\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"virtual_host\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"/\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"host\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"localhost\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"port\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"5672\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"channel_max\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"2047\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"frame_max\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"0\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"a\", {\n              href: \"/docs/heartbeats\",\n              children: \"heartbeat\"\n            })\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"0\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"a\", {\n              href: \"/docs/ssl\",\n              children: \"ssl_options\"\n            })\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"none\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"auth_mechanisms\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"td\", {\n            children: [\"[fun amqp_auth_mechanisms\", \":plain\", \"/3, fun amqp_auth_mechanisms\", \":amqplain\", \"/3]\"]\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"client_properties\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"[]\"\n          })]\n        })]\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"These values are only the defaults that will work with an out of\\r\\nthe box RabbitMQ node running on the same host. If the target node or the\\r\\nenvironment has been configured differently, these values can be\\r\\noverridden to match the actual deployment scenario.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"TLS options can also be specified globally using the\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"ssl_options\"\n      }), \" environment key for the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_client\"\n      }), \" application.\\r\\nThey will be merged with the TLS parameters from the URI (the latter will take precedence).\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"direct-erlang-distribution-client-1\",\n      children: \"Direct (Erlang Distribution) Client\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Applications that are deployed inside the same Erlang cluster as the\\r\\nRabbitMQ, such as RabbitMQ plugins, can start a direct connection\\r\\nthat bypasses network serialisation and relies on Erlang distribution\\r\\nfor data transfers.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To start a direct connection, use \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_connection:start/1\"\n      }), \" with the parameter\\r\\nset to an \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#amqp_params_direct\"\n      }), \" record:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"{ok, Connection} = amqp_connection:start(#amqp_params_direct{})\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Credentials are optional for direct connections, since Erlang\\r\\ndistribution relies on \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/clustering#erlang-cookie\",\n        children: \"a shared secret\"\n      }), \", the Erlang cookie, for authentication.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"If a username and password are provided then they will be used for authentication and\\r\\nmade available to authentication backends.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"If only a username is supplied, then the user is considered trusted and logged in\\r\\nunconditionally.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"If neither username nor password are provided, then the connection will be considered\\r\\nto be from a fully trusted user which can connect to any virtual host and has\\r\\nfull \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/access-control\",\n        children: \"permissions\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#amqp_params_direct\"\n      }), \" record sets the following default values:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"table\", {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"thead\", {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"Parameter\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"Default Value\"\n          })]\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n          children: \"username\"\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n          children: \"none\"\n        })]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n          children: \"password\"\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n          children: \"none\"\n        })]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n          children: \"virtual_host\"\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n          children: \"/\"\n        })]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n          children: \"node\"\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n          children: \"node()\"\n        })]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n          children: \"client_properties\"\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n          children: \"[]\"\n        })]\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"amqp-uris\",\n      children: \"Connecting to RabbitMQ Using an AMQP URI\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Instead of working with records such \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#amqp_params_network\"\n      }), \" directly,\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"a\", {\n        href: \"/docs/uri-spec\",\n        children: \"AMQP URIs\"\n      }), \" may be used.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_uri:parse/1\"\n      }), \" function is provided for this purpose.\\r\\nIt parses an URI and returns the equivalent \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#amqp_params_network\"\n      }), \" or \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#amqp_params_direct\"\n      }), \" record.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Diverging from the spec, if the hostname is omitted, the\\r\\nconnection is assumed to be direct and an \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#amqp_params_direct{}\"\n      }), \"\\r\\nrecord is returned.  In addition to the standard host, port, user,\\r\\npassword and vhost parameters, extra parameters may be specified\\r\\nvia the query string (e.g. \\\"?heartbeat=5\\\" to configure a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/heartbeats\",\n        children: \"heartbeat timeout\"\n      }), \").\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"channels\",\n      children: \"Creating Channels\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Once a connection has been established, use the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_connection\"\n      }), \" module\\r\\nto open one or more \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/channels\",\n        children: \"channels\"\n      }), \" that will be used\\r\\nto define the topology, publish and consume messages:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"{ok, Channel} = amqp_connection:open_channel(Connection)\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This function takes the pid of the connection process and returns\\r\\na \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"{ok, Channel}\"\n      }), \" pair, where \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Channel\"\n      }), \" is a pid that represents\\r\\na channel and will be used to execute protocol commands.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"methods\",\n      children: \"Using AMQP 0-9-1 Methods (Protocol Operations)\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The client library's primary way of interacting with RabbitMQ nodes is by\\r\\nsending and handling \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/specification\",\n        children: \"AMQP 0-9-1 methods\"\n      }), \"\\r\\n(also referred to as \\\"commands\\\" in this guide) that are represented by records.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The client tries to use sensible default values for each record.\\r\\nFor example, when using the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#'exchange.declare'{}\"\n      }), \" method to declare a transient exchange,\\r\\nit is sufficient to only specify a name:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"#'exchange.declare'{exchange = <<\\\"my_exchange\\\">>}\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The above example is equivalent to this:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"#'exchange.declare'{exchange    = <<\\\"my_exchange\\\">>,\\r\\n                    type        = <<\\\"direct\\\">>,\\r\\n                    passive     = false,\\r\\n                    durable     = false,\\r\\n                    auto_delete = false,\\r\\n                    internal    = false,\\r\\n                    nowait      = false,\\r\\n                    arguments   = []}\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"topology\",\n      children: \"Defining a Topology: Exchanges, Queues, Bindings\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Once a channel has been established, the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_channel\"\n      }), \" module can\\r\\nbe used to manage the fundamental objects within AMQP, namely\\r\\nexchanges and queues. The following function creates an exchange\\r\\ncalled my_exchange, which by default, is the direct exchange:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"Declare = #'exchange.declare'{exchange = <<\\\"my_exchange\\\">>},\\r\\n#'exchange.declare_ok'{} = amqp_channel:call(Channel, Declare)\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Similarly, a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/queues#durability\",\n        children: \"transient\"\n      }), \" queue called \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"my_queue\"\n      }), \" is created by this code:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"Declare = #'queue.declare'{queue = <<\\\"my_queue\\\">>},\\r\\n#'queue.declare_ok'{} = amqp_channel:call(Channel, Declare)\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"To declare a durable queue:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"Declare = #'queue.declare'{\\r\\n  queue = <<\\\"my_queue\\\">>,\\r\\n  durable = true\\r\\n},\\r\\n#'queue.declare_ok'{} = amqp_channel:call(Channel, Declare)\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In some cases an application wants to use a transient queue and is not interested in the actual name\\r\\nof the queue. In this case, it is possible to let the broker generate a random name for a\\r\\nqueue. To do this, use a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#'queue.declare'{}\"\n      }), \" method and leave the\\r\\nqueue attribute undefined. Specifying a blank string for queue name\\r\\nwould have the same effect.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"#'queue.declare_ok'{queue = Queue} = amqp_channel:call(Channel, #'queue.declare'{})\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The server will generate a queue name unique in this cluster and return this name as\\r\\npart of the acknowledgement.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"bindings\",\n      children: \"Bindings\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To create a routing rule from an exchange to a queue, the\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#'queue.bind'{}\"\n      }), \" command is used:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"Binding = #'queue.bind'{queue       = Queue,\\r\\n                        exchange    = Exchange,\\r\\n                        routing_key = RoutingKey},\\r\\n#'queue.bind_ok'{} = amqp_channel:call(Channel, Binding)\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"When this routing rule is no longer required, this route can be\\r\\ndeleted using the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#'queue.unbind'{}\"\n      }), \" command:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"Binding = #'queue.unbind'{queue       = Queue,\\r\\n                          exchange    = Exchange,\\r\\n                          routing_key = RoutingKey},\\r\\n#'queue.unbind_ok'{} = amqp_channel:call(Channel, Binding)\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"deleting-entities\",\n      children: \"Deleting Entities\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"An exchange can be deleted by the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#'exchange.delete'{}\"\n      }), \" command:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"Delete = #'exchange.delete'{exchange = <<\\\"my_exchange\\\">>},\\r\\n#'exchange.delete_ok'{} = amqp_channel:call(Channel, Delete)\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Similarly, a queue is deleted using the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#'queue.delete'{}\"\n      }), \" command:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"Delete = #'queue.delete'{queue = <<\\\"my_queue\\\">>},\\r\\n#'queue.delete_ok'{} = amqp_channel:call(Channel, Delete)\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"call-or-cast\",\n      children: \"Synchronous and Asynchronous Protocol Methods, Calls and Casts\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Note that the above examples use \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_channel:call/2\"\n      }), \".\\r\\nThis is because they use synchronous AMQP 0-9-1 methods that produce a response\\r\\n(unlike a group of methods called asynchronous methods).\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"It is generally advisable to use \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_channel:call/{2,3}\"\n      }), \" for synchronous methods,\\r\\nrather than \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_channel:cast/{2,3}\"\n      }), \", even though both functions work with both\\r\\nsync and async methods.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"One difference between the two functions is that \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_channel:call/{2,3}\"\n      }), \" blocks the calling\\r\\nprocess until the reply comes back from the server (for sync methods) or the method\\r\\nhas been sent on the wire (for async methods), whereas \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_channel:cast/{2,3}\"\n      }), \"\\r\\nreturns an 'ok' immediately.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Thus, only by using \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_channel:call/{2,3}\"\n      }), \" can we verify that the server\\r\\nhas acknowledged our command.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"publishing\",\n      children: \"Publishing Messages\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To publish a message to an exchange with a particular routing key,\\r\\nthe \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#'basic.publish'{}\"\n      }), \" method.\\r\\nMessages are represented using the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#amqp_msg{}\"\n      }), \" record:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"Payload = <<\\\"foobar\\\">>,\\r\\nPublish = #'basic.publish'{exchange = X, routing_key = Key},\\r\\namqp_channel:cast(Channel, Publish, #amqp_msg{payload = Payload})\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"By default, the properties field of the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#amqp_msg{}\"\n      }), \" record contains\\r\\na minimal set of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/publishers#message-properties\",\n        children: \"message properties\"\n      }), \" as a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#'P_basic'{}\"\n      }), \" properties record.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"If an application needs to override any of the defaults, for example,\\r\\nto send persistent messages, the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#amqp_msg{}\"\n      }), \" needs to\\r\\nbe constructed accordingly:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"Payload = <<\\\"foobar\\\">>,\\r\\nPublish = #'basic.publish'{exchange = X, routing_key = Key},\\r\\nProps = #'P_basic'{delivery_mode = 2}, %% persistent message\\r\\nMsg = #amqp_msg{props = Props, payload = Payload},\\r\\namqp_channel:cast(Channel, Publish, Msg)\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Full list of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/publishers#message-properties\",\n        children: \"message properties\"\n      }), \" can be found\\r\\nin the Publishers guide.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The AMQP 0-9-1 \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#'basic.publish'\"\n      }), \" method is \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#call-or-cast\",\n        children: \"asynchronous\"\n      }), \":\\r\\nthe server will not send a response to it. However, clients can opt in\\r\\nto have \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/publishers#unroutable\",\n        children: \"unroutable messages\"\n      }), \" returned to them.\\r\\nThis is described in the section on \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#returns\",\n        children: \"return message handlers\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The above example does not use \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/confirms\",\n        children: \"Publisher Confirms\"\n      }), \".\\r\\nTo await for all outstanding publishes to be confirmed after publishing\\r\\na batch of messages, use \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_channel:wait_for_confirms/2\"\n      }), \" function.\\r\\nIt will return a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"true\"\n      }), \" if all outstanding publishes were successfully confirmed\\r\\nor a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"timeout\"\n      }), \" if timeout has occurred.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Note that waiting after every published message is extremely inefficient\\r\\nand unnecessary. A more optimal way would be to publish a batch of messages\\r\\nand await their confirmation. If some publishes were not confirmed in time,\\r\\nthe entire last batch can be republished.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"consumers\",\n      children: \"Consumers: Subscribing To Queues Using the \\\"Push API\\\"\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Applications can subscribe to be delivered messages routed to a queue. This \\\"push API\\\" is the\\r\\nrecommended way of consuming messages (the other being \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#polling\",\n        children: \"polling\"\n      }), \", which should be\\r\\navoided when possible).\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To add a consumer to a queue (subscribe to a queue), the\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#'basic.consume'{}\"\n      }), \" method is used in one of two ways:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"#'basic.consume_ok'{consumer_tag = Tag} =\\r\\n  amqp_channel:subscribe(Channel, #'basic.consume'{queue = Q}, Consumer)\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"or\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"%% A consumer process is not provided so the calling\\r\\n%% process (`self()`) will be the consumer\\r\\n#'basic.consume_ok'{consumer_tag = Tag} =\\r\\n  amqp_channel:call(Channel, #'basic.consume'{queue = Q})\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The consumer argument is the pid of a process to which the client library\\r\\nwill deliver messages.\\r\\nThis can be an arbitrary Erlang process, including the process that initiated\\r\\nthe connection.\\r\\nThe \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#'basic.consume_ok'{}\"\n      }), \" return contains a consumer tag. The tag is a consumer\\r\\n(subscription) identifier that is used to cancel the consumer.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This is used at a later point in time to cancel the consumer.\\r\\nThis notification is sent both to the process that created the subscription\\r\\n(as the return value to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_channel:subscribe/3\"\n      }), \") and\\r\\nas a message to the consumer process.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"When a consumer process is subscribed to a queue, it will receive\\r\\nmessages in its mailbox. An example receive loop looks like this:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"loop(Channel) ->\\r\\n    receive\\r\\n        %% This is the first message received\\r\\n        #'basic.consume_ok'{} ->\\r\\n            loop(Channel);\\r\\n\\r\\n        %% This is received when the subscription is cancelled\\r\\n        #'basic.cancel_ok'{} ->\\r\\n            ok;\\r\\n\\r\\n        %% A delivery\\r\\n        {#'basic.deliver'{delivery_tag = Tag}, Content} ->\\r\\n            %% Do something with the message payload\\r\\n            %% (some work here)\\r\\n\\r\\n            %% Ack the message\\r\\n            amqp_channel:cast(Channel, #'basic.ack'{delivery_tag = Tag}),\\r\\n\\r\\n            %% Loop\\r\\n            loop(Channel)\\r\\n    end.\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"In the above example, the process consumes the consumer registration (subscription)\\r\\nnotification and then proceeds to wait for delivery messages to\\r\\narrive in its process mailbox.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"When messages are received, the loop does something useful with the message and\\r\\nsends an \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/confirms\",\n        children: \"acknowledgement\"\n      }), \" back to the server.\\r\\nIf the consumer is cancelled, a cancellation notification will be sent to the\\r\\nconsumer process. In this scenario, the receive loop just\\r\\nexits. If the application does not wish to explicitly acknowledge\\r\\nmessage receipts, it can use automatic acknowledgement mode.\\r\\nFor that, set the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"no_ack\"\n      }), \" property of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#'basic.consume'\"\n      }), \" record\\r\\nto \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"true\"\n      }), \". When in automatic acknowledgement mode, consumers do not\\r\\nacknowledge deliveries: RabbitMQ will consider them delivered\\r\\nimmediately after sending them down the connection.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"cancelling-a-consumer\",\n      children: \"Cancelling a Consumer\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To cancel a consumer, use the consumer tag returned\\r\\nwith the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#'basic.consume_ok'{}\"\n      }), \" response:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"amqp_channel:call(Channel, #'basic.cancel'{consumer_tag = Tag})\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"A cancelled consumer may still receive \\\"in flight\\\" deliveries, e.g. those\\r\\ncurrently in TCP buffers at the time of consumer cancellation.\\r\\nHowever, eventually — and usually shortly after — consumer cancellation there\\r\\nwill be no further deliveries to its handling process.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"consumers-imlementation\",\n      children: \"Implementation of Consumers\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The channel uses a module implementing the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_gen_consumer\"\n      }), \"\\r\\nbehaviour to determine how it should handle consumer events.\\r\\nEffectively, this module handles client-side\\r\\nconsumer registration and ensures routing of deliveries to the appropriate consumers.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"For instance, the default consumer module, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_selective_consumer\"\n      }), \",\\r\\nkeeps track of which processes are subscribed to which queues and routes deliveries appropriately;\\r\\nin addition, if the channel gives it a delivery for an unknown\\r\\nconsumer, it will pass it to a default consumer, should one be registered.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"By contrast, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_direct_consumer\"\n      }), \" simply forwards all the\\r\\nmessages it receives from the channel to its only registered consumer.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The consumer module for a channel is chosen when the channel is\\r\\nopened by setting the second parameter to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_connection:open_channel/2\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The consumer module implements the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_gen_consumer\"\n      }), \" behaviour and thus implements functions to handle\\r\\nreceiving \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"basic.consume\"\n      }), \", \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"basic.consume_ok\"\n      }), \", \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"basic.cancel\"\n      }), \", \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"basic.cancel_ok\"\n      }), \" methods as well\\r\\ndelivery of published messages.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"disconnecting\",\n      children: \"Closing Channels And The Connection\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"When a channel is no longer required, a client should close it.\\r\\nThis is achieved using \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_channel:close/1\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"amqp_channel:close(Channel)\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To close the connection, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_connection:close/1\"\n      }), \" is used:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"amqp_connection:close(Connection)\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Closing a connection will automatically implicitly close all channels\\r\\non that connection.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Both the #'channel.close'\", \" and #'connection.close'\", \" commands\\r\\ntake the arguments \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"reply_code\"\n      }), \" (an integer) and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"reply_text\"\n      }), \" (a binary),\\r\\nwhich can be set by the client depending on the reason why\\r\\nthe channel or connection is being closed.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In most cases the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"reply_code\"\n      }), \" should set to 200 to indicate a normal shutdown.\\r\\nThe \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"reply_text\"\n      }), \" attribute is just an arbitrary string, that the server\\r\\nmay or may not log. If a client wants to set to a different reply\\r\\ncode and/or text, it can use the overloaded functions\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_channel:close/3\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_connection:close/3\"\n      }), \" respectively.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"flow\",\n      children: \"Delivery Flow Control\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"By default, there is no flow control within a channel other than\\r\\nnormal TCP back-pressure. A consumer can set the size of the\\r\\nprefetch buffer that the broker will maintain for outstanding\\r\\nunacknowledged messages on a single channel. This is achieved\\r\\nusing the #'basic.qos'\", \" command:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"amqp_channel:call(Channel, #'basic.qos'{prefetch_count = Prefetch})\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Applications are recommended to use a prefetch. Learn more in the\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/confirms\",\n        children: \"Publisher Confirms and Consumer Acknowledgements guide\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"blocked\",\n      children: \"Blocked Connections\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"When a node detects that it is below a certain available resource threshold,\\r\\nit may \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"a\", {\n        href: \"/docs/alarms\",\n        children: \"choose to stop reading from publishers' network sockets\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"RabbitMQ supports \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/connection-blocked\",\n        children: \"a mechanism to allow clients to be told this has taken place\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Use \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_connection:register_blocked_handler/2\"\n      }), \" giving the\\r\\npid of a process to which \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#'connection.blocked'{}\"\n      }), \" and\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#'connection.unblocked'{}\"\n      }), \" should may be sent.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"returns\",\n      children: \"Handling Returned Messages\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The broker will return undeliverable messages back to the\\r\\noriginating client. These are messages published either with the\\r\\nimmediate or mandatory flags set. In order for the application to\\r\\nget notified of a return, it must register a callback process\\r\\nthat can process \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#'basic.return'{}\"\n      }), \" frames.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Here is an example of unrouteable message handling:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"amqp_channel:register_return_handler(Channel, self()),\\r\\namqp_channel:call(Channel, #'exchange.declare'{exchange = X}),\\r\\nPublish = #'basic.publish'{exchange = X, routing_key = SomeKey,\\r\\n                          mandatory = true},\\r\\namqp_channel:call(Channel, Publish, #amqp_msg{payload = Payload}),\\r\\nreceive\\r\\n    {BasicReturn, Content} ->\\r\\n        #'basic.return'{reply_text = <<\\\"unroutable\\\">>, exchange = X} = BasicReturn\\r\\n        %% Do something with the returned message\\r\\nend\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"polling\",\n      children: \"Receiving Messages Using the \\\"Fetch API\\\"\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"It is also possible to retrieve individual messages on demand (\\\"pull API\\\" a.k.a. polling).\\r\\nThis approach to consumption is highly inefficient as it is effectively polling\\r\\nand applications repeatedly have to ask for results even if the vast majority of the requests\\r\\nyield no results. Therefore using this approach \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"is highly discouraged\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This is achieved using the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#'basic.get'{}\"\n      }), \" command:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"Get = #'basic.get'{queue = Q, no_ack = true},\\r\\n{#'basic.get_ok'{}, Content} = amqp_channel:call(Channel, Get),\\r\\n#amqp_msg{payload = Payload} = Content\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The payload that is returned is an Erlang binary, and it is up to\\r\\nthe application to decode it, as the structure of this content is\\r\\nopaque to both client library and the server.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"If the queue were empty when the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#'basic.get'{}\"\n      }), \" command was\\r\\ninvoked, then the channel will return an \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#'basic.get_empty'\"\n      }), \"\\r\\nresult, as illustrated here:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"#'basic.get_empty'{} = amqp_channel:call(Channel, Get)\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Note that the previous example sets the no_ack flag on the\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#'basic.get'{}\"\n      }), \" command. This tells the broker that the receiver\\r\\nwill not send an acknowledgement of the message. In doing so, the\\r\\nbroker can absolve itself of the responsibility for delivery -\\r\\nonce it believes it has delivered a message, then it is free to\\r\\nassume that consuming application has taken responsibility for\\r\\nit. In general, a lot of applications will not want these\\r\\nsemantics, rather, they will want to explicitly acknowledge the\\r\\nreceipt of a message. This is done with the #'basic.ack'\", \"\\r\\ncommand, where the no_ack field is turned off by default:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"Get = #'basic.get'{queue = Q},\\r\\n{#'basic.get_ok'{delivery_tag = Tag}, Content}\\r\\n    = amqp_channel:call(Channel, Get),\\r\\n%% Do something with the message payload.......and then ack it\\r\\namqp_channel:cast(Channel, #'basic.ack'{delivery_tag = Tag})\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Notice that the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"#'basic.ack'{}\"\n      }), \" method was sent using\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_channel:cast/2\"\n      }), \" instead of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp_channel:call/2\"\n      }), \". This is\\r\\nbecause acknowledgements are entirely asynchronous and the server\\r\\nwill not produce a response for them.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"example\",\n      children: \"A Basic Example\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Below is a complete example of basic usage of the library. For the sake of simplicity\\r\\nit does not use \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/confirms\",\n        children: \"publisher confirms\"\n      }), \" and uses a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#polling\",\n        children: \"polling consumer\"\n      }), \" which performs\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/confirms\",\n        children: \"manual acknowledgements\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"-module(amqp_example).\\r\\n\\r\\n-include(\\\"amqp_client.hrl\\\").\\r\\n\\r\\n-compile([export_all]).\\r\\n\\r\\ntest() ->\\r\\n    %% Start a network connection\\r\\n    {ok, Connection} = amqp_connection:start(#amqp_params_network{}),\\r\\n    %% Open a channel on the connection\\r\\n    {ok, Channel} = amqp_connection:open_channel(Connection),\\r\\n\\r\\n    %% Declare a queue\\r\\n    #'queue.declare_ok'{queue = Q}\\r\\n        = amqp_channel:call(Channel, #'queue.declare'{}),\\r\\n\\r\\n    %% Publish a message\\r\\n    Payload = <<\\\"foobar\\\">>,\\r\\n    Publish = #'basic.publish'{exchange = <<>>, routing_key = Q},\\r\\n    amqp_channel:cast(Channel, Publish, #amqp_msg{payload = Payload}),\\r\\n\\r\\n    %% Poll for a message\\r\\n    Get = #'basic.get'{queue = Q},\\r\\n    {#'basic.get_ok'{delivery_tag = Tag}, Content}\\r\\n         = amqp_channel:call(Channel, Get),\\r\\n\\r\\n    %% Do something with the message payload\\r\\n    %% (some work here)\\r\\n\\r\\n    %% Ack the message\\r\\n    amqp_channel:cast(Channel, #'basic.ack'{delivery_tag = Tag}),\\r\\n\\r\\n    %% Close the channel\\r\\n    amqp_channel:close(Channel),\\r\\n    %% Close the connection\\r\\n    amqp_connection:close(Connection),\\r\\n\\r\\n    ok.\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"In this example, a queue is created with a server generated name\\r\\nand a message is published directly to the queue. This makes use\\r\\nof the fact that every queue is bound to the default exchange via\\r\\nits own queue name. The message is then dequeued and acknowledged.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"deployment\",\n      children: \"Compiling Code with Client as a Dependency\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The client build process produces two deployment archives:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"amqp_client.ez, which contains all of the client library modules\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"rabbit_common.ez, which contains the common modules from the server that are required at run-time\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Both dependencies can be provisioned using build tools such as \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://www.rebar3.org/docs/getting-started\",\n        children: \"Rebar 3\"\n      }), \"\\r\\nor \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://erlang.mk\",\n        children: \"erlang.mk\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"For the sake of an example. let's assume that the dependency management tool\\r\\nused compiles dependencies under the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"./deps\"\n      }), \" directory.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Then to compile the example code manually, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"erlc\"\n      }), \" can be used with \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"ERL_LIBS\"\n      }), \" pointing to the\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"./deps\"\n      }), \" directory:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"ERL_LIBS=deps erlc -o ebin amqp_example.erl\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"And then to run your application you could set the Erlang run-time like this:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"ERL_LIBS=deps erl -pa ebin\\r\\n# => Erlang/OTP 23 [erts-11.0] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:16]\\r\\n# =>\\r\\n# => Eshell V11.0  (abort with ^G)\\r\\n# => 1> amqp_example:test().\\r\\n# => ok\\r\\n# => 2>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client-libraries/erlang-client-user-guide.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanM/MjA0NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbXBvcnQge01EWENvbXBvbmVudHN9IGZyb20gJ21keC90eXBlcy5qcydcbiAqIEBpbXBvcnQge0NvbXBvbmVudCwgUmVhY3RFbGVtZW50LCBSZWFjdE5vZGV9IGZyb20gJ3JlYWN0J1xuICovXG5cbi8qKlxuICogQGNhbGxiYWNrIE1lcmdlQ29tcG9uZW50c1xuICogICBDdXN0b20gbWVyZ2UgZnVuY3Rpb24uXG4gKiBAcGFyYW0ge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSBjdXJyZW50Q29tcG9uZW50c1xuICogICBDdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgY29udGV4dC5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMuXG4gKlxuICogQHR5cGVkZWYgUHJvcHNcbiAqICAgQ29uZmlndXJhdGlvbiBmb3IgYE1EWFByb3ZpZGVyYC5cbiAqIEBwcm9wZXJ0eSB7UmVhY3ROb2RlIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NoaWxkcmVuXVxuICogICBDaGlsZHJlbiAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbiB8IG51bGwgfCB1bmRlZmluZWR9IFtkaXNhYmxlUGFyZW50Q29udGV4dD1mYWxzZV1cbiAqICAgVHVybiBvZmYgb3V0ZXIgY29tcG9uZW50IGNvbnRleHQgKGRlZmF1bHQ6IGBmYWxzZWApLlxuICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuLyoqIEB0eXBlIHtSZWFkb25seTxNRFhDb21wb25lbnRzPn0gKi9cbmNvbnN0IGVtcHR5Q29tcG9uZW50cyA9IHt9XG5cbmNvbnN0IE1EWENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KGVtcHR5Q29tcG9uZW50cylcblxuLyoqXG4gKiBHZXQgY3VycmVudCBjb21wb25lbnRzIGZyb20gdGhlIE1EWCBDb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz4gfCBNZXJnZUNvbXBvbmVudHMgfCBudWxsIHwgdW5kZWZpbmVkfSBbY29tcG9uZW50c11cbiAqICAgQWRkaXRpb25hbCBjb21wb25lbnRzIHRvIHVzZSBvciBhIGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyB0aGVtIChvcHRpb25hbCkuXG4gKiBAcmV0dXJucyB7TURYQ29tcG9uZW50c31cbiAqICAgQ3VycmVudCBjb21wb25lbnRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlTURYQ29tcG9uZW50cyhjb21wb25lbnRzKSB7XG4gIGNvbnN0IGNvbnRleHRDb21wb25lbnRzID0gUmVhY3QudXNlQ29udGV4dChNRFhDb250ZXh0KVxuXG4gIC8vIE1lbW9pemUgdG8gYXZvaWQgdW5uZWNlc3NhcnkgdG9wLWxldmVsIGNvbnRleHQgY2hhbmdlc1xuICByZXR1cm4gUmVhY3QudXNlTWVtbyhcbiAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBDdXN0b20gbWVyZ2UgdmlhIGEgZnVuY3Rpb24gcHJvcFxuICAgICAgaWYgKHR5cGVvZiBjb21wb25lbnRzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBjb21wb25lbnRzKGNvbnRleHRDb21wb25lbnRzKVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gey4uLmNvbnRleHRDb21wb25lbnRzLCAuLi5jb21wb25lbnRzfVxuICAgIH0sXG4gICAgW2NvbnRleHRDb21wb25lbnRzLCBjb21wb25lbnRzXVxuICApXG59XG5cbi8qKlxuICogUHJvdmlkZXIgZm9yIE1EWCBjb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8UHJvcHM+fSBwcm9wZXJ0aWVzXG4gKiAgIFByb3BlcnRpZXMuXG4gKiBAcmV0dXJucyB7UmVhY3RFbGVtZW50fVxuICogICBFbGVtZW50LlxuICogQHNhdGlzZmllcyB7Q29tcG9uZW50fVxuICovXG5leHBvcnQgZnVuY3Rpb24gTURYUHJvdmlkZXIocHJvcGVydGllcykge1xuICAvKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuICBsZXQgYWxsQ29tcG9uZW50c1xuXG4gIGlmIChwcm9wZXJ0aWVzLmRpc2FibGVQYXJlbnRDb250ZXh0KSB7XG4gICAgYWxsQ29tcG9uZW50cyA9XG4gICAgICB0eXBlb2YgcHJvcGVydGllcy5jb21wb25lbnRzID09PSAnZnVuY3Rpb24nXG4gICAgICAgID8gcHJvcGVydGllcy5jb21wb25lbnRzKGVtcHR5Q29tcG9uZW50cylcbiAgICAgICAgOiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgfHwgZW1wdHlDb21wb25lbnRzXG4gIH0gZWxzZSB7XG4gICAgYWxsQ29tcG9uZW50cyA9IHVzZU1EWENvbXBvbmVudHMocHJvcGVydGllcy5jb21wb25lbnRzKVxuICB9XG5cbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgTURYQ29udGV4dC5Qcm92aWRlcixcbiAgICB7dmFsdWU6IGFsbENvbXBvbmVudHN9LFxuICAgIHByb3BlcnRpZXMuY2hpbGRyZW5cbiAgKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);