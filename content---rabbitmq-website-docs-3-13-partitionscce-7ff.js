"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkrabbitmq_website"] = globalThis["webpackChunkrabbitmq_website"] || []).push([["content---rabbitmq-website-docs-3-13-partitionscce-7ff"],{

/***/ "./.docusaurus/docusaurus-plugin-content-docs/default/site-versioned-docs-version-3-13-partitions-md-cce.json":
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"id":"partitions","title":"Clustering and Network Partitions","description":"<!--","source":"@site/versioned_docs/version-3.13/partitions.md","sourceDirName":".","slug":"/partitions","permalink":"/rabbitmq-website/docs/3.13/partitions","draft":false,"unlisted":false,"editUrl":"https://github.com/rabbitmq/rabbitmq-website/tree/main/versioned_docs/version-3.13/partitions.md","tags":[],"version":"3.13","frontMatter":{"title":"Clustering and Network Partitions"},"sidebar":"docsSidebar","previous":{"title":"Cluster Formation","permalink":"/rabbitmq-website/docs/3.13/cluster-formation"},"next":{"title":"Using TLS for Inter-node Traffic","permalink":"/rabbitmq-website/docs/3.13/clustering-ssl"}}');

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanM/MjA0NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbXBvcnQge01EWENvbXBvbmVudHN9IGZyb20gJ21keC90eXBlcy5qcydcbiAqIEBpbXBvcnQge0NvbXBvbmVudCwgUmVhY3RFbGVtZW50LCBSZWFjdE5vZGV9IGZyb20gJ3JlYWN0J1xuICovXG5cbi8qKlxuICogQGNhbGxiYWNrIE1lcmdlQ29tcG9uZW50c1xuICogICBDdXN0b20gbWVyZ2UgZnVuY3Rpb24uXG4gKiBAcGFyYW0ge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSBjdXJyZW50Q29tcG9uZW50c1xuICogICBDdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgY29udGV4dC5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMuXG4gKlxuICogQHR5cGVkZWYgUHJvcHNcbiAqICAgQ29uZmlndXJhdGlvbiBmb3IgYE1EWFByb3ZpZGVyYC5cbiAqIEBwcm9wZXJ0eSB7UmVhY3ROb2RlIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NoaWxkcmVuXVxuICogICBDaGlsZHJlbiAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbiB8IG51bGwgfCB1bmRlZmluZWR9IFtkaXNhYmxlUGFyZW50Q29udGV4dD1mYWxzZV1cbiAqICAgVHVybiBvZmYgb3V0ZXIgY29tcG9uZW50IGNvbnRleHQgKGRlZmF1bHQ6IGBmYWxzZWApLlxuICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuLyoqIEB0eXBlIHtSZWFkb25seTxNRFhDb21wb25lbnRzPn0gKi9cbmNvbnN0IGVtcHR5Q29tcG9uZW50cyA9IHt9XG5cbmNvbnN0IE1EWENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KGVtcHR5Q29tcG9uZW50cylcblxuLyoqXG4gKiBHZXQgY3VycmVudCBjb21wb25lbnRzIGZyb20gdGhlIE1EWCBDb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz4gfCBNZXJnZUNvbXBvbmVudHMgfCBudWxsIHwgdW5kZWZpbmVkfSBbY29tcG9uZW50c11cbiAqICAgQWRkaXRpb25hbCBjb21wb25lbnRzIHRvIHVzZSBvciBhIGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyB0aGVtIChvcHRpb25hbCkuXG4gKiBAcmV0dXJucyB7TURYQ29tcG9uZW50c31cbiAqICAgQ3VycmVudCBjb21wb25lbnRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlTURYQ29tcG9uZW50cyhjb21wb25lbnRzKSB7XG4gIGNvbnN0IGNvbnRleHRDb21wb25lbnRzID0gUmVhY3QudXNlQ29udGV4dChNRFhDb250ZXh0KVxuXG4gIC8vIE1lbW9pemUgdG8gYXZvaWQgdW5uZWNlc3NhcnkgdG9wLWxldmVsIGNvbnRleHQgY2hhbmdlc1xuICByZXR1cm4gUmVhY3QudXNlTWVtbyhcbiAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBDdXN0b20gbWVyZ2UgdmlhIGEgZnVuY3Rpb24gcHJvcFxuICAgICAgaWYgKHR5cGVvZiBjb21wb25lbnRzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBjb21wb25lbnRzKGNvbnRleHRDb21wb25lbnRzKVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gey4uLmNvbnRleHRDb21wb25lbnRzLCAuLi5jb21wb25lbnRzfVxuICAgIH0sXG4gICAgW2NvbnRleHRDb21wb25lbnRzLCBjb21wb25lbnRzXVxuICApXG59XG5cbi8qKlxuICogUHJvdmlkZXIgZm9yIE1EWCBjb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8UHJvcHM+fSBwcm9wZXJ0aWVzXG4gKiAgIFByb3BlcnRpZXMuXG4gKiBAcmV0dXJucyB7UmVhY3RFbGVtZW50fVxuICogICBFbGVtZW50LlxuICogQHNhdGlzZmllcyB7Q29tcG9uZW50fVxuICovXG5leHBvcnQgZnVuY3Rpb24gTURYUHJvdmlkZXIocHJvcGVydGllcykge1xuICAvKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuICBsZXQgYWxsQ29tcG9uZW50c1xuXG4gIGlmIChwcm9wZXJ0aWVzLmRpc2FibGVQYXJlbnRDb250ZXh0KSB7XG4gICAgYWxsQ29tcG9uZW50cyA9XG4gICAgICB0eXBlb2YgcHJvcGVydGllcy5jb21wb25lbnRzID09PSAnZnVuY3Rpb24nXG4gICAgICAgID8gcHJvcGVydGllcy5jb21wb25lbnRzKGVtcHR5Q29tcG9uZW50cylcbiAgICAgICAgOiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgfHwgZW1wdHlDb21wb25lbnRzXG4gIH0gZWxzZSB7XG4gICAgYWxsQ29tcG9uZW50cyA9IHVzZU1EWENvbXBvbmVudHMocHJvcGVydGllcy5jb21wb25lbnRzKVxuICB9XG5cbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgTURYQ29udGV4dC5Qcm92aWRlcixcbiAgICB7dmFsdWU6IGFsbENvbXBvbmVudHN9LFxuICAgIHByb3BlcnRpZXMuY2hpbGRyZW5cbiAgKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ }),

/***/ "./versioned_docs/version-3.13/partitions.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assets: () => (/* binding */ assets),\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   metadata: () => (/* reexport default export from named module */ _site_docusaurus_docusaurus_plugin_content_docs_default_site_versioned_docs_version_3_13_partitions_md_cce_json__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var _site_docusaurus_docusaurus_plugin_content_docs_default_site_versioned_docs_version_3_13_partitions_md_cce_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.docusaurus/docusaurus-plugin-content-docs/default/site-versioned-docs-version-3-13-partitions-md-cce.json\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n\n\nconst frontMatter = {\n\ttitle: 'Clustering and Network Partitions'\n};\nconst contentTitle = 'Clustering and Network Partitions';\n\nconst assets = {\n\n};\n\n\n\nconst toc = [{\n  \"value\": \"Introduction\",\n  \"id\": \"introduction\",\n  \"level\": 2\n}, {\n  \"value\": \"Detecting Network Partitions\",\n  \"id\": \"detecting\",\n  \"level\": 2\n}, {\n  \"value\": \"Behavior During a Network Partition\",\n  \"id\": \"during\",\n  \"level\": 2\n}, {\n  \"value\": \"Partitions Caused by Suspend and Resume\",\n  \"id\": \"suspend\",\n  \"level\": 2\n}, {\n  \"value\": \"Recovering From a Split-Brain\",\n  \"id\": \"recovering\",\n  \"level\": 2\n}, {\n  \"value\": \"Partition Handling Strategies\",\n  \"id\": \"automatic-handling\",\n  \"level\": 2\n}, {\n  \"value\": \"Which Mode to Pick?\",\n  \"id\": \"options\",\n  \"level\": 3\n}, {\n  \"value\": \"More About Pause-minority Mode\",\n  \"id\": \"pause-minority\",\n  \"level\": 3\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    header: \"header\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.header, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1, {\n        id: \"clustering-and-network-partitions\",\n        children: \"Clustering and Network Partitions\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"introduction\",\n      children: \"Introduction\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This guide covers one specific aspect of clustering: network\\r\\nfailures between nodes, their effects and recovery options.\\r\\nFor a general overview of clustering, see \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./clustering\",\n        children: \"Clustering\"\n      }), \"\\r\\nand \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./cluster-formation\",\n        children: \"Peer Discovery and Cluster Formation\"\n      }), \" guides.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Clustering can be used to achieve different goals: increased\\r\\ndata safety through replication, increased availability for\\r\\nclient operations, higher overall throughput and so on.\\r\\nDifferent configurations are optimal for different purposes.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Network connection failures between cluster members have an effect on\\r\\ndata consistency and availability (as in the CAP theorem) to client operations.\\r\\nSince different applications have different requirements around consistency\\r\\nand can tolerate unavailability to a different extent, different\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#automatic-handling\",\n        children: \"partition handling strategies\"\n      }), \" are available.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"detecting\",\n      children: \"Detecting Network Partitions\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Nodes determine if its peer is down if another\\r\\nnode is unable to contact it for a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./nettick\",\n        children: \"period of time\"\n      }), \", 60 seconds by default.\\r\\nIf two nodes come back into contact, both having thought the other is down, the nodes will\\r\\ndetermine that a partition has occurred. This will be written to\\r\\nthe RabbitMQ log in a form like:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"2020-05-18 06:55:37.324 [error] <0.341.0> Mnesia(rabbit@warp10): ** ERROR ** mnesia_event got {inconsistent_database, running_partitioned_network, rabbit@hostname2}\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Partition presence can be identified via server \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./logging\",\n        children: \"logs\"\n      }), \",\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./management\",\n        children: \"HTTP API\"\n      }), \" (for \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./monitoring\",\n        children: \"monitoring\"\n      }), \")\\r\\nand a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./cli\",\n        children: \"CLI command\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmq-diagnostics cluster_status\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"rabbitmq-diagnostics cluster_status\"\n      }), \" will normally show an\\r\\nempty list for partitions:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmq-diagnostics cluster_status\\r\\n# => Cluster status of node rabbit@warp10 ...\\r\\n# => Basics\\r\\n# =>\\r\\n# => Cluster name: local.1\\r\\n# =>\\r\\n# => ...edited out for brevity...\\r\\n# =>\\r\\n# => Network Partitions\\r\\n# =>\\r\\n# => (none)\\r\\n# =>\\r\\n# => ...edited out for brevity...\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"However, if a network partition has occurred then information\\r\\nabout partitions will appear there:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmqctl cluster_status\\r\\n# => Cluster status of node rabbit@warp10 ...\\r\\n# => Basics\\r\\n# =>\\r\\n# => Cluster name: local.1\\r\\n# =>\\r\\n# => ...edited out for brevity...\\r\\n# =>\\r\\n# => Network Partitions\\r\\n# =>\\r\\n# => Node flopsy@warp10 cannot communicate with hare@warp10\\r\\n# => Node rabbit@warp10 cannot communicate with hare@warp10\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The HTTP API will return partition\\r\\ninformation for each node under \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"partitions\"\n      }), \"\\r\\nin \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"GET /api/nodes\"\n      }), \" endpoints.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The management UI will show a\\r\\nwarning on the overview page if a partition has occurred.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"during\",\n      children: \"Behavior During a Network Partition\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"While a network partition is in place, the two (or more!) sides\\r\\nof the cluster can evolve independently, with both sides\\r\\nthinking the other has crashed. This scenario is known as split-brain.\\r\\nQueues, bindings, exchanges can\\r\\nbe created or deleted separately.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./quorum-queues\",\n        children: \"Quorum queues\"\n      }), \" will elect a new leader on the\\r\\nmajority side. Quorum queue replicas on the minority side will no longer\\r\\nmake progress (i.e. accept new messages, deliver to consumers, etc), all this work will be\\r\\ndone by the new leader.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./ha\",\n        children: \"Classic mirrored queues\"\n      }), \" which are split across the partition will end up with\\r\\none leader on each side of the partition, again with both sides\\r\\nacting independently.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Unless a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#automatic-handling\",\n        children: \"partition handling strategy\"\n      }), \",\\r\\nsuch as \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"pause_minority\"\n      }), \", is configured to be used,\\r\\nthe split will continue even after network connectivity is restored.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"suspend\",\n      children: \"Partitions Caused by Suspend and Resume\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"While we refer to \\\"network\\\" partitions, really a partition is\\r\\nany case in which the different nodes of a cluster can have\\r\\ncommunication interrupted without any node failing. In addition\\r\\nto network failures, suspending and resuming an entire OS can\\r\\nalso cause partitions when used against running cluster nodes -\\r\\nas the suspended node will not consider itself to have failed, or\\r\\neven stopped, but the other nodes in the cluster will consider\\r\\nit to have done so.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"While you could suspend a cluster node by running it on a laptop\\r\\nand closing the lid, the most common reason for this to happen\\r\\nis for a virtual machine to have been suspended by the\\r\\nhypervisor.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"While it's fine to run RabbitMQ clusters in virtualised environments or containers,\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"make sure that VMs are not suspended while running\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Note that some virtualisation features such as migration of a VM from\\r\\none host to another will tend to involve the VM being suspended.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Partitions caused by suspend and resume will tend to be\\r\\nasymmetrical - the suspended node will not necessarily see the\\r\\nother nodes as having gone down, but will be seen as down by the\\r\\nrest of the cluster. This has particular implications for \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"a\", {\n        href: \"#pause-minority\",\n        children: \"pause_minority\"\n      }), \" mode.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"recovering\",\n      children: \"Recovering From a Split-Brain\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"To recover from a split-brain, first choose one partition\\r\\nwhich you trust the most. This partition will become the\\r\\nauthority for the state of the system (schema, messages)\\r\\nto use; any changes which have occurred on other partitions will be lost.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Stop all nodes in the other partitions, then start them all up\\r\\nagain. When they \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./clustering#restarting\",\n        children: \"rejoin the cluster\"\n      }), \" they\\r\\nwill restore state from the trusted partition.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Finally, you should also restart all the nodes in the trusted\\r\\npartition to clear the warning.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"It may be simpler to stop the whole cluster and start it again;\\r\\nif so make sure that the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"b\", {\n        children: \"first\"\n      }), \" node you start is from the\\r\\ntrusted partition.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"automatic-handling\",\n      children: \"Partition Handling Strategies\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"RabbitMQ also offers three ways to deal with network partitions\\r\\nautomatically: \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"pause-minority\"\n      }), \" mode, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"pause-if-all-down\"\n      }), \"\\r\\nmode and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"autoheal\"\n      }), \" mode. The default behaviour is referred\\r\\nto as \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"ignore\"\n      }), \" mode.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"In pause-minority mode RabbitMQ will automatically pause cluster\\r\\nnodes which determine themselves to be in a minority (i.e. fewer\\r\\nor equal than half the total number of nodes) after seeing other\\r\\nnodes go down. It therefore chooses partition tolerance over\\r\\navailability from the CAP theorem. This ensures that in the\\r\\nevent of a network partition, at most the nodes in a single\\r\\npartition will continue to run. The minority nodes will pause as\\r\\nsoon as a partition starts, and will start again when the\\r\\npartition ends. This configuration prevents split-brain and\\r\\nis therefore able to automatically recover from\\r\\nnetwork partitions without inconsistencies.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In pause-if-all-down mode, RabbitMQ will automatically pause\\r\\ncluster nodes which cannot reach any of the listed nodes. In\\r\\nother words, all the listed nodes must be down for RabbitMQ to\\r\\npause a cluster node. This is close to the pause-minority mode,\\r\\nhowever, it allows an administrator to decide which nodes to\\r\\nprefer, instead of relying on the context. For instance, if the\\r\\ncluster is made of two nodes in rack A and two nodes in rack B,\\r\\nand the link between racks is lost, pause-minority mode will pause\\r\\nall nodes. In pause-if-all-down mode, if the administrator listed\\r\\nthe two nodes in rack A, only nodes in rack B will pause. Note\\r\\nthat it is possible the listed nodes get split across both sides\\r\\nof a partition: in this situation, no node will pause. That is why\\r\\nthere is an additional \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"i\", {\n        children: \"ignore\"\n      }), \"/\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"i\", {\n        children: \"autoheal\"\n      }), \" argument to\\r\\nindicate how to recover from the partition.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"In autoheal mode RabbitMQ will automatically decide on a winning\\r\\npartition if a partition is deemed to have occurred, and will\\r\\nrestart all nodes that are not in the winning partition. Unlike\\r\\npause_minority mode it therefore takes effect when a partition\\r\\nends, rather than when one starts.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The winning partition is the one which has the most clients\\r\\nconnected (or if this produces a draw, the one with the most\\r\\nnodes; and if that still produces a draw then one of the\\r\\npartitions is chosen in an unspecified way).\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"You can enable either mode by setting the configuration\\r\\nparameter \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"cluster_partition_handling\"\n      }), \"\\r\\nfor the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"rabbit\"\n      }), \" application in the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./configure#configuration-files\",\n        children: \"configuration file\"\n      }), \" to:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"ul\", {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n          children: \"autoheal\"\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n          children: \"pause_minority\"\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n          children: \"pause_if_all_down\"\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"If using the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"pause_if_all_down\"\n      }), \" mode, additional parameters are required:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"ul\", {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"li\", {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n          children: \"nodes\"\n        }), \": nodes which should be unavailable to pause\"]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"li\", {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n          children: \"recover\"\n        }), \": recover action, can be \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n          children: \"ignore\"\n        }), \" or \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n          children: \"autoheal\"\n        })]\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Example \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./configure#config-file\",\n        children: \"config snippet\"\n      }), \" that uses \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"pause_if_all_down\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"cluster_partition_handling = pause_if_all_down\\r\\n\\r\\n## Recovery strategy. Can be either 'autoheal' or 'ignore'\\r\\ncluster_partition_handling.pause_if_all_down.recover = ignore\\r\\n\\r\\n## Node names to check\\r\\ncluster_partition_handling.pause_if_all_down.nodes.1 = rabbit@myhost1\\r\\ncluster_partition_handling.pause_if_all_down.nodes.2 = rabbit@myhost2\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"options\",\n      children: \"Which Mode to Pick?\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"It's important to understand that allowing RabbitMQ to deal with\\r\\nnetwork partitions automatically comes with trade offs.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"As stated in the introduction, to connect RabbitMQ clusters over generally unreliable\\r\\nlinks, prefer \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./federation\",\n        children: \"Federation\"\n      }), \" or the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./shovel\",\n        children: \"Shovel\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"With that said, here are some guidelines to help the operator determine\\r\\nwhich mode may or may not be appropriate:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"ul\", {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n            children: \"ignore\"\n          }), \": use when network reliability is the highest practically possible\\r\\nand node availability is of topmost importance. For example, all cluster nodes can\\r\\nbe in the same rack or equivalent, connected with a switch, and that switch is also the route\\r\\nto the outside world.\"]\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n            children: \"pause_minority\"\n          }), \": appropriate when clustering across racks or availability zones\\r\\nin a single region, and the probability of losing a majority of nodes (zones) at\\r\\nonce is considered to be very low. This mode trades off some availability for\\r\\nthe ability to automatically recover if/when the lost node(s) come back.\"]\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n            children: \"autoheal\"\n          }), \": appropriate when are more concerned with continuity of service\\r\\nthan with data consistency across nodes.\"]\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"pause-minority\",\n      children: \"More About Pause-minority Mode\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The Erlang VM on the paused nodes will continue running but the\\r\\nnodes will not listen on any ports or be otherwise available.\\r\\nThey will check once per second to see if the rest of the cluster has\\r\\nreappeared, and start up again if it has.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Note that nodes will not enter the paused state at startup, even\\r\\nif they are in a minority then. It is expected that any such\\r\\nminority at startup is due to the rest of the cluster not having\\r\\nbeen started yet.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Also note that RabbitMQ will pause nodes which are not in a\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"i\", {\n        children: \"strict\"\n      }), \" majority of the cluster - i.e. containing more\\r\\nthan half of all nodes. It is therefore not a good idea to\\r\\nenable pause-minority mode on a cluster of two nodes since in\\r\\nthe event of any network partition \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"b\", {\n        children: \"or node failure\"\n      }), \", both\\r\\nnodes will pause. However, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"pause_minority\"\n      }), \" mode is\\r\\nsafer than \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"ignore\"\n      }), \" mode, with regards to integrity.\\r\\nFor clusters of more than two nodes, especially if the most likely\\r\\nform of network partition is that a single minority of nodes\\r\\ndrops off the network, the availability remains as good as\\r\\nwith \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"ignore\"\n      }), \" mode.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Note that \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"pause_minority\"\n      }), \" mode will do\\r\\nnothing to defend against partitions caused by cluster nodes\\r\\nbeing \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#suspend\",\n        children: \"suspended\"\n      }), \". This is because\\r\\nthe suspended node will never see the rest of the cluster\\r\\nvanish, so will have no trigger to disconnect itself from the\\r\\ncluster.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./versioned_docs/version-3.13/partitions.md\n");

/***/ })

}]);