"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkrabbitmq_website"] = globalThis["webpackChunkrabbitmq_website"] || []).push([["content---rabbitmq-website-kubernetes-operator-using-topology-operatore-39-87c"],{

/***/ "./.docusaurus/docusaurus-plugin-content-docs/kubernetes/site-kubernetes-operator-using-topology-operator-md-e39.json":
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"id":"operator/using-topology-operator","title":"Using the RabbitMQ Messaging Topology Kubernetes Operator","description":"Use this information to learn how to deploy Custom Resource objects that will be managed by the Messaging Topology Operator.","source":"@site/kubernetes/operator/using-topology-operator.md","sourceDirName":"operator","slug":"/operator/using-topology-operator","permalink":"/rabbitmq-website/kubernetes/operator/using-topology-operator","draft":false,"unlisted":false,"editUrl":"https://github.com/rabbitmq/rabbitmq-website/tree/main/kubernetes/operator/using-topology-operator.md","tags":[],"version":"current","frontMatter":{"title":"Using the RabbitMQ Messaging Topology Kubernetes Operator"},"sidebar":"kubernetesSidebar","previous":{"title":"Install Topology Operator","permalink":"/rabbitmq-website/kubernetes/operator/install-topology-operator"},"next":{"title":"TLS Support","permalink":"/rabbitmq-website/kubernetes/operator/tls-topology-operator"}}');

/***/ }),

/***/ "./kubernetes/operator/using-topology-operator.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assets: () => (/* binding */ assets),\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   metadata: () => (/* reexport default export from named module */ _site_docusaurus_docusaurus_plugin_content_docs_kubernetes_site_kubernetes_operator_using_topology_operator_md_e39_json__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var _site_docusaurus_docusaurus_plugin_content_docs_kubernetes_site_kubernetes_operator_using_topology_operator_md_e39_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.docusaurus/docusaurus-plugin-content-docs/kubernetes/site-kubernetes-operator-using-topology-operator-md-e39.json\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n\n\nconst frontMatter = {\n\ttitle: 'Using the RabbitMQ Messaging Topology Kubernetes Operator'\n};\nconst contentTitle = 'Using the RabbitMQ Messaging Topology Kubernetes Operator';\n\nconst assets = {\n\n};\n\n\n\nconst toc = [{\n  \"value\": \"How to Use the RabbitMQ Message Topology Operator\",\n  \"id\": \"overview\",\n  \"level\": 2\n}, {\n  \"value\": \"RabbitMQ Cluster Operator Requirements\",\n  \"id\": \"requirements\",\n  \"level\": 2\n}, {\n  \"value\": \"Scope Across Multiple Namespaces\",\n  \"id\": \"namespace-scope\",\n  \"level\": 2\n}, {\n  \"value\": \"Important Information about Forbidden Cross-Namespace Objects\",\n  \"id\": \"namespace-scope-note\",\n  \"level\": 3\n}, {\n  \"value\": \"Non Operator Managed RabbitMQ\",\n  \"id\": \"non-operator\",\n  \"level\": 2\n}, {\n  \"value\": \"Cross-Namespace connection secret\",\n  \"id\": \"cross-namespace-connection-secret\",\n  \"level\": 3\n}, {\n  \"value\": \"Custom Connection URI\",\n  \"id\": \"uri-annotation\",\n  \"level\": 2\n}, {\n  \"value\": \"Queues and Policies\",\n  \"id\": \"queues-policies\",\n  \"level\": 2\n}, {\n  \"value\": \"Exchanges and Bindings\",\n  \"id\": \"exchanges-bindings\",\n  \"level\": 3\n}, {\n  \"value\": \"Users and User Permissions\",\n  \"id\": \"users-permissions\",\n  \"level\": 3\n}, {\n  \"value\": \"Users with auto-generated username and password\",\n  \"id\": \"auto-gen-users\",\n  \"level\": 4\n}, {\n  \"value\": \"Users with provided username and password\",\n  \"id\": \"provided-sec-users\",\n  \"level\": 4\n}, {\n  \"value\": \"Users with password hash and password-less users\",\n  \"id\": \"provided-sec-users\",\n  \"level\": 4\n}, {\n  \"value\": \"User permission object\",\n  \"id\": \"user-permissions-obj\",\n  \"level\": 4\n}, {\n  \"value\": \"Virtual Hosts\",\n  \"id\": \"vhosts\",\n  \"level\": 2\n}, {\n  \"value\": \"Federation\",\n  \"id\": \"federation\",\n  \"level\": 2\n}, {\n  \"value\": \"Shovel\",\n  \"id\": \"shovel\",\n  \"level\": 2\n}, {\n  \"value\": \"Update Resources\",\n  \"id\": \"update\",\n  \"level\": 2\n}, {\n  \"value\": \"Delete a Resource\",\n  \"id\": \"delete\",\n  \"level\": 2\n}, {\n  \"value\": \"Limitations\",\n  \"id\": \"limitations\",\n  \"level\": 2\n}, {\n  \"value\": \"TLS\",\n  \"id\": \"tls\",\n  \"level\": 2\n}, {\n  \"value\": \"(Optional) Use HashiCorp Vault\",\n  \"id\": \"vault\",\n  \"level\": 2\n}, {\n  \"value\": \"Configure Log Level for the Operator\",\n  \"id\": \"operator-log\",\n  \"level\": 2\n}, {\n  \"value\": \"Time Based Reconciliation\",\n  \"id\": \"sync-period\",\n  \"level\": 3\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    admonition: \"admonition\",\n    code: \"code\",\n    em: \"em\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.header, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1, {\n        id: \"using-the-rabbitmq-messaging-topology-kubernetes-operator\",\n        children: \"Using the RabbitMQ Messaging Topology Kubernetes Operator\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Use this information to learn how to deploy Custom Resource objects that will be managed by the Messaging Topology Operator.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"overview\",\n      children: \"How to Use the RabbitMQ Message Topology Operator\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"If RabbitMQ Messaging Topology Operator is not installed, see the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/messaging-topology-operator/#quickstart\",\n        children: \"quickstart information\"\n      }), \" to deploy it.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This information includes the following sections:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#requirements\",\n          children: \"Cluster Operator Requirements\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#namespace-scope\",\n          children: \"Scope across multiple namespaces\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#non-operator\",\n          children: \"Non Operator managed RabbitMQ\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#uri-annotation\",\n          children: \"Custom Connection URI\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#queues-policies\",\n          children: \"Queues and policies\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#users-permissions\",\n          children: \"Users and user permissions\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#exchanges-bindings\",\n          children: \"Exchanges and bindings\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#vhosts\",\n          children: \"Virtual hosts\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#federation\",\n          children: \"Federation\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#shovel\",\n          children: \"Shovel\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#update\",\n          children: \"Update a resource\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#delete\",\n          children: \"Delete a resource\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#limitations\",\n          children: \"Limitations\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#tls\",\n          children: \"TLS\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#vault\",\n          children: \"Use HashiCorp Vault\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#operator-log\",\n          children: \"Configure Log Level for the Operator\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#sync-period\",\n          children: \"Time based Reconciliation\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"p\", {\n      class: \"note\",\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"strong\", {\n          children: \"Note:\"\n        }), \" Additional information about using the operator on Openshift can be found at\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./using-on-openshift\",\n          children: \"Using the RabbitMQ Kubernetes Operators on Openshift\"\n        }), \".\"]\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"requirements\",\n      children: \"RabbitMQ Cluster Operator Requirements\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Messaging Topology Operator can be used with RabbitMQ clusters deployed using the Kubernetes \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"https://github.com/rabbitmq/cluster-operator\",\n          children: \"Cluster Operator\"\n        }), \".\\r\\nThe minimal version required for Cluster Operator is \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"2.0.0\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"namespace-scope\",\n      children: \"Scope Across Multiple Namespaces\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Messaging Topology Operator can reconcile its objects in \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"any\"\n      }), \" namespace. However, by default, it will limit its interactions to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"RabbitmqCluster\"\n      }), \" objects within\\r\\nsame namespace as the topology object, for example \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Queue\"\n      }), \". In other words, Messaging Topology Operator will reconcile a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Queue\"\n      }), \" object, in namespace \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"default\"\n      }), \",\\r\\nonly if \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"RabbitmqCluster\"\n      }), \" object is also in namespace \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"default\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This is the default behaviour, and it can be customised to allow a specific list of namespaces to allow reconciliation from. To create a list of\\r\\nallowed namespaces, the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"RabbitmqCluster\"\n      }), \" object has to be annotated with key \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq.com/topology-allowed-namespaces\"\n      }), \", and value a comma-separated list,\\r\\nwithout spaces, of namespace names; for example \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"default,ns1,my-namespace\"\n      }), \". The value asterisk \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"*\"\n      }), \" can be used to allow \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"all\"\n      }), \" namespaces.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Any topology object can be declared to target a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"RabbitmqCluster\"\n      }), \" in a different namespace using \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \".spec.rabbitmqClusterReference.namespace\"\n      }), \". Topology\\r\\nobjects within the same namespace as \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"RabbitmqCluster\"\n      }), \" are \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"always\"\n      }), \" allowed.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The following YAML declares a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"RabbitmqCluster\"\n      }), \" object that allows topology objects from namespace \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"my-app\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-yaml\",\n        children: \"apiVersion: rabbitmq.com/v1beta1\\r\\nkind: RabbitmqCluster\\r\\nmetadata:\\r\\n  name: example-rabbit\\r\\n  namespace: rabbitmq-service\\r\\n  annotations:\\r\\n    rabbitmq.com/topology-allowed-namespaces: \\\"my-app\\\"\\r\\nspec:\\r\\n  replicas: 1\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Note that the above YAML specifies namespace \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-service\"\n      }), \". Then the following YAML will target the above RabbitMQ, from namespace \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"my-app\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-yaml\",\n        children: \"apiVersion: rabbitmq.com/v1beta1\\r\\nkind: Queue\\r\\nmetadata:\\r\\n  name: test # name of this custom resource; does not have to the same as the actual queue name\\r\\n  namespace: my-app\\r\\nspec:\\r\\n  name: test-queue # name of the queue\\r\\n  rabbitmqClusterReference:\\r\\n    name: example-rabbit\\r\\n    namespace: rabbitmq-service\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"namespace-scope-note\",\n      children: \"Important Information about Forbidden Cross-Namespace Objects\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"If topology objects, for example \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Queue\"\n      }), \", target a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"RabbitmqCluster\"\n      }), \", and such \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"RabbitmqCluster\"\n      }), \" do not allow requests from the topology object's\\r\\nnamespace, a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-conditions\",\n        children: \"status condition\"\n      }), \" is created with an error message,\\r\\nand the object \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"is not reconciled\"\n      }), \", until it is updated.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"For example, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"RabbitmqCluster\"\n      }), \" in namespace \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"ns1\"\n      }), \" allows topologies from \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"my-app\"\n      }), \", and topology object \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Queue\"\n      }), \" in namespace \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"not-allowed\"\n      }), \" targets said\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"RabbitmqCluster\"\n      }), \", Messaging Topology Operator will log an error message, update a status condition in the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Queue\"\n      }), \" object, and give up reconciling the\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Queue\"\n      }), \" object. If the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"RabbitmqCluster\"\n      }), \" object is updated to allow topology objects from namespace \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"not-allowed\"\n      }), \", the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Queue\"\n      }), \" object \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"must be manually\\r\\nupdated\"\n      }), \" to trigger a reconciliation; for example, by adding a label to the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Queue\"\n      }), \" object.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"non-operator\",\n      children: \"Non Operator Managed RabbitMQ\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"For any RabbitMQ that's not deployed by \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"https://github.com/rabbitmq/cluster-operator\",\n          children: \"Cluster Operator\"\n        }), \", a connection secret can be provided to create RabbitMQ topology objects.\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"This feature is released since Messaging Topology Operator \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"1.4.0\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.admonition, {\n      type: \"important\",\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n        children: [\"Note that \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"spec.rabbitmqClusterReference\"\n        }), \" is an immutable field. For exampe, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"connectionSecret\"\n        }), \"\\r\\nname cannot be updated once created\"]\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The following manifest creates a queue and uses credentials in kubernetes secret \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"my-rabbit-creds\"\n      }), \" to connect to the RabbitMQ server:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-yaml\",\n        children: \"---\\r\\napiVersion: v1\\r\\nkind: Secret\\r\\nmetadata:\\r\\n  name: my-rabbit-creds\\r\\ntype: Opaque\\r\\nstringData:\\r\\n  # has to be an existing user\\r\\n  username: a-user\\r\\n  password: a-secure-password\\r\\n  # uri for the management api; when no scheme is provided in the uri, 'http' will be used by default\\r\\n  uri: https://my.rabbit:15672\\r\\n---\\r\\napiVersion: rabbitmq.com/v1beta1\\r\\nkind: Queue\\r\\nmetadata:\\r\\n  name: qq-example\\r\\nspec:\\r\\n  name: my-queue\\r\\n  rabbitmqClusterReference:\\r\\n    connectionSecret:\\r\\n      # has to be an existing secret in the same namespace as this Queue object\\r\\n      name: my-rabbit-creds\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"If \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"rabbitmqClusterReference.namespace\"\n        }), \" is set, a secret from that namespace will be used:\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"---\\r\\napiVersion: v1\\r\\nkind: Secret\\r\\nmetadata:\\r\\n  name: my-rabbit-creds\\r\\n  namespace: rabbitmq-system\\r\\n  annotations:\\r\\n    # has to be \\\"*\\\" or match namespace name(s) where RabbitMQ objects are deployed\\r\\n    rabbitmq.com/topology-allowed-namespaces: \\\"qq-namespace\\\"\\r\\ntype: Opaque\\r\\nstringData:\\r\\n  # has to be an existing user\\r\\n  username: a-user\\r\\n  password: a-secure-password\\r\\n  # uri for the management api; when no scheme is provided in the uri, 'http' will be used by default\\r\\n  uri: https://my.rabbit:15672\\r\\n---\\r\\napiVersion: rabbitmq.com/v1beta1\\r\\nkind: Queue\\r\\nmetadata:\\r\\n  name: qq-example\\r\\n  namespace: qq-namespace\\r\\nspec:\\r\\n  name: my-queue\\r\\n  rabbitmqClusterReference:\\r\\n    namespace: rabbitmq-system\\r\\n    connectionSecret:\\r\\n      # has to be an existing secret in the namespace specified in rabbitmqClusterReference.namespace\\r\\n      name: my-rabbit-creds\\r\\n\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Note that \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"spec.rabbitmqClusterReference\"\n      }), \" is an immutable field. For exampe, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"connectionSecret\"\n      }), \"\\r\\nname cannot be updated once created.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"cross-namespace-connection-secret\",\n      children: \"Cross-Namespace connection secret\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Starting with Messaging Topology Operator \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"1.13\"\n      }), \", it is possible to set a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"namespace\"\n      }), \" in the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"connectionSecret\"\n      }), \" object. However, the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Secret\"\n      }), \"\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"must\"\n      }), \" be annotated with \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq.com/topology-allowed-namespaces\"\n      }), \" and have a list of allowed namespaces. For example, a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Secret\"\n      }), \"\\r\\nin namespace \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"central-vault\"\n      }), \", annotated with \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq.com/topology-allowed-namespaces: rabbitmq-service\"\n      }), \", can be used by the Topology\\r\\nOperator to read RabbitMQ credentials, if and only if the Topology object (e.g. \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Queue\"\n      }), \") is in namespace \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-service\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-yaml\",\n        children: \"---\\r\\napiVersion: v1\\r\\nkind: Secret\\r\\nmetadata:\\r\\n  name: rabbitmq-service-credentials\\r\\n  namespace: central-vault\\r\\n  annotations:\\r\\n    rabbitmq.com/topology-allowed-namespaces: rabbitmq-service\\r\\ntype: Opaque\\r\\nstringData:\\r\\n  username: a-user # user must already exist in RabbitMQ\\r\\n  password: a-secure-password\\r\\n  uri: https://my.rabbit:15672 # (optional) uri for the management api; when scheme is not provided in uri, operator defaults to 'http'\\r\\n---\\r\\napiVersion: rabbitmq.com/v1beta1\\r\\nkind: Queue\\r\\nmetadata:\\r\\n  name: my-queue\\r\\n  namespace: rabbitmq-service\\r\\nspec:\\r\\n  name: my-queue\\r\\n  rabbitmqClusterReference:\\r\\n    connectionSecret:\\r\\n      name: rabbitmq-service-credentials\\r\\n      namespace: central-vault\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"uri-annotation\",\n      children: \"Custom Connection URI\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"For RabbitmqClusters that cannot be connected by its Kubernetes service object (for example if the TLS certificate is generated for a custom domain, not the Kubernetes service),\\r\\nyou can annotate Rabbitmqclusters with a custom connection URI. Messaging Topology Operator will use the provided information to connect instead of Kubernetes dns.\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"This feature is released since Messaging Topology Operator \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"1.12.0\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"To annotate RabbitmqClusters,\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"kubectl annotate rmq RMQ-NAME rabbitmq.com/operator-connection-uri=https://test:1234\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"queues-policies\",\n      children: \"Queues and Policies\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Messaging Topology Operator can declare \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/queues\",\n        children: \"queues\"\n      }), \" and\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/policies\",\n        children: \"policies\"\n      }), \" in a RabbitMQ cluster.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The following manifest will create a queue named 'test' in the default vhost:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"apiVersion: rabbitmq.com/v1beta1\\r\\nkind: Queue\\r\\nmetadata:\\r\\n  name: test # name of this custom resource; does not have to the same as the actual queue name\\r\\n  namespace: rabbitmq-system\\r\\nspec:\\r\\n  name: test # name of the queue\\r\\n  autoDelete: false\\r\\n  durable: true\\r\\n  rabbitmqClusterReference:\\r\\n    name: example-rabbit\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The following manifest will create a policy named 'lazy-queue' in default virtual host:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"apiVersion: rabbitmq.com/v1beta1\\r\\nkind: Policy\\r\\nmetadata:\\r\\n  name: policy-example # name of this custom resource\\r\\n  namespace: rabbitmq-system\\r\\nspec:\\r\\n  name: lazy-queue\\r\\n  pattern: \\\"^lazy-queue-\\\" # matches any queue begins with \\\"lazy-queue-\\\"\\r\\n  applyTo: \\\"queues\\\"\\r\\n  definition:\\r\\n    queue-mode: lazy\\r\\n  rabbitmqClusterReference:\\r\\n    name: example-rabbit\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Note that it's not recommended setting \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/queues#optional-arguments\",\n        children: \"optional queue arguments\"\n      }), \" on queues directly. Once set,\\r\\nqueue properties cannot be changed. Use \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/parameters#policies\",\n        children: \"policies\"\n      }), \" instead.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The Messaging Topology repo has more examples on \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/messaging-topology-operator/tree/main/docs/examples/queues\",\n        children: \"queues\"\n      }), \"\\r\\nand \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/messaging-topology-operator/tree/main/docs/examples/policies\",\n        children: \"policies\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"exchanges-bindings\",\n      children: \"Exchanges and Bindings\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Messaging Topology Operator can manage \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/publishers#basics\",\n        children: \"exchanges and bindings\"\n      }), \".\\r\\nThe following manifest will create a fanout exchange:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"apiVersion: rabbitmq.com/v1beta1\\r\\nkind: Exchange\\r\\nmetadata:\\r\\n  name: fanout\\r\\n  namespace: rabbitmq-system\\r\\nspec:\\r\\n  name: fanout-exchange # name of the exchange\\r\\n  type: fanout # default to 'direct' if not provided; can be set to 'direct', 'fanout', 'headers', and 'topic'\\r\\n  autoDelete: false\\r\\n  durable: true\\r\\n  rabbitmqClusterReference:\\r\\n    name: example-rabbit\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The following manifest will create a binding between an exchange and a queue:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"apiVersion: rabbitmq.com/v1beta1\\r\\nkind: Binding\\r\\nmetadata:\\r\\n  name: binding\\r\\n  namespace: rabbitmq-system\\r\\nspec:\\r\\n  source: test # an existing exchange\\r\\n  destination: test # an existing queue\\r\\n  destinationType: queue # can be 'queue' or 'exchange'\\r\\n  rabbitmqClusterReference:\\r\\n    name: example-rabbit\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"More examples on \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/messaging-topology-operator/tree/main/docs/examples/exchanges\",\n        children: \"exchanges\"\n      }), \"\\r\\nand \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/messaging-topology-operator/tree/main/docs/examples/bindings\",\n        children: \"bindings\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"users-permissions\",\n      children: \"Users and User Permissions\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"You can use Messaging Topology Operator to create RabbitMQ users and assign user permissions.\\r\\nLearn more about user management in the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/access-control#user-management\",\n        children: \"Access Control guide\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"auto-gen-users\",\n      children: \"Users with auto-generated username and password\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Messaging Topology Operator creates users with generated credentials by default.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The following manifest will create a user with generated username and password and the generated username and password can be\\r\\naccessed via a Kubernetes secret object:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-yaml\",\n        children: \"apiVersion: rabbitmq.com/v1beta1\\r\\nkind: User\\r\\nmetadata:\\r\\n  name: user-example\\r\\n  namespace: rabbitmq-system\\r\\nspec:\\r\\n  tags:\\r\\n  - policymaker\\r\\n  rabbitmqClusterReference:\\r\\n    name: example-rabbitmq\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"To get the name of the kubernetes secret object that contains the generated username and password, run the following command:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"kubectl get users.rabbitmq.com user-example -o jsonpath='{.status.credentials.name}'\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Note that the Operator does not monitor the generated secret object and updating the secret object won't update the credentials.\\r\\nAs a workaround, add a label or annotation to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"users.rabbitmq.com\"\n      }), \" object to trigger the Operator to reconcile.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"provided-sec-users\",\n      children: \"Users with provided username and password\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The Operator also supports creating RabbitMQ users with provided credentials. When creating a user with provided username and password, create a kubernetes\\r\\nsecret object contains keys \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"username\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"password\"\n      }), \" in its Data field. The Operator does not monitor the provided secret object and updating the secret\\r\\nobject won't update the credentials. As a workaround, add a label or annotation to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"users.rabbitmq.com\"\n      }), \" object to trigger the Operator to reconcile.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The following manifest will create a user with username and password provided from secret 'my-rabbit-user' :\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"apiVersion: rabbitmq.com/v1beta1\\r\\nkind: User\\r\\nmetadata:\\r\\n  name: import-user-sample\\r\\nspec:\\r\\n  tags:\\r\\n  - policymaker\\r\\n  - monitoring # other available tags are 'management' and 'administrator'\\r\\n  rabbitmqClusterReference:\\r\\n    name: rabbit-example\\r\\n  importCredentialsSecret:\\r\\n    name: my-rabbit-user # name of the secret\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"provided-sec-users\",\n      children: \"Users with password hash and password-less users\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Since Topology Operator \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"v1.15.0\"\n      }), \", it is possible to provide the user password using a SHA-512 hash. Other hash algorithms are not supported in the Topology Operator\\r\\nresource. To create a user with a password hash, use the field \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"passwordHash\"\n      }), \" in the credentials \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Secret\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-yaml\",\n        children: \"---\\r\\napiVersion: v1\\r\\nkind: Secret\\r\\nmetadata:\\r\\n  name: my-user-credentials # IMPORTANT: this Secret name must match .spec.importCredentialsSecret.name field in User object\\r\\ntype: Opaque\\r\\nstringData:\\r\\n  username: my-user\\r\\n  passwordHash: tLXSw/gQg2QVPehN+O5wpRx6o22OKMX2OuO5nb0mrametb29utktQXy6caRkxk9QwNxxwgPC7qZ2psKy48GPI0sC6TQ= # SHA-512 hash of \\\"foobarbaz\\\"\\r\\n---\\r\\napiVersion: rabbitmq.com/v1beta1\\r\\nkind: User\\r\\nmetadata:\\r\\n  name: my-admin-user\\r\\nspec:\\r\\n  tags:\\r\\n  - administrator\\r\\n  rabbitmqClusterReference:\\r\\n    name: test # rabbitmqCluster must exist in the same namespace as this resource\\r\\n  importCredentialsSecret:\\r\\n    name: my-user-credentials # must match the name of the Secret\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"If the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"passwordHash\"\n      }), \" field is present, then \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"password\"\n      }), \" field is ignored and the resulting credentials \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Secret\"\n      }), \" will contain only the hash.\\r\\nIf the hash is an empty string, a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://www.rabbitmq.com/docs/passwords#passwordless-users\",\n        children: \"passwordless user\"\n      }), \" is created. For example:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-yaml\",\n        children: \"---\\r\\napiVersion: v1\\r\\nkind: Secret\\r\\nmetadata:\\r\\n  name: my-user-credentials\\r\\ntype: Opaque\\r\\nstringData:\\r\\n  username: my-user\\r\\n  passwordHash: \\\"\\\"\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"It is important to note that empty string for \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"passwordHash\"\n      }), \" is \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"NOT\"\n      }), \" the same as not providing the field at all. In order to generate a passwordless\\r\\nuser, an empty string \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"\\\"\\\"\"\n      }), \" must be provided as \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"passwordHash\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"user-permissions-obj\",\n      children: \"User permission object\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To set user permissions on an existing user, create \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"permissions.rabbitmq.com\"\n      }), \" resources.\\r\\nThe following example will assign permissions to user \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbit-user-1\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"apiVersion: rabbitmq.com/v1beta1\\r\\nkind: Permission\\r\\nmetadata:\\r\\n  name: rabbit-user-1-permission\\r\\n  namespace: rabbitmq-system\\r\\nspec:\\r\\n  vhost: \\\"/\\\"\\r\\n  user: \\\"rabbit-user-1\\\" # name of the RabbitMQ user\\r\\n  permissions:\\r\\n    write: \\\".*\\\"\\r\\n    configure: \\\".*\\\"\\r\\n    read: \\\".*\\\"\\r\\n  rabbitmqClusterReference:\\r\\n    name: sample\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"More examples on \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/messaging-topology-operator/tree/main/docs/examples/users\",\n        children: \"users\"\n      }), \"\\r\\nand \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/messaging-topology-operator/tree/main/docs/examples/permissions\",\n        children: \"permissions\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"vhosts\",\n      children: \"Virtual Hosts\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Messaging Topology Operator can create \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/vhosts\",\n        children: \"virtual hosts\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The following manifest will create a vhost named 'test' in a RabbitmqCluster named 'example-rabbit':\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"apiVersion: rabbitmq.com/v1beta1\\r\\nkind: Vhost\\r\\nmetadata:\\r\\n  name: test-vhost # name of this custom resource\\r\\n  namespace: rabbitmq-system\\r\\nspec:\\r\\n  name: test # name of the vhost\\r\\n  rabbitmqClusterReference:\\r\\n    name: example-rabbit\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"federation\",\n      children: \"Federation\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Messaging Topology Operator can define \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/federation\",\n        children: \"Federation upstreams\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Because a Federation upstream URI contains credentials, it is provided through a Kubernetes Secret object.\\r\\nThe 'uri' key is mandatory for the Secret object. Its value can be either a single URI or a comma-separated list of URIs.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The following manifest will define an upstream named 'origin' in a RabbitmqCluster named 'example-rabbit':\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"apiVersion: rabbitmq.com/v1beta1\\r\\nkind: Federation\\r\\nmetadata:\\r\\n  name: federation-example\\r\\n  namespace: rabbitmq-system\\r\\nspec:\\r\\n  name: \\\"origin\\\"\\r\\n  uriSecret:\\r\\n    # secret must be created in the same namespace as this Federation object; in this case 'rabbitmq-system'\\r\\n    name: {secret-name}\\r\\n  ackMode: \\\"on-confirm\\\"\\r\\n  rabbitmqClusterReference:\\r\\n    name: example-rabbit\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"More \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/messaging-topology-operator/tree/main/docs/examples/federations\",\n        children: \"federation examples\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"shovel\",\n      children: \"Shovel\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Messaging Topology Operator can declare \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/shovel-dynamic\",\n        children: \"dynamic Shovels\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Shovel source and destination URIs are provided through a Kubernetes Secret object.\\r\\nThe Secret Object must contain two keys, 'srcUri' and 'destUri', and the value of each key can be either a single URI\\r\\nor a comma-separated list of URIs.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The following manifest will create a Shovel named 'my-shovel' in a RabbitmqCluster named 'example-rabbit':\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"apiVersion: rabbitmq.com/v1beta1\\r\\nkind: Shovel\\r\\nmetadata:\\r\\n  name: shovel-example\\r\\n  namespace: rabbitmq-system\\r\\nspec:\\r\\n  name: \\\"my-shovel\\\"\\r\\n  uriSecret:\\r\\n    # secret must be created in the same namespace as this Shovel object; in this case 'rabbitmq-system'\\r\\n    name: {secret-name}\\r\\n  srcQueue: \\\"the-source-queue\\\"\\r\\n  destQueue: \\\"the-destination-queue\\\"\\r\\n  rabbitmqClusterReference:\\r\\n    name: example-rabbit\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"More \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/messaging-topology-operator/tree/main/docs/examples/shovels\",\n        children: \"shovels examples\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"update\",\n      children: \"Update Resources\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Some custom resource properties are immutable. Messaging Topology Operator implements \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#validatingadmissionwebhook\",\n        children: \"validating webhooks\"\n      }), \"\\r\\nto prevent updates on immutable fields. Forbidden updates will be rejected. For example:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"kubectl apply -f test-queue.yaml\\r\\nError from server (Forbidden):\\r\\n...\\r\\nResource: \\\"rabbitmq.com/v1beta1, Resource=queues\\\", GroupVersionKind: \\\"rabbitmq.com/v1beta1, Kind=Queue\\\"\\r\\nName: \\\"example\\\", Namespace: \\\"rabbitmq-system\\\"\\r\\nfor: \\\"test-queue.yaml\\\": admission webhook \\\"vqueue.kb.io\\\" denied the request: Queue.rabbitmq.com \\\"example\\\" is forbidden: spec.name: Forbidden: updates on name, vhost, and rabbitmqClusterReference are all forbidden\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Properties that cannot be updated is documented in the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/messaging-topology-operator/blob/main/docs/api/rabbitmq.com.ref.asciidoc\",\n        children: \"Messaging Topology Operator API docs\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"delete\",\n      children: \"Delete a Resource\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Deleting custom resources will delete the corresponding resources in the RabbitMQ cluster. Messaging Topology Operator sets kubernetes\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/#finalizers\",\n        children: \"finalizers\"\n      }), \" on all custom\\r\\nresources. If the object has already been deleted in the RabbitMQ cluster, or the RabbitMQ cluster has been deleted, Messaging Topology\\r\\nOperator will delete the custom resource without trying to delete the RabbitMQ object.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"limitations\",\n      children: \"Limitations\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Messaging Topology Operator does not work for RabbitmqCluster deployed with importing definitions. The Operator reads the default user secret\\r\\nset in RabbitmqCluster status \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"status.binding\"\n      }), \", if the RabbitmqCluster is deployed with imported definitions, definitions will overwrite the\\r\\ndefault user credentials and may cause Messaging Topology Operator not be able to access the RabbitmqCluster. To get around this issue, either\\r\\nyou can create a RabbitmqCluster without importing definitions, or you can manually update the default user kubernetes secret to the actual\\r\\nuser credentials set in the definitions.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"tls\",\n      children: \"TLS\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"If the RabbitmqClusters managed by the Messaging Topology Operator are configured to serve the Management over HTTPS, there are some additional\\r\\nsteps required to configure Messaging Topology Operator. Follow this \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./tls-topology-operator\",\n        children: \"TLS dedicated guide\"\n      }), \" to configure\\r\\nthe Operator.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"vault\",\n      children: \"(Optional) Use HashiCorp Vault\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"If the RabbitmqClusters managed by the Messaging Topology Operator are configured to store their default user credentials in Vault, there are some additional steps requires to configure Messaging Topology Operator. Follow this \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./vault-topology-operator\",\n        children: \"Vault dedicated guide\"\n      }), \" to configure the operator.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"operator-log\",\n      children: \"Configure Log Level for the Operator\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Messaging Topology Operator logs reconciliation results and errors. Operator logs can be inspected by \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"kubectl -n rabbitmq-system logs -l app.kubernetes.io/name=messaging-topology-operator\"\n      }), \".\\r\\nIt uses zap logger which can be configured via passing command line flags in the Operator deployment manifest.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"For example, to configure the log level to 'debug':\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-yaml\",\n        children: \"apiVersion: apps/v1\\r\\nkind: Deployment\\r\\nmetadata:\\r\\n  name: messaging-topology-operator\\r\\n  namespace: rabbitmq-system\\r\\nspec:\\r\\n  template:\\r\\n    spec:\\r\\n      containers:\\r\\n      - args:\\r\\n        - --zap-log-level=debug\\r\\n        command:\\r\\n        - /manager\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Other available command line flags for the zap logger can be found documented in \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/kubernetes-sigs/controller-runtime/blob/v0.10.2/pkg/log/zap/zap.go#L240-L246\",\n        children: \"controller runtime\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"sync-period\",\n      children: \"Time Based Reconciliation\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"By default, Messaging Topology Operator reconciles topology objects when there are create/update/delete events for that particular custom resource.\\r\\nFrom version \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"1.6.0\"\n      }), \", you can configure the Operator to perform reconciliation for all topology objects in a specific frequency by setting an environment variable in the Operator deployment:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-yaml\",\n        children: \"apiVersion: apps/v1\\r\\nkind: Deployment\\r\\nmetadata:\\r\\n  [...]\\r\\n  name: messaging-topology-operator\\r\\n  namespace: rabbitmq-system\\r\\nspec:\\r\\n  template:\\r\\n    spec:\\r\\n      containers:\\r\\n      - command:\\r\\n        - /manager\\r\\n        env:\\r\\n        - name: SYNC_PERIOD\\r\\n          value: 5m # needs to be in a format that's readable by golang time.ParseDuration(), e.g. “1000s”, “5.3h” or “20h35m”\\r\\n...\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Recreating a deleted queue will \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"not recovery any messages\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Note that this frequency applies to all topology objects managed by the Operator.\\r\\nDepending on how many objects you've created with Topology Operator, reconciling all objects in a frequency\\r\\ncould cause unnecessary load on both the Operator and the RabbitMQ server.\\r\\nOnly use this feature if time based reconciliation is required for your use case.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./kubernetes/operator/using-topology-operator.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanM/MjA0NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbXBvcnQge01EWENvbXBvbmVudHN9IGZyb20gJ21keC90eXBlcy5qcydcbiAqIEBpbXBvcnQge0NvbXBvbmVudCwgUmVhY3RFbGVtZW50LCBSZWFjdE5vZGV9IGZyb20gJ3JlYWN0J1xuICovXG5cbi8qKlxuICogQGNhbGxiYWNrIE1lcmdlQ29tcG9uZW50c1xuICogICBDdXN0b20gbWVyZ2UgZnVuY3Rpb24uXG4gKiBAcGFyYW0ge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSBjdXJyZW50Q29tcG9uZW50c1xuICogICBDdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgY29udGV4dC5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMuXG4gKlxuICogQHR5cGVkZWYgUHJvcHNcbiAqICAgQ29uZmlndXJhdGlvbiBmb3IgYE1EWFByb3ZpZGVyYC5cbiAqIEBwcm9wZXJ0eSB7UmVhY3ROb2RlIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NoaWxkcmVuXVxuICogICBDaGlsZHJlbiAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbiB8IG51bGwgfCB1bmRlZmluZWR9IFtkaXNhYmxlUGFyZW50Q29udGV4dD1mYWxzZV1cbiAqICAgVHVybiBvZmYgb3V0ZXIgY29tcG9uZW50IGNvbnRleHQgKGRlZmF1bHQ6IGBmYWxzZWApLlxuICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuLyoqIEB0eXBlIHtSZWFkb25seTxNRFhDb21wb25lbnRzPn0gKi9cbmNvbnN0IGVtcHR5Q29tcG9uZW50cyA9IHt9XG5cbmNvbnN0IE1EWENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KGVtcHR5Q29tcG9uZW50cylcblxuLyoqXG4gKiBHZXQgY3VycmVudCBjb21wb25lbnRzIGZyb20gdGhlIE1EWCBDb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz4gfCBNZXJnZUNvbXBvbmVudHMgfCBudWxsIHwgdW5kZWZpbmVkfSBbY29tcG9uZW50c11cbiAqICAgQWRkaXRpb25hbCBjb21wb25lbnRzIHRvIHVzZSBvciBhIGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyB0aGVtIChvcHRpb25hbCkuXG4gKiBAcmV0dXJucyB7TURYQ29tcG9uZW50c31cbiAqICAgQ3VycmVudCBjb21wb25lbnRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlTURYQ29tcG9uZW50cyhjb21wb25lbnRzKSB7XG4gIGNvbnN0IGNvbnRleHRDb21wb25lbnRzID0gUmVhY3QudXNlQ29udGV4dChNRFhDb250ZXh0KVxuXG4gIC8vIE1lbW9pemUgdG8gYXZvaWQgdW5uZWNlc3NhcnkgdG9wLWxldmVsIGNvbnRleHQgY2hhbmdlc1xuICByZXR1cm4gUmVhY3QudXNlTWVtbyhcbiAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBDdXN0b20gbWVyZ2UgdmlhIGEgZnVuY3Rpb24gcHJvcFxuICAgICAgaWYgKHR5cGVvZiBjb21wb25lbnRzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBjb21wb25lbnRzKGNvbnRleHRDb21wb25lbnRzKVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gey4uLmNvbnRleHRDb21wb25lbnRzLCAuLi5jb21wb25lbnRzfVxuICAgIH0sXG4gICAgW2NvbnRleHRDb21wb25lbnRzLCBjb21wb25lbnRzXVxuICApXG59XG5cbi8qKlxuICogUHJvdmlkZXIgZm9yIE1EWCBjb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8UHJvcHM+fSBwcm9wZXJ0aWVzXG4gKiAgIFByb3BlcnRpZXMuXG4gKiBAcmV0dXJucyB7UmVhY3RFbGVtZW50fVxuICogICBFbGVtZW50LlxuICogQHNhdGlzZmllcyB7Q29tcG9uZW50fVxuICovXG5leHBvcnQgZnVuY3Rpb24gTURYUHJvdmlkZXIocHJvcGVydGllcykge1xuICAvKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuICBsZXQgYWxsQ29tcG9uZW50c1xuXG4gIGlmIChwcm9wZXJ0aWVzLmRpc2FibGVQYXJlbnRDb250ZXh0KSB7XG4gICAgYWxsQ29tcG9uZW50cyA9XG4gICAgICB0eXBlb2YgcHJvcGVydGllcy5jb21wb25lbnRzID09PSAnZnVuY3Rpb24nXG4gICAgICAgID8gcHJvcGVydGllcy5jb21wb25lbnRzKGVtcHR5Q29tcG9uZW50cylcbiAgICAgICAgOiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgfHwgZW1wdHlDb21wb25lbnRzXG4gIH0gZWxzZSB7XG4gICAgYWxsQ29tcG9uZW50cyA9IHVzZU1EWENvbXBvbmVudHMocHJvcGVydGllcy5jb21wb25lbnRzKVxuICB9XG5cbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgTURYQ29udGV4dC5Qcm92aWRlcixcbiAgICB7dmFsdWU6IGFsbENvbXBvbmVudHN9LFxuICAgIHByb3BlcnRpZXMuY2hpbGRyZW5cbiAgKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);