"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkrabbitmq_website"] = globalThis["webpackChunkrabbitmq_website"] || []).push([["content---rabbitmq-website-blog-2010-08-03-well-ill-let-you-go-basicreject-in-rabbitmqc-0-b-035"],{

/***/ "./.docusaurus/docusaurus-plugin-content-blog/default/site-blog-2010-08-03-well-ill-let-you-go-basicreject-in-rabbitmq-index-md-c0b.json":
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"permalink":"/rabbitmq-website/blog/2010/08/03/well-ill-let-you-go-basicreject-in-rabbitmq","editUrl":"https://github.com/rabbitmq/rabbitmq-website/tree/main/blog/2010-08-03-well-ill-let-you-go-basicreject-in-rabbitmq/index.md","source":"@site/blog/2010-08-03-well-ill-let-you-go-basicreject-in-rabbitmq/index.md","title":"Well, I\'ll let you go ... basic.reject in RabbitMQ","description":"Support for AMQP\'s basic.reject just landed on default. It\'s taken this long because we couldn\'t agree on a single set of semantics that followed the specification, was actually useful, and wasn\'t too complicated to implement.","date":"2010-08-03T00:00:00.000Z","tags":[{"inline":true,"label":"New Features","permalink":"/rabbitmq-website/blog/tags/new-features"}],"readingTime":2.07,"hasTruncateMarker":true,"authors":[{"name":"Michael Bridgen","key":"mikeb","page":null}],"frontMatter":{"title":"Well, I\'ll let you go ... basic.reject in RabbitMQ","tags":["New Features"],"authors":["mikeb"]},"unlisted":false,"prevItem":{"title":"RabbitMQ and AMQP 0-9-1","permalink":"/rabbitmq-website/blog/2010/08/04/rabbitmq-and-amqp-0-9-1"},"nextItem":{"title":"Hello, World!","permalink":"/rabbitmq-website/blog/2010/08/01/hello-world"}}');

/***/ }),

/***/ "./blog/2010-08-03-well-ill-let-you-go-basicreject-in-rabbitmq/index.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assets: () => (/* binding */ assets),\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   metadata: () => (/* reexport default export from named module */ _site_docusaurus_docusaurus_plugin_content_blog_default_site_blog_2010_08_03_well_ill_let_you_go_basicreject_in_rabbitmq_index_md_c0b_json__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var _site_docusaurus_docusaurus_plugin_content_blog_default_site_blog_2010_08_03_well_ill_let_you_go_basicreject_in_rabbitmq_index_md_c0b_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.docusaurus/docusaurus-plugin-content-blog/default/site-blog-2010-08-03-well-ill-let-you-go-basicreject-in-rabbitmq-index-md-c0b.json\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n\n\nconst frontMatter = {\n\ttitle: 'Well, I\\'ll let you go ... basic.reject in RabbitMQ',\n\ttags: [\n\t\t'New Features'\n\t],\n\tauthors: [\n\t\t'mikeb'\n\t]\n};\nconst contentTitle = undefined;\n\nconst assets = {\n\"authorsImageUrls\": [undefined],\n};\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    blockquote: \"blockquote\",\n    code: \"code\",\n    em: \"em\",\n    p: \"p\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Support for AMQP's \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"basic.reject\"\n      }), \" just landed on default. It's taken this long because we couldn't agree on a single set of semantics that followed the specification, was actually useful, and wasn't too complicated to implement.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"First up, this is what RabbitMQ's \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"basic.reject\"\n      }), \" will do: if you supply \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"requeue=false\"\n      }), \" it will discard the message (this is in lieu of dead-lettering it, until we have a dead letter feature); if you supply \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"requeue=true\"\n      }), \", it will release it back on to the queue, to be delivered again.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The first is useful from a error handling point of view; if your application cannot process a particular message, you can get rid of it. At the minute, it's semantically the same as just acking the message; but, given a dead-letter mechanism, it will mean unprocessable messages can be picked up elsewhere for diagnosis.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The second, with \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"requeue=true\"\n      }), \", is useful for example if your application needs a \\\"message lock\\\" semantics. In this scenario, a consumer can be delivered a message, then decide not to deal with it after all, and place it back on the queue. Note that RabbitMQ \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"doesn't take care to stop the same consumer getting the message again\"\n      }), \" -- see below.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The AMQP 0-9-1 specification says a number of seemingly incompatible things about basic.reject. For a start, it says in the method description\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: \"The client MUST NOT use this method as a means of selecting messages to process.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"and in the specification XML (but not in the generated PDF),\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: \"The server MUST NOT deliver the message to the same client within the\\r\\ncontext of the current channel. The recommended strategy is to attempt to\\r\\ndeliver the message to an alternative consumer, and if that is not possible,\\r\\nto move the message to a dead-letter queue. The server MAY use more\\r\\nsophisticated tracking to hold the message on the queue and redeliver it to\\r\\nthe same client at a later stage.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This seems to suggest that the server has to take care not to deliver the message to the same consumer twice, but consumers are not allowed to rely on this prohibition. This means \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"basic.reject\"\n      }), \" could either redeliver the message or dead-letter it, which makes it useless for the \\\"message lock\\\" scenario given above.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"So, we have chosen to implement the simplest thing that is useful, which is to re-enqueue the message and treat it as though it were completely new. This means the consumer can receive again a message it has rejected.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ibG9nLzIwMTAtMDgtMDMtd2VsbC1pbGwtbGV0LXlvdS1nby1iYXNpY3JlamVjdC1pbi1yYWJiaXRtcS9pbmRleC5tZCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWJiaXRtcS13ZWJzaXRlLy4vYmxvZy8yMDEwLTA4LTAzLXdlbGwtaWxsLWxldC15b3UtZ28tYmFzaWNyZWplY3QtaW4tcmFiYml0bXEvaW5kZXgubWQ/MTBkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyID0ge1xuXHR0aXRsZTogJ1dlbGwsIElcXCdsbCBsZXQgeW91IGdvIC4uLiBiYXNpYy5yZWplY3QgaW4gUmFiYml0TVEnLFxuXHR0YWdzOiBbXG5cdFx0J05ldyBGZWF0dXJlcydcblx0XSxcblx0YXV0aG9yczogW1xuXHRcdCdtaWtlYidcblx0XVxufTtcbmV4cG9ydCBjb25zdCBjb250ZW50VGl0bGUgPSB1bmRlZmluZWQ7XG5leHBvcnQge2RlZmF1bHQgYXMgbWV0YWRhdGF9IGZyb20gJ0BzaXRlLy5kb2N1c2F1cnVzL2RvY3VzYXVydXMtcGx1Z2luLWNvbnRlbnQtYmxvZy9kZWZhdWx0L3NpdGUtYmxvZy0yMDEwLTA4LTAzLXdlbGwtaWxsLWxldC15b3UtZ28tYmFzaWNyZWplY3QtaW4tcmFiYml0bXEtaW5kZXgtbWQtYzBiLmpzb24nXG5leHBvcnQgY29uc3QgYXNzZXRzID0ge1xuXCJhdXRob3JzSW1hZ2VVcmxzXCI6IFt1bmRlZmluZWRdLFxufTtcblxuaW1wb3J0IHtGcmFnbWVudCBhcyBfRnJhZ21lbnQsIGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCB7dXNlTURYQ29tcG9uZW50cyBhcyBfcHJvdmlkZUNvbXBvbmVudHN9IGZyb20gXCJAbWR4LWpzL3JlYWN0XCI7XG5leHBvcnQgY29uc3QgdG9jID0gW107XG5mdW5jdGlvbiBfY3JlYXRlTWR4Q29udGVudChwcm9wcykge1xuICBjb25zdCBfY29tcG9uZW50cyA9IHtcbiAgICBibG9ja3F1b3RlOiBcImJsb2NrcXVvdGVcIixcbiAgICBjb2RlOiBcImNvZGVcIixcbiAgICBlbTogXCJlbVwiLFxuICAgIHA6IFwicFwiLFxuICAgIC4uLl9wcm92aWRlQ29tcG9uZW50cygpLFxuICAgIC4uLnByb3BzLmNvbXBvbmVudHNcbiAgfTtcbiAgcmV0dXJuIF9qc3hzKF9GcmFnbWVudCwge1xuICAgIGNoaWxkcmVuOiBbX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlN1cHBvcnQgZm9yIEFNUVAncyBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcImJhc2ljLnJlamVjdFwiXG4gICAgICB9KSwgXCIganVzdCBsYW5kZWQgb24gZGVmYXVsdC4gSXQncyB0YWtlbiB0aGlzIGxvbmcgYmVjYXVzZSB3ZSBjb3VsZG4ndCBhZ3JlZSBvbiBhIHNpbmdsZSBzZXQgb2Ygc2VtYW50aWNzIHRoYXQgZm9sbG93ZWQgdGhlIHNwZWNpZmljYXRpb24sIHdhcyBhY3R1YWxseSB1c2VmdWwsIGFuZCB3YXNuJ3QgdG9vIGNvbXBsaWNhdGVkIHRvIGltcGxlbWVudC5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkZpcnN0IHVwLCB0aGlzIGlzIHdoYXQgUmFiYml0TVEncyBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcImJhc2ljLnJlamVjdFwiXG4gICAgICB9KSwgXCIgd2lsbCBkbzogaWYgeW91IHN1cHBseSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJlcXVldWU9ZmFsc2VcIlxuICAgICAgfSksIFwiIGl0IHdpbGwgZGlzY2FyZCB0aGUgbWVzc2FnZSAodGhpcyBpcyBpbiBsaWV1IG9mIGRlYWQtbGV0dGVyaW5nIGl0LCB1bnRpbCB3ZSBoYXZlIGEgZGVhZCBsZXR0ZXIgZmVhdHVyZSk7IGlmIHlvdSBzdXBwbHkgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJyZXF1ZXVlPXRydWVcIlxuICAgICAgfSksIFwiLCBpdCB3aWxsIHJlbGVhc2UgaXQgYmFjayBvbiB0byB0aGUgcXVldWUsIHRvIGJlIGRlbGl2ZXJlZCBhZ2Fpbi5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJUaGUgZmlyc3QgaXMgdXNlZnVsIGZyb20gYSBlcnJvciBoYW5kbGluZyBwb2ludCBvZiB2aWV3OyBpZiB5b3VyIGFwcGxpY2F0aW9uIGNhbm5vdCBwcm9jZXNzIGEgcGFydGljdWxhciBtZXNzYWdlLCB5b3UgY2FuIGdldCByaWQgb2YgaXQuIEF0IHRoZSBtaW51dGUsIGl0J3Mgc2VtYW50aWNhbGx5IHRoZSBzYW1lIGFzIGp1c3QgYWNraW5nIHRoZSBtZXNzYWdlOyBidXQsIGdpdmVuIGEgZGVhZC1sZXR0ZXIgbWVjaGFuaXNtLCBpdCB3aWxsIG1lYW4gdW5wcm9jZXNzYWJsZSBtZXNzYWdlcyBjYW4gYmUgcGlja2VkIHVwIGVsc2V3aGVyZSBmb3IgZGlhZ25vc2lzLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJUaGUgc2Vjb25kLCB3aXRoIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmVxdWV1ZT10cnVlXCJcbiAgICAgIH0pLCBcIiwgaXMgdXNlZnVsIGZvciBleGFtcGxlIGlmIHlvdXIgYXBwbGljYXRpb24gbmVlZHMgYSBcXFwibWVzc2FnZSBsb2NrXFxcIiBzZW1hbnRpY3MuIEluIHRoaXMgc2NlbmFyaW8sIGEgY29uc3VtZXIgY2FuIGJlIGRlbGl2ZXJlZCBhIG1lc3NhZ2UsIHRoZW4gZGVjaWRlIG5vdCB0byBkZWFsIHdpdGggaXQgYWZ0ZXIgYWxsLCBhbmQgcGxhY2UgaXQgYmFjayBvbiB0aGUgcXVldWUuIE5vdGUgdGhhdCBSYWJiaXRNUSBcIiwgX2pzeChfY29tcG9uZW50cy5lbSwge1xuICAgICAgICBjaGlsZHJlbjogXCJkb2Vzbid0IHRha2UgY2FyZSB0byBzdG9wIHRoZSBzYW1lIGNvbnN1bWVyIGdldHRpbmcgdGhlIG1lc3NhZ2UgYWdhaW5cIlxuICAgICAgfSksIFwiIC0tIHNlZSBiZWxvdy5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJUaGUgQU1RUCAwLTktMSBzcGVjaWZpY2F0aW9uIHNheXMgYSBudW1iZXIgb2Ygc2VlbWluZ2x5IGluY29tcGF0aWJsZSB0aGluZ3MgYWJvdXQgYmFzaWMucmVqZWN0LiBGb3IgYSBzdGFydCwgaXQgc2F5cyBpbiB0aGUgbWV0aG9kIGRlc2NyaXB0aW9uXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMuYmxvY2txdW90ZSwge1xuICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiVGhlIGNsaWVudCBNVVNUIE5PVCB1c2UgdGhpcyBtZXRob2QgYXMgYSBtZWFucyBvZiBzZWxlY3RpbmcgbWVzc2FnZXMgdG8gcHJvY2Vzcy5cIlxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiYW5kIGluIHRoZSBzcGVjaWZpY2F0aW9uIFhNTCAoYnV0IG5vdCBpbiB0aGUgZ2VuZXJhdGVkIFBERiksXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMuYmxvY2txdW90ZSwge1xuICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiVGhlIHNlcnZlciBNVVNUIE5PVCBkZWxpdmVyIHRoZSBtZXNzYWdlIHRvIHRoZSBzYW1lIGNsaWVudCB3aXRoaW4gdGhlXFxyXFxuY29udGV4dCBvZiB0aGUgY3VycmVudCBjaGFubmVsLiBUaGUgcmVjb21tZW5kZWQgc3RyYXRlZ3kgaXMgdG8gYXR0ZW1wdCB0b1xcclxcbmRlbGl2ZXIgdGhlIG1lc3NhZ2UgdG8gYW4gYWx0ZXJuYXRpdmUgY29uc3VtZXIsIGFuZCBpZiB0aGF0IGlzIG5vdCBwb3NzaWJsZSxcXHJcXG50byBtb3ZlIHRoZSBtZXNzYWdlIHRvIGEgZGVhZC1sZXR0ZXIgcXVldWUuIFRoZSBzZXJ2ZXIgTUFZIHVzZSBtb3JlXFxyXFxuc29waGlzdGljYXRlZCB0cmFja2luZyB0byBob2xkIHRoZSBtZXNzYWdlIG9uIHRoZSBxdWV1ZSBhbmQgcmVkZWxpdmVyIGl0IHRvXFxyXFxudGhlIHNhbWUgY2xpZW50IGF0IGEgbGF0ZXIgc3RhZ2UuXCJcbiAgICAgIH0pLCBcIlxcblwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVGhpcyBzZWVtcyB0byBzdWdnZXN0IHRoYXQgdGhlIHNlcnZlciBoYXMgdG8gdGFrZSBjYXJlIG5vdCB0byBkZWxpdmVyIHRoZSBtZXNzYWdlIHRvIHRoZSBzYW1lIGNvbnN1bWVyIHR3aWNlLCBidXQgY29uc3VtZXJzIGFyZSBub3QgYWxsb3dlZCB0byByZWx5IG9uIHRoaXMgcHJvaGliaXRpb24uIFRoaXMgbWVhbnMgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJiYXNpYy5yZWplY3RcIlxuICAgICAgfSksIFwiIGNvdWxkIGVpdGhlciByZWRlbGl2ZXIgdGhlIG1lc3NhZ2Ugb3IgZGVhZC1sZXR0ZXIgaXQsIHdoaWNoIG1ha2VzIGl0IHVzZWxlc3MgZm9yIHRoZSBcXFwibWVzc2FnZSBsb2NrXFxcIiBzY2VuYXJpbyBnaXZlbiBhYm92ZS5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJTbywgd2UgaGF2ZSBjaG9zZW4gdG8gaW1wbGVtZW50IHRoZSBzaW1wbGVzdCB0aGluZyB0aGF0IGlzIHVzZWZ1bCwgd2hpY2ggaXMgdG8gcmUtZW5xdWV1ZSB0aGUgbWVzc2FnZSBhbmQgdHJlYXQgaXQgYXMgdGhvdWdoIGl0IHdlcmUgY29tcGxldGVseSBuZXcuIFRoaXMgbWVhbnMgdGhlIGNvbnN1bWVyIGNhbiByZWNlaXZlIGFnYWluIGEgbWVzc2FnZSBpdCBoYXMgcmVqZWN0ZWQuXCJcbiAgICB9KV1cbiAgfSk7XG59XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHByb3BzID0ge30pIHtcbiAgY29uc3Qge3dyYXBwZXI6IE1EWExheW91dH0gPSB7XG4gICAgLi4uX3Byb3ZpZGVDb21wb25lbnRzKCksXG4gICAgLi4ucHJvcHMuY29tcG9uZW50c1xuICB9O1xuICByZXR1cm4gTURYTGF5b3V0ID8gX2pzeChNRFhMYXlvdXQsIHtcbiAgICAuLi5wcm9wcyxcbiAgICBjaGlsZHJlbjogX2pzeChfY3JlYXRlTWR4Q29udGVudCwge1xuICAgICAgLi4ucHJvcHNcbiAgICB9KVxuICB9KSA6IF9jcmVhdGVNZHhDb250ZW50KHByb3BzKTtcbn1cblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./blog/2010-08-03-well-ill-let-you-go-basicreject-in-rabbitmq/index.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanM/MjA0NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbXBvcnQge01EWENvbXBvbmVudHN9IGZyb20gJ21keC90eXBlcy5qcydcbiAqIEBpbXBvcnQge0NvbXBvbmVudCwgUmVhY3RFbGVtZW50LCBSZWFjdE5vZGV9IGZyb20gJ3JlYWN0J1xuICovXG5cbi8qKlxuICogQGNhbGxiYWNrIE1lcmdlQ29tcG9uZW50c1xuICogICBDdXN0b20gbWVyZ2UgZnVuY3Rpb24uXG4gKiBAcGFyYW0ge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSBjdXJyZW50Q29tcG9uZW50c1xuICogICBDdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgY29udGV4dC5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMuXG4gKlxuICogQHR5cGVkZWYgUHJvcHNcbiAqICAgQ29uZmlndXJhdGlvbiBmb3IgYE1EWFByb3ZpZGVyYC5cbiAqIEBwcm9wZXJ0eSB7UmVhY3ROb2RlIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NoaWxkcmVuXVxuICogICBDaGlsZHJlbiAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbiB8IG51bGwgfCB1bmRlZmluZWR9IFtkaXNhYmxlUGFyZW50Q29udGV4dD1mYWxzZV1cbiAqICAgVHVybiBvZmYgb3V0ZXIgY29tcG9uZW50IGNvbnRleHQgKGRlZmF1bHQ6IGBmYWxzZWApLlxuICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuLyoqIEB0eXBlIHtSZWFkb25seTxNRFhDb21wb25lbnRzPn0gKi9cbmNvbnN0IGVtcHR5Q29tcG9uZW50cyA9IHt9XG5cbmNvbnN0IE1EWENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KGVtcHR5Q29tcG9uZW50cylcblxuLyoqXG4gKiBHZXQgY3VycmVudCBjb21wb25lbnRzIGZyb20gdGhlIE1EWCBDb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz4gfCBNZXJnZUNvbXBvbmVudHMgfCBudWxsIHwgdW5kZWZpbmVkfSBbY29tcG9uZW50c11cbiAqICAgQWRkaXRpb25hbCBjb21wb25lbnRzIHRvIHVzZSBvciBhIGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyB0aGVtIChvcHRpb25hbCkuXG4gKiBAcmV0dXJucyB7TURYQ29tcG9uZW50c31cbiAqICAgQ3VycmVudCBjb21wb25lbnRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlTURYQ29tcG9uZW50cyhjb21wb25lbnRzKSB7XG4gIGNvbnN0IGNvbnRleHRDb21wb25lbnRzID0gUmVhY3QudXNlQ29udGV4dChNRFhDb250ZXh0KVxuXG4gIC8vIE1lbW9pemUgdG8gYXZvaWQgdW5uZWNlc3NhcnkgdG9wLWxldmVsIGNvbnRleHQgY2hhbmdlc1xuICByZXR1cm4gUmVhY3QudXNlTWVtbyhcbiAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBDdXN0b20gbWVyZ2UgdmlhIGEgZnVuY3Rpb24gcHJvcFxuICAgICAgaWYgKHR5cGVvZiBjb21wb25lbnRzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBjb21wb25lbnRzKGNvbnRleHRDb21wb25lbnRzKVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gey4uLmNvbnRleHRDb21wb25lbnRzLCAuLi5jb21wb25lbnRzfVxuICAgIH0sXG4gICAgW2NvbnRleHRDb21wb25lbnRzLCBjb21wb25lbnRzXVxuICApXG59XG5cbi8qKlxuICogUHJvdmlkZXIgZm9yIE1EWCBjb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8UHJvcHM+fSBwcm9wZXJ0aWVzXG4gKiAgIFByb3BlcnRpZXMuXG4gKiBAcmV0dXJucyB7UmVhY3RFbGVtZW50fVxuICogICBFbGVtZW50LlxuICogQHNhdGlzZmllcyB7Q29tcG9uZW50fVxuICovXG5leHBvcnQgZnVuY3Rpb24gTURYUHJvdmlkZXIocHJvcGVydGllcykge1xuICAvKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuICBsZXQgYWxsQ29tcG9uZW50c1xuXG4gIGlmIChwcm9wZXJ0aWVzLmRpc2FibGVQYXJlbnRDb250ZXh0KSB7XG4gICAgYWxsQ29tcG9uZW50cyA9XG4gICAgICB0eXBlb2YgcHJvcGVydGllcy5jb21wb25lbnRzID09PSAnZnVuY3Rpb24nXG4gICAgICAgID8gcHJvcGVydGllcy5jb21wb25lbnRzKGVtcHR5Q29tcG9uZW50cylcbiAgICAgICAgOiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgfHwgZW1wdHlDb21wb25lbnRzXG4gIH0gZWxzZSB7XG4gICAgYWxsQ29tcG9uZW50cyA9IHVzZU1EWENvbXBvbmVudHMocHJvcGVydGllcy5jb21wb25lbnRzKVxuICB9XG5cbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgTURYQ29udGV4dC5Qcm92aWRlcixcbiAgICB7dmFsdWU6IGFsbENvbXBvbmVudHN9LFxuICAgIHByb3BlcnRpZXMuY2hpbGRyZW5cbiAgKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);