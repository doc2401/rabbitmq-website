"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkrabbitmq_website"] = globalThis["webpackChunkrabbitmq_website"] || []).push([["content---rabbitmq-website-docs-3-13-cli-314-7e9"],{

/***/ "./.docusaurus/docusaurus-plugin-content-docs/default/site-versioned-docs-version-3-13-cli-md-314.json":
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"id":"cli","title":"Command Line Tools","description":"<!--","source":"@site/versioned_docs/version-3.13/cli.md","sourceDirName":".","slug":"/cli","permalink":"/rabbitmq-website/docs/3.13/cli","draft":false,"unlisted":false,"editUrl":"https://github.com/rabbitmq/rabbitmq-website/tree/main/versioned_docs/version-3.13/cli.md","tags":[],"version":"3.13","frontMatter":{"title":"Command Line Tools"},"sidebar":"docsSidebar","previous":{"title":"How to Manage RabbitMQ","permalink":"/rabbitmq-website/docs/3.13/manage-rabbitmq"},"next":{"title":"Configuration","permalink":"/rabbitmq-website/docs/3.13/configure"}}');

/***/ }),

/***/ "./versioned_docs/version-3.13/cli.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assets: () => (/* binding */ assets),\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   metadata: () => (/* reexport default export from named module */ _site_docusaurus_docusaurus_plugin_content_docs_default_site_versioned_docs_version_3_13_cli_md_314_json__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var _site_docusaurus_docusaurus_plugin_content_docs_default_site_versioned_docs_version_3_13_cli_md_314_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.docusaurus/docusaurus-plugin-content-docs/default/site-versioned-docs-version-3-13-cli-md-314.json\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n/* harmony import */ var _theme_Tabs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n/* harmony import */ var _theme_TabItem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n\n\nconst frontMatter = {\n\ttitle: 'Command Line Tools'\n};\nconst contentTitle = 'Command Line Tools';\n\nconst assets = {\n\n};\n\n\n\n\n\nconst toc = [{\n  \"value\": \"Table of Contents\",\n  \"id\": \"table-of-contents\",\n  \"level\": 2\n}, {\n  \"value\": \"Overview\",\n  \"id\": \"overview\",\n  \"level\": 2\n}, {\n  \"value\": \"Standard RabbitMQ CLI Tools\",\n  \"id\": \"standard-rabbitmq-cli-tools\",\n  \"level\": 3\n}, {\n  \"value\": \"Additional Tools\",\n  \"id\": \"additional-tools\",\n  \"level\": 3\n}, {\n  \"value\": \"System and Environment Requirements\",\n  \"id\": \"requirements\",\n  \"level\": 2\n}, {\n  \"value\": \"Installation\",\n  \"id\": \"installation\",\n  \"level\": 2\n}, {\n  \"value\": \"Discovering Commands Using the Help Command\",\n  \"id\": \"help\",\n  \"level\": 2\n}, {\n  \"value\": \"rabbitmqctl\",\n  \"id\": \"rabbitmqctl\",\n  \"level\": 2\n}, {\n  \"value\": \"rabbitmq-queues\",\n  \"id\": \"rabbitmq-queues\",\n  \"level\": 2\n}, {\n  \"value\": \"rabbitmq-streams\",\n  \"id\": \"rabbitmq-streams\",\n  \"level\": 2\n}, {\n  \"value\": \"rabbitmq-diagnostics\",\n  \"id\": \"rabbitmq-diagnostics\",\n  \"level\": 2\n}, {\n  \"value\": \"rabbitmq-plugins\",\n  \"id\": \"rabbitmq-plugins\",\n  \"level\": 2\n}, {\n  \"value\": \"rabbitmq-upgrade\",\n  \"id\": \"rabbitmq-upgrade\",\n  \"level\": 2\n}, {\n  \"value\": \"Offline Mode\",\n  \"id\": \"offline-mode\",\n  \"level\": 2\n}, {\n  \"value\": \"Authentication\",\n  \"id\": \"authentication\",\n  \"level\": 2\n}, {\n  \"value\": \"Using CLI Tools against Remote Server Nodes\",\n  \"id\": \"remote-nodes\",\n  \"level\": 2\n}, {\n  \"value\": \"Node Names\",\n  \"id\": \"node-names\",\n  \"level\": 3\n}, {\n  \"value\": \"Caveats in Containerized Environments\",\n  \"id\": \"containers\",\n  \"level\": 3\n}, {\n  \"value\": \"Shared Secret Mismatch Between The Host and the Container\",\n  \"id\": \"shared-secret-mismatch-between-the-host-and-the-container\",\n  \"level\": 4\n}, {\n  \"value\": \"Shared Secret Seeding Race Condition\",\n  \"id\": \"shared-secret-seeding-race-condition\",\n  \"level\": 4\n}, {\n  \"value\": \"Options and Positional Arguments\",\n  \"id\": \"passing-arguments\",\n  \"level\": 2\n}, {\n  \"value\": \"How CLI Tools Authenticate to Nodes (and Nodes to Each Other): the Erlang Cookie\",\n  \"id\": \"erlang-cookie\",\n  \"level\": 2\n}, {\n  \"value\": \"Cookie File Locations\",\n  \"id\": \"cookie-file-locations\",\n  \"level\": 3\n}, {\n  \"value\": \"Linux, MacOS, *BSD\",\n  \"id\": \"linux-macos-bsd\",\n  \"level\": 4\n}, {\n  \"value\": \"Community Docker Image and Kubernetes\",\n  \"id\": \"community-docker-image-and-kubernetes\",\n  \"level\": 4\n}, {\n  \"value\": \"Windows\",\n  \"id\": \"windows\",\n  \"level\": 4\n}, {\n  \"value\": \"Erlang 20.2 or later\",\n  \"id\": \"erlang-202-or-later\",\n  \"level\": 5\n}, {\n  \"value\": \"Overriding Using CLI and Runtime Command Line Arguments\",\n  \"id\": \"overriding-using-cli-and-runtime-command-line-arguments\",\n  \"level\": 3\n}, {\n  \"value\": \"Troubleshooting\",\n  \"id\": \"cookie-file-troubleshooting\",\n  \"level\": 3\n}, {\n  \"value\": \"CLI Tools\",\n  \"id\": \"cli-tools\",\n  \"level\": 4\n}, {\n  \"value\": \"Server Nodes\",\n  \"id\": \"server-nodes\",\n  \"level\": 4\n}, {\n  \"value\": \"Hostname Resolution\",\n  \"id\": \"hostname-resolution\",\n  \"level\": 4\n}, {\n  \"value\": \"Authentication Failures\",\n  \"id\": \"cli-authentication-failures\",\n  \"level\": 2\n}, {\n  \"value\": \"Possible Reason 1: Misplaced or Missing Cookie File\",\n  \"id\": \"possible-reason-1-misplaced-or-missing-cookie-file\",\n  \"level\": 4\n}, {\n  \"value\": \"Possible Reason 2: Node Name Type Mismatch\",\n  \"id\": \"possible-reason-2-node-name-type-mismatch\",\n  \"level\": 4\n}, {\n  \"value\": \"Possible Reason 3: Inter-node Connections Require TLS\",\n  \"id\": \"possible-reason-3-inter-node-connections-require-tls\",\n  \"level\": 4\n}, {\n  \"value\": \"Possible Reason 4: Hostname Mismatch\",\n  \"id\": \"possible-reason-4-hostname-mismatch\",\n  \"level\": 4\n}, {\n  \"value\": \"Other Possible Reasons\",\n  \"id\": \"other-possible-reasons\",\n  \"level\": 4\n}, {\n  \"value\": \"Managing Nodes\",\n  \"id\": \"managing-nodes\",\n  \"level\": 2\n}, {\n  \"value\": \"Getting node status\",\n  \"id\": \"getting-node-status\",\n  \"level\": 3\n}, {\n  \"value\": \"Starting a node\",\n  \"id\": \"starting-a-node\",\n  \"level\": 3\n}, {\n  \"value\": \"Stopping a node\",\n  \"id\": \"stopping-a-node\",\n  \"level\": 3\n}, {\n  \"value\": \"rabbitmqadmin\",\n  \"id\": \"http-api-cli\",\n  \"level\": 2\n}, {\n  \"value\": \"&quot;Node-local&quot; and &quot;Clusterwide&quot; Commands\",\n  \"id\": \"cli-and-clustering\",\n  \"level\": 2\n}, {\n  \"value\": \"Commands Provided by Plugins\",\n  \"id\": \"command-discovery\",\n  \"level\": 2\n}, {\n  \"value\": \"Command Aliases\",\n  \"id\": \"aliases\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    admonition: \"admonition\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    h5: \"h5\",\n    header: \"header\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.header, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1, {\n        id: \"command-line-tools\",\n        children: \"Command Line Tools\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"table-of-contents\",\n      children: \"Table of Contents\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This guide covers a number of topics related to RabbitMQ CLI tools usage:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#overview\",\n          children: \"Overview\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#installation\",\n          children: \"Installation\"\n        }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#requirements\",\n          children: \"requirements\"\n        }), \" for running CLI tools\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"How \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#erlang-cookie\",\n          children: \"CLI tools authenticate to RabbitMQ nodes\"\n        }), \" and how to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#cli-authentication-failures\",\n          children: \"troubleshoote authentication failures\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#passing-arguments\",\n          children: \"Command line usage\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#cli-and-clustering\",\n          children: \"CLI tools and clustering\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"How to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#node-names\",\n          children: \"address a specific node\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Caveats around CLI tools \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#containers\",\n          children: \"usage in containerized environments\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"overview\",\n      children: \"Overview\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"standard-rabbitmq-cli-tools\",\n      children: \"Standard RabbitMQ CLI Tools\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"RabbitMQ ships with multiple command line tools, each with a set of related commands:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./man/rabbitmqctl.8\",\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"rabbitmqctl\"\n          })\n        }), \" for service management and general operator tasks\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./man/rabbitmq-diagnostics.8\",\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"rabbitmq-diagnostics\"\n          })\n        }), \" for diagnostics \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./monitoring\",\n          children: \"monitoring and health checking\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./man/rabbitmq-plugins.8\",\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"rabbitmq-plugins\"\n          })\n        }), \" for \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./plugins\",\n          children: \"plugin management\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./man/rabbitmq-queues.8\",\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"rabbitmq-queues\"\n          })\n        }), \" for maintenance tasks on \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./queues\",\n          children: \"queues\"\n        }), \", in particular \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./quorum-queues\",\n          children: \"quorum queues\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./man/rabbitmq-streams.8\",\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"rabbitmq-streams\"\n          })\n        }), \" for maintenance tasks on \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./streams\",\n          children: \"streams\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./man/rabbitmq-upgrade.8\",\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"rabbitmq-upgrade\"\n          })\n        }), \" for maintenance tasks related to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./upgrade\",\n          children: \"upgrades\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"On Windows, the above tool names will end with \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \".bat\"\n      }), \", e.g. \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl\"\n      }), \" in a Windows installation will\\r\\nbe named \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl.bat\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"additional-tools\",\n      children: \"Additional Tools\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Additional tools are optional and can be obtained from GitHub:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.a, {\n          href: \"./management-cli\",\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"rabbitmqadmin\"\n          }), \" v2\"]\n        }), \" for operator tasks over the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./management#http-api\",\n          children: \"HTTP API\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"https://github.com/rabbitmq/support-tools\",\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"rabbitmq-collect-env\"\n          })\n        }), \" which collects relevant cluster and environment information\\r\\nas well as server logs. This tool is specific to Linux and UNIX-like operating systems.\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Different tools cover different usage scenarios. For example, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl\"\n      }), \" is usually\\r\\nonly available to RabbitMQ administrator given that it provides full control over a node,\\r\\nincluding virtual host, user and permission management, destructive operations\\r\\non node's data and so on.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqadmin\"\n      }), \" is built on top of the HTTP API and uses a different mechanism, and only\\r\\nrequires that the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./management#http-api\",\n        children: \"HTTP API\"\n      }), \" port is open for outside connections.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Even though CLI tools ship with the server, most commands \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#remote-nodes\",\n        children: \"can be used to operate on remote nodes\"\n      }), \".\\r\\nPlugins can \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#command-discovery\",\n        children: \"provide CLI commands\"\n      }), \" that will be discovered by CLI tools for explicitly enabled plugins.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"requirements\",\n      children: \"System and Environment Requirements\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"RabbitMQ CLI tools require a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./which-erlang\",\n        children: \"compatible Erlang/OTP\"\n      }), \" version to be installed.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The tools assume that system locale is a UTF-8 one (e.g. \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"en_GB.UTF-8\"\n      }), \" or \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"en_US.UTF-8\"\n      }), \"). If that's\\r\\nnot the case, the tools may still function correctly but it cannot be guaranteed.\\r\\nA warning will be emitted in non-UTF-8 locales.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"installation\",\n      children: \"Installation\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Except for \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqadmin\"\n      }), \", all of the tools above ship with RabbitMQ and can be found under the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"sbin\"\n      }), \"\\r\\ndirectory in installation root. With most package types that directory is added to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"PATH\"\n      }), \" at installation time.\\r\\nThis means that core tools such as \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-diagnostics\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl\"\n      }), \" are available on every node\\r\\nthat has RabbitMQ installed.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./install-generic-unix\",\n        children: \"Generic UNIX package\"\n      }), \" users have to make sure that the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"sbin\"\n      }), \" directory under installation\\r\\nroot is added to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"PATH\"\n      }), \" for simpler interactive use. Non-interactive use cases can use full or relative paths without\\r\\nmodifications to the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"PATH\"\n      }), \" environment variable.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./management-cli\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"rabbitmqadmin\"\n        })\n      }), \" is a standalone tool\\r\\nthat is \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/rabbitmqadmin-ng/releases\",\n        children: \"distributed via GitHub releases\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"If interaction from a remote node is required, download and extract the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./install-generic-unix\",\n        children: \"generic UNIX package\"\n      }), \"\\r\\nor use the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./install-windows\",\n        children: \"Windows installer\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Besides \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#authentication\",\n        children: \"authentication\"\n      }), \", all configuration for core CLI tools is optional.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Commands that require specific arguments list them in the usage section and will report\\r\\nany missing arguments when executed.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"help\",\n      children: \"Discovering Commands Using the Help Command\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To find out what commands are available, use the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"help\"\n      }), \" command:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"examples\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"bash\",\n        label: \"bash\",\n        default: true,\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-bash\",\n            children: \"rabbitmqctl help\\r\\n\\r\\nrabbitmq-diagnostics help\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"PowerShell\",\n        label: \"PowerShell\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-PowerShell\",\n            children: \"rabbitmqctl.bat help\\r\\n\\r\\nrabbitmq-diagnostics.bat help\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The command can display usage information for a particular command:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"examples\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"bash\",\n        label: \"bash\",\n        default: true,\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-bash\",\n            children: \"rabbitmq-diagnostics help status\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"PowerShell\",\n        label: \"PowerShell\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-PowerShell\",\n            children: \"rabbitmqctl.bat help add_vhost\\r\\n\\r\\nrabbitmq-diagnostics.bat help status\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Alternatively, the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"--help\"\n      }), \" option can be used:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"examples\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"bash\",\n        label: \"bash\",\n        default: true,\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-bash\",\n            children: \"rabbitmqctl --help\\r\\n\\r\\nrabbitmq-diagnostics --help\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"PowerShell\",\n        label: \"PowerShell\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-PowerShell\",\n            children: \"rabbitmqctl.bat --help\\r\\n\\r\\nrabbitmq-diagnostics.bat --help\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"including for individual commands:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"examples\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"bash\",\n        label: \"bash\",\n        default: true,\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-bash\",\n            children: \"rabbitmq-diagnostics status --help\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"PowerShell\",\n        label: \"PowerShell\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-PowerShell\",\n            children: \"rabbitmq-diagnostics.bat status --help\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"rabbitmqctl\",\n      children: \"rabbitmqctl\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./man/rabbitmqctl.8\",\n        children: \"rabbitmqctl\"\n      }), \" is the original CLI tool that ships with RabbitMQ.\\r\\nIt supports a wide range of operations, mostly administrative (operational) in nature.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This includes\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Stopping node\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Access to node status, effective configuration, health checks\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Virtual host management\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"User and permission management\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Policy management\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Listing queues, connections, channels, exchanges, consumers\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Cluster membership management\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"and more.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl\"\n      }), \" uses a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#erlang-cookie\",\n        children: \"shared secret authentication mechanism\"\n      }), \" (described below) with server nodes.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"rabbitmq-queues\",\n      children: \"rabbitmq-queues\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./man/rabbitmq-queues.8\",\n        children: \"rabbitmq-queues\"\n      }), \" allows the operator to manage replicas of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./quorum-queues\",\n        children: \"replicated queues\"\n      }), \".\\r\\nIt ships with RabbitMQ.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Most commands only support the online mode (when target node is running).\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-queues\"\n      }), \" uses a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#erlang-cookie\",\n        children: \"shared secret authentication mechanism\"\n      }), \" (described below) with server nodes.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"rabbitmq-streams\",\n      children: \"rabbitmq-streams\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./man/rabbitmq-streams.8\",\n        children: \"rabbitmq-streams\"\n      }), \" allows the operator to manage replicas of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./streams\",\n        children: \"streams\"\n      }), \".\\r\\nIt ships with RabbitMQ.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Most commands only support the online mode (when target node is running).\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-streams\"\n      }), \" uses a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#erlang-cookie\",\n        children: \"shared secret authentication mechanism\"\n      }), \" (described below) with server nodes.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"rabbitmq-diagnostics\",\n      children: \"rabbitmq-diagnostics\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./man/rabbitmq-diagnostics.8\",\n        children: \"rabbitmq-diagnostics\"\n      }), \" is the primary tool for inspecting node state.\\r\\nIt has many commands that allow the operator to study various aspects of the system.\\r\\nIt ships with RabbitMQ.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"It supports both online (when target node is running) and offline mode (changes\\r\\ntake effect on node restart).\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-diagnostics\"\n      }), \" uses a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#erlang-cookie\",\n        children: \"shared secret authentication mechanism\"\n      }), \" (described below) with server nodes.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"rabbitmq-plugins\",\n      children: \"rabbitmq-plugins\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./man/rabbitmq-plugins.8\",\n        children: \"rabbitmq-plugins\"\n      }), \" is a tool that manages plugins:\\r\\nlists, enables and disables them. It ships with RabbitMQ.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"It supports both online (when target node is running) and offline mode (changes\\r\\ntake effect on node restart).\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-plugins\"\n      }), \" uses a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#erlang-cookie\",\n        children: \"shared secret authentication mechanism\"\n      }), \" (described below) with server nodes.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"rabbitmq-upgrade\",\n      children: \"rabbitmq-upgrade\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./man/rabbitmq-upgrade.8\",\n        children: \"rabbitmq-upgrade\"\n      }), \" is a tool dedicated to pre-upgrade, upgrade and post-upgrade operations.\\r\\nIt ships with RabbitMQ.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Most commands only support the online mode (when target node is running).\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-upgrade\"\n      }), \" uses a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#erlang-cookie\",\n        children: \"shared secret authentication mechanism\"\n      }), \" (described below) with server nodes.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"offline-mode\",\n      children: \"Offline Mode\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"--offline\"\n      }), \" is a flag supported by \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-plugins\"\n      }), \" commands. When provided, the tool will avoid\\r\\ncontacting the target node and instead operate on plugin files directly.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"When the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"--offline\"\n      }), \" flag is used, the command will rely on \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./configure#customise-environment\",\n        children: \"environment variables\"\n      }), \"\\r\\nto determine where to find the plugins directory of the local node.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"For example, it will respect and use the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"RABBITMQ_PLUGINS_DIR\"\n      }), \" environment variable value\\r\\njust like a RabbitMQ node would. When \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"RABBITMQ_PLUGINS_DIR\"\n      }), \" is overridden for server nodes,\\r\\nit must also be set identically for the local OS user that invokes CLI tools.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"authentication\",\n      children: \"Authentication\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"With the exception of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqadmin\"\n      }), \", RabbitMQ tools use a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#erlang-cookie\",\n        children: \"shared secret authentication mechanism\"\n      }), \".\\r\\nThis requires that \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./networking\",\n        children: \"inter-node and CLI communication ports\"\n      }), \" (by default)\\r\\nis open for external connections on the target node.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"remote-nodes\",\n      children: \"Using CLI Tools against Remote Server Nodes\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"CLI tools can be used to talk to remote nodes as well as the local ones. Nodes are identified by \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#node-names\",\n        children: \"node names\"\n      }), \".\\r\\nIf no node name is specified, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbit@{local hostname}\"\n      }), \" is assumed to be the target. When contacting remote nodes,\\r\\nthe same \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#authentication\",\n        children: \"authentication requirements\"\n      }), \" apply.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To contact a remote node, use the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"--node\"\n      }), \" (\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"-n\"\n      }), \") option that \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl\"\n      }), \", \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-diagnostics\"\n      }), \" and other core CLI tools\\r\\naccept. The following example contact the node \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbit@remote-host.local\"\n      }), \" to find out its status:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmq-diagnostics status -n rabbit@remote-host.local\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Some commands, such as\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmq-diagnostics status\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"can be used against any node. Others, such as\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmqctl shutdown\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"or\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmqctl wait\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"can only be run on the same host or in the same container as their target node. These commands typically\\r\\nrely on or modify something in the local environment, e.g. the local \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./plugins\",\n        children: \"enabled plugins file\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"node-names\",\n      children: \"Node Names\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"RabbitMQ nodes are identified by node names. A node name consists of two parts,\\r\\na prefix (usually \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbit\"\n      }), \") and hostname. For example, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbit@node1.messaging.svc.local\"\n      }), \"\\r\\nis a node name with the prefix of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbit\"\n      }), \" and hostname of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"node1.messaging.svc.local\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Node names in a cluster must be unique. If more than one node is running on a given host\\r\\n(this is usually the case in development and QA environments), they must use\\r\\ndifferent prefixes, e.g. \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbit1@hostname\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbit2@hostname\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"CLI tools identify and address server nodes using node names.\\r\\nMost CLI commands are invoked against a node called target node. To specify a target node,\\r\\nuse the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"--node\"\n      }), \" (\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"-n\"\n      }), \") option. For example, to run a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./monitoring\",\n        children: \"health check\"\n      }), \"\\r\\non node \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbit@warp10.local\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmq-diagnostics -n rabbit@warp10 check_alarms\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Some commands accept both a target node and another node name. For example,\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl forget_cluster_node\"\n      }), \" accepts both a target node (that will perform the action)\\r\\nand a name of the node to be removed.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In a cluster, nodes identify and contact each other using node names. See \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./clustering#node-names\",\n        children: \"Clustering guide\"\n      }), \"\\r\\nfor details.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"When a node starts up, it checks whether it has been assigned a node name. This is done\\r\\nvia the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"RABBITMQ_NODENAME\"\n      }), \" \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./configure#supported-environment-variables\",\n        children: \"environment variable\"\n      }), \".\\r\\nIf no value was explicitly configured, the node resolves its hostname and prepends \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbit\"\n      }), \" to it to compute its node name.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"If a system uses fully qualified domain names (FQDNs) for hostnames, RabbitMQ nodes\\r\\nand CLI tools must be configured to use so called long node names.\\r\\nFor server nodes this is done by setting the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"RABBITMQ_USE_LONGNAME\"\n      }), \" \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./configure#supported-environment-variables\",\n        children: \"environment variable\"\n      }), \"\\r\\nto \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"true\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"For CLI tools, either \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"RABBITMQ_USE_LONGNAME\"\n      }), \" must be set or the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"--longnames\"\n      }), \" option\\r\\nmust be specified:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"# this example assumes that host1.messaging.eng.coolcorporation.banana is a hostname\\r\\n# that successfully resolves\\r\\nrabbitmq-diagnostics -n rabbit@host1.messaging.eng.coolcorporation.banana check_alarms --longnames\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"containers\",\n      children: \"Caveats in Containerized Environments\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"When RabbitMQ is running in a container, there are two common ways of running CLI tools:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Do it within the container itself, using \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"https://docs.docker.com/reference/cli/docker/container/exec/\",\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"docker exec\"\n          })\n        }), \" and similar\\r\\ntooling\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Forward the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./networking#ports\",\n          children: \"relevant inter-node communication ports\"\n        }), \" and do it from the host\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"There are two common problems that may arise with this approach.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"shared-secret-mismatch-between-the-host-and-the-container\",\n      children: \"Shared Secret Mismatch Between The Host and the Container\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"When CLI tools are run in the host, the local \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#erlang-cookie\",\n        children: \"shared secret\"\n      }), \" must\\r\\nmatch that in the container. When this is not the case, CLI tools will fail\\r\\nto authenticate and won't be able to perform any operation on the target node.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"shared-secret-seeding-race-condition\",\n      children: \"Shared Secret Seeding Race Condition\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.admonition, {\n      type: \"danger\",\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n        children: [\"If the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#erlang-cookie\",\n          children: \"shared secret\"\n        }), \" used by the container is not pre-seeded, the node\\r\\nmust be allowed to boot before CLI commands can be run against it\"]\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"When a CLI tool runs on a host where the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#erlang-cookie\",\n        children: \"shared secret\"\n      }), \" is not pre-seeded\\r\\nand before the local booting RabbitMQ node has a chance to create the cookie file, it\\r\\nwill create a confusing situation where the secret seeded may be overwritten\\r\\nduring node boot.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"As a result, CLI tools may fail to authenticate, RabbitMQ node may fail to access the created file\\r\\nand thus stop with an error, and other problematic scenarios that stem from the fact that\\r\\nthe secret does not match.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"passing-arguments\",\n      children: \"Options and Positional Arguments\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"RabbitMQ CLI tools largely follow existing, long established command line argument parsing conventions.\\r\\nThis section provides some examples and focuses on edge cases and lesser known features.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Different commands take different arguments. Some are named options such as \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"--node\"\n      }), \" (aliased as \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"-n\"\n      }), \"),\\r\\nothers are positional arguments, such as the username and password arguments in\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmqctl add_user <username> <password>\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"A specific example:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmqctl add_user \\\"a-user\\\" \\\"a-pa$$w0rd\\\"\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Options can be provided before or after positional arguments with one exception: anything\\r\\nthat follows a double hyphen (\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"--\"\n      }), \") will be treated as positional arguments:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"# all values after the double hyphen (--) will be treated as positional arguments,\\r\\n# even if they begin with a hyphen or a double hyphen\\r\\nrabbitmqctl add_user --node rabbit@host1.messaging.eng.coolcorporation.banana -- \\\"a-user\\\" \\\"a-pa$$w0rd\\\"\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The explicit positional argument separator must be used when positional arguments begin with a hyphen or a double\\r\\nhyphen (such as generated passwords), to make sure they are not parsed as options:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"# Since \\\"--!a-pa$$w0rd\\\" is explicitly provided as a positional argument, it won't\\r\\n# be mistakenly considered for an unsupported option, even though it starts with a double hyphen\\r\\nrabbitmqctl add_user --node rabbit@host1.messaging.eng.coolcorporation.banana -- \\\"a-user\\\" \\\"--!a-pa$$w0rd\\\"\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Option values can be passed as \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"--option <value>\"\n      }), \" or \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"--option=<value>\"\n      }), \". The latter variant must be used\\r\\nwhen the value begins with a hyphen (\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"-\"\n      }), \"), otherwise it would be treated as an option:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"# an alternative way of providing an option value\\r\\nrabbitmqctl add_user --node=rabbit@host1.messaging.eng.coolcorporation.banana -- \\\"a-user\\\" \\\"a-pa$$w0rd\\\"\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl\"\n      }), \", \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-diagnostics\"\n      }), \", \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-plugins\"\n      }), \", and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-queues\"\n      }), \" support \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#aliases\",\n        children: \"command aliases\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"erlang-cookie\",\n      children: \"How CLI Tools Authenticate to Nodes (and Nodes to Each Other): the Erlang Cookie\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"RabbitMQ nodes and CLI tools (with the exception of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqadmin\"\n      }), \") use a\\r\\ncookie to determine whether they are allowed to communicate with\\r\\neach other. For a CLI tool and a node to be able to communicate they must have\\r\\nthe same shared secret called the Erlang cookie. The cookie is\\r\\njust a string of alphanumeric characters up to 255 characters in size.\\r\\nIt is usually stored in a local file. The file\\r\\nmust be only accessible to the owner (e.g. have UNIX permissions of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"600\"\n      }), \" or similar).\\r\\nEvery cluster node must have the same cookie.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"If the file does not exist, Erlang VM will automatically create\\r\\none with a randomly generated value when the RabbitMQ server\\r\\nstarts up.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Erlang cookie generation should be done at cluster deployment stage, ideally using automation\\r\\nand orchestration tools.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"cookie-file-locations\",\n      children: \"Cookie File Locations\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"linux-macos-bsd\",\n      children: \"Linux, MacOS, *BSD\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"On UNIX systems, the cookie will be typically\\r\\nlocated in \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"/var/lib/rabbitmq/.erlang.cookie\"\n      }), \" (used by the server)\\r\\nand \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"$HOME/.erlang.cookie\"\n      }), \" (used by CLI tools). Note that since the value\\r\\nof \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"$HOME\"\n      }), \" varies from user to user, it's necessary to place a copy of\\r\\nthe cookie file for each user that will be using the CLI tools.\\r\\nThis applies to both non-privileged users and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"root\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"RabbitMQ nodes will log its effective user's home directory location early on boot.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"community-docker-image-and-kubernetes\",\n      children: \"Community Docker Image and Kubernetes\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/docker-library/rabbitmq/\",\n        children: \"Docker community RabbitMQ image\"\n      }), \" uses \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"RABBITMQ_ERLANG_COOKIE\"\n      }), \" environment variable value\\r\\nto populate the cookie file.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Configuration management and container orchestration tools that use this image\\r\\nmust make sure that every RabbitMQ node container in a cluster uses the same value.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In the context of Kubernetes, the value must be specified in the\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://kubernetes.io/docs/concepts/workloads/controllers/deployment/\",\n        children: \"deployment file\"\n      }), \".\\r\\nFor instance, this can be seen in the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/diy-kubernetes-examples\",\n        children: \"RabbitMQ on Kubernetes examples repository\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"windows\",\n      children: \"Windows\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"On Windows, the cookie location depends on a few factors:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Whether the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"HOMEDRIVE\"\n        }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"HOMEPATH\"\n        }), \" environment variables are both set\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Erlang version: prior to 20.2 (these are no longer supported by any \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"/release-information\",\n          children: \"maintained release series of RabbitMQ\"\n        }), \") or 20.2 and later\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h5, {\n      id: \"erlang-202-or-later\",\n      children: \"Erlang 20.2 or later\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"With Erlang versions starting with 20.2, the cookie file locations are:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"%HOMEDRIVE%%HOMEPATH%\\\\.erlang.cookie\"\n        }), \" (usually \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"C:\\\\Users\\\\%USERNAME%\\\\.erlang.cookie\"\n        }), \" for user \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"%USERNAME%\"\n        }), \") if both the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"HOMEDRIVE\"\n        }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"HOMEPATH\"\n        }), \" environment variables are set\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"%USERPROFILE%\\\\.erlang.cookie\"\n        }), \" (usually \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"C:\\\\Users\\\\%USERNAME%\\\\.erlang.cookie\"\n        }), \") if \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"HOMEDRIVE\"\n        }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"HOMEPATH\"\n        }), \" are not both set\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"For the RabbitMQ Windows service - \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"%USERPROFILE%\\\\.erlang.cookie\"\n        }), \" (usually \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"C:\\\\WINDOWS\\\\system32\\\\config\\\\systemprofile\"\n        }), \")\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"If the Windows service is used, the cookie should be copied from\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"C:\\\\Windows\\\\system32\\\\config\\\\systemprofile\\\\.erlang.cookie\"\n      }), \" to the expected\\r\\nlocation for users running commands like \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl.bat\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"overriding-using-cli-and-runtime-command-line-arguments\",\n      children: \"Overriding Using CLI and Runtime Command Line Arguments\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"As an alternative, the option \\\"\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"-setcookie <value>\"\n      }), \"\\\" can be added\\r\\nto \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS\"\n      }), \" \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"a\", {\n        href: \"./configure\",\n        children: \"environment variable value\"\n      }), \"\\r\\nto override the cookie value used by a RabbitMQ node:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=\\\"-setcookie cookie-value\\\"\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"CLI tools can take a cookie value using a command line flag:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmq-diagnostics status --erlang-cookie \\\"cookie-value\\\"\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Both are \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"the least secure options\"\n      }), \" and generally \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"not recommended\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"cookie-file-troubleshooting\",\n      children: \"Troubleshooting\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"cli-tools\",\n      children: \"CLI Tools\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Starting with \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.a, {\n        href: \"/release-information\",\n        children: [\"version \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"3.8.6\"\n        })]\n      }), \", \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-diagnostics\"\n      }), \" includes a command\\r\\nthat provides relevant information on the Erlang cookie file used by CLI tools:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmq-diagnostics erlang_cookie_sources\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The command will report on the effective user, user home directory and the expected location\\r\\nof the cookie file:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Cookie File\\r\\n\\r\\nEffective user: antares\\r\\nEffective home directory: /home/cli-user\\r\\nCookie file path: /home/cli-user/.erlang.cookie\\r\\nCookie file exists? true\\r\\nCookie file type: regular\\r\\nCookie file access: read\\r\\nCookie file size: 20\\r\\n\\r\\nCookie CLI Switch\\r\\n\\r\\n--erlang-cookie value set? false\\r\\n--erlang-cookie value length: 0\\r\\n\\r\\nEnv variable  (Deprecated)\\r\\n\\r\\nRABBITMQ_ERLANG_COOKIE value set? false\\r\\nRABBITMQ_ERLANG_COOKIE value length: 0\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"server-nodes\",\n      children: \"Server Nodes\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"When a node starts, it will \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./logging\",\n        children: \"log\"\n      }), \" the home directory location of its effective user:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"node           : rabbit@cdbf4de5f22d\\r\\nhome dir       : /var/lib/rabbitmq\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Unless any \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./relocate\",\n        children: \"server directories\"\n      }), \" were overridden, that's the directory where\\r\\nthe cookie file will be looked for, and created by the node on first boot if it does not already exist.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In the example above, the cookie file location will be \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"/var/lib/rabbitmq/.erlang.cookie\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"hostname-resolution\",\n      children: \"Hostname Resolution\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Starting with \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.a, {\n        href: \"/release-information\",\n        children: [\"RabbitMQ \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"3.8.6\"\n        })]\n      }), \", CLI tools provide two commands that help verify\\r\\nthat hostname resolution on a node works as expected. The commands are not meant to replace\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://en.wikipedia.org/wiki/Dig_(command)\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"dig\"\n        })\n      }), \" and other specialised DNS tools but rather\\r\\nprovide a way to perform most basic checks while taking \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://erlang.org/doc/apps/erts/inet_cfg.html\",\n        children: \"Erlang runtime hostname resolver features\"\n      }), \"\\r\\ninto account.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The commands are covered in the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./networking#dns-verify-resolution\",\n        children: \"Networking guide\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"cli-authentication-failures\",\n      children: \"Authentication Failures\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"When the cookie is misconfigured (for example, not identical), RabbitMQ nodes will log errors\\r\\nsuch as \\\"Connection attempt from disallowed node\\\", \\\"\\\", \\\"Could not auto-cluster\\\".\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"For example, when a CLI tool connects and tries to authenticate using a mismatching secret value:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"2020-06-15 13:03:33 [error] <0.1187.0> ** Connection attempt from node 'rabbitmqcli-99391-rabbit@warp10' rejected. Invalid challenge reply. **\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"When a CLI tool such as \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl\"\n      }), \" fails to authenticate with RabbitMQ,\\r\\nthe message usually says\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"* epmd reports node 'rabbit' running on port 25672\\r\\n* TCP connection succeeded but Erlang distribution failed\\r\\n* suggestion: hostname mismatch?\\r\\n* suggestion: is the cookie set correctly?\\r\\n* suggestion: is the Erlang distribution using TLS?\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This means that TCP connection from a CLI tool to a RabbitMQ node\\r\\nsucceeded but authentication attempt was rejected by the server. The\\r\\nmessage also mentions several most common reasons for that, which are\\r\\ncovered next.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"possible-reason-1-misplaced-or-missing-cookie-file\",\n      children: \"Possible Reason 1: Misplaced or Missing Cookie File\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"An incorrectly placed cookie file or cookie value mismatch are most\\r\\ncommon scenarios for such failures.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"RabbitMQ node logs its cookie hash on start. CLI tools print their\\r\\ncookie hash value when they fail to authenticate with the target node.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"When a recent Erlang/OTP version is used, authentication failures contain\\r\\nmore information and cookie mismatches can be identified better:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbit@warp10:\\r\\n  * connected to epmd (port 4369) on warp10\\r\\n  * epmd reports node 'rabbit' running on port 25672\\r\\n  * TCP connection succeeded but Erlang distribution failed\\r\\n\\r\\n  * Authentication failed (rejected by the remote node), please check the Erlang cookie\\r\\n\\r\\ncurrent node details:\\r\\n- node name: 'rabbitmq-cli-63@warp10'\\r\\n- home dir: /home/username\\r\\n- cookie hash: Sg08R8+G85EYHZ3H/9NUfg==\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"possible-reason-2-node-name-type-mismatch\",\n      children: \"Possible Reason 2: Node Name Type Mismatch\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"If RabbitMQ nodes are configured to use long node names (\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"RABBITMQ_USE_LONGNAME\"\n      }), \" is exported to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"true\"\n      }), \"),\\r\\nso should CLI tools via the same environment variable or the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"--longnames\"\n      }), \" command line flag introduced in 3.7.0.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"possible-reason-3-inter-node-connections-require-tls\",\n      children: \"Possible Reason 3: Inter-node Connections Require TLS\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"If RabbitMQ is set up to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./clustering-ssl\",\n        children: \"encrypt inter-node and CLI connections using TLS\"\n      }), \",\\r\\nCLI tools also must use TLS and therefore require additional options.\\r\\nNon-TLS connections from other nodes and CLI tools will fail.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"possible-reason-4-hostname-mismatch\",\n      children: \"Possible Reason 4: Hostname Mismatch\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Other reasons include a hostname mismatch in node name used by the target RabbitMQ node and that provided\\r\\nto the CLI tool (e.g. via the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"-n\"\n      }), \" flag). For example, if a node runs using \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbit@rmq1.eng.megacorp.local\"\n      }), \"\\r\\nas its name but \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl\"\n      }), \" is invoked as\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmq-diagnostics status -n rabbit@rmq-dev.eng.megacorp.local\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"then even if \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rmq-dev.eng.megacorp.local\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rmq1.eng.megacorp.local\"\n      }), \" resolve to the same IP address,\\r\\nthe server will reject \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl\"\n      }), \"'s authentication attempt. This scenario is relatively\\r\\nrare.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"When a recent Erlang/OTP version is used, authentication failures contain\\r\\nmore information and hostname mismatches can be identified better:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbit@localhost:\\r\\n  * connected to epmd (port 4369) on localhost\\r\\n  * epmd reports node 'rabbit' running on port 25672\\r\\n  * TCP connection succeeded but Erlang distribution failed\\r\\n\\r\\n  * Hostname mismatch: node \\\"rabbit@warp10\\\" believes its host is different. Please ensure that hostnames resolve the same way locally and on \\\"rabbit@warp10\\\"\\r\\n\\r\\n\\r\\ncurrent node details:\\r\\n- node name: 'rabbitmq-cli-30@warp10'\\r\\n- home dir: /Users/antares\\r\\n- cookie hash: Sg08R8+G85EYHZ3H/9NUfg==\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"other-possible-reasons\",\n      children: \"Other Possible Reasons\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Just like with any network connection, CLI-to-node connections can fail due to\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Hostname resolution failures\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Incorrect IP routing\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"TCP port access blocked (firewalls, etc)\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"and so on.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./networking\",\n        children: \"RabbitMQ Networking guide\"\n      }), \" contains a section on troubleshooting of networking-related issues.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"managing-nodes\",\n      children: \"Managing Nodes\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"getting-node-status\",\n      children: \"Getting node status\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To retrieve node status, use \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-diagnostics status\"\n      }), \" or \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-diagnostics.bat status\"\n      }), \"\\r\\nwith an optional \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"--node\"\n      }), \" target:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"examples\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"bash\",\n        label: \"bash\",\n        default: true,\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-bash\",\n            children: \"rabbitmq-diagnostics  status\\r\\n\\r\\nrabbitmq-diagnostics  status --node rabbit@target-hostname.local\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"PowerShell\",\n        label: \"PowerShell\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-PowerShell\",\n            children: \"rabbitmq-diagnostics .bat status\\r\\n\\r\\nrabbitmq-diagnostics .bat status --node rabbit@target-hostname.local\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"starting-a-node\",\n      children: \"Starting a node\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"How RabbitMQ nodes are started depends on the package type used:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"When using Debian and RPM packages on modern Linux distributions, nodes are \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.a, {\n          href: \"./install-debian#managing-service\",\n          children: [\"managed using \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"systemd\"\n          })]\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"When using Windows installer, nodes are usually \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./install-windows#managing\",\n          children: \"managed by the Windows service manager\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"When using Homebrew formula, nodes are managed using \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"brew services\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"When using generic UNIX build or binary Windows build, nodes are started using \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"sbin/rabbitmq-server\"\n        }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"sbin/rabbitmq-server.bat\"\n        }), \", respectively, in the installation root\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"stopping-a-node\",\n      children: \"Stopping a node\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"To stop a node, consider using the same service management tooling used when starting\\r\\nthe node, which depends on the package typed used when RabbitMQ was installed.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To stop a node using RabbitMQ CLI tools, use\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl shutdown\"\n      }), \" or \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl.bat shutdown\"\n      }), \" with an optional \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"--node\"\n      }), \" target:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"examples\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"bash\",\n        label: \"bash\",\n        default: true,\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-bash\",\n            children: \"rabbitmqctl shutdown\\r\\nrabbitmqctl shutdown --node rabbit@target-hostname.local\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"PowerShell\",\n        label: \"PowerShell\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-PowerShell\",\n            children: \"rabbitmqctl.bat shutdown\\r\\nrabbitmqctl.bat shutdown --node rabbit@target-hostname.local\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"http-api-cli\",\n      children: \"rabbitmqadmin\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./management-cli\",\n        children: \"rabbitmqadmin\"\n      }), \" is a command line tool that's built on top of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./management\",\n        children: \"RabbitMQ HTTP API\"\n      }), \".\\r\\nIt is not a replacement for \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl\"\n      }), \" and provides access to a subset of most commonly\\r\\nperformed operations provided by the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./management\",\n        children: \"management UI\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqadmin\"\n      }), \" uses HTTP API authentication mechanism (basic HTTP authentication).\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"It is a native binary and must be \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/rabbitmqadmin-ng/releases\",\n        children: \"downloaded separately\"\n      }), \" from the RabbitMQ\\r\\ndistribution.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"cli-and-clustering\",\n      children: \"\\\"Node-local\\\" and \\\"Clusterwide\\\" Commands\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Client connections, channels and queues will be distributed across cluster nodes.\\r\\nOperators need to be able to inspect and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./monitoring\",\n        children: \"monitor\"\n      }), \" such resources\\r\\nacross all cluster nodes.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"CLI tools such as \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./man/rabbitmqctl.8\",\n        children: \"rabbitmqctl\"\n      }), \" and\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-diagnostics\"\n      }), \" provide commands that inspect resources and\\r\\ncluster-wide state. Some commands focus on the state of a single node\\r\\n(e.g. \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-diagnostics environment\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-diagnostics status\"\n      }), \"), others inspect cluster-wide state. Some examples of the\\r\\nlatter include \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl list_connections\"\n      }), \", \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl list_mqtt_connections\"\n      }), \", \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl list_stomp_connections\"\n      }), \",\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl list_users\"\n      }), \", \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl list_vhosts\"\n      }), \" and so on.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Such \\\"cluster-wide\\\" commands will often contact one node\\r\\nfirst, discover cluster members and contact them all to\\r\\nretrieve and combine their respective state. For example,\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl list_connections\"\n      }), \" will contact all\\r\\nnodes, retrieve their AMQP 0-9-1 and AMQP 1.0 connections,\\r\\nand display them all to the user. The user doesn't have\\r\\nto manually contact all nodes.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Assuming a non-changing\\r\\nstate of the cluster (e.g. no connections are closed or\\r\\nopened), two CLI commands executed against two different\\r\\nnodes one after another will produce identical or\\r\\nsemantically identical results. \\\"Node-local\\\" commands, however, likely will not produce\\r\\nidentical results since two nodes rarely have entirely identical state.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"command-discovery\",\n      children: \"Commands Provided by Plugins\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"A RabbitMQ plugin can provide CLI commands that will be discovered by tools such as \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-diagnostics\"\n      }), \",\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-queues\"\n      }), \", \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl\"\n      }), \", and others. For plugin commands to be discoverable, the plugin\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"must be explicitly enabled\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"When performing command discovery, CLI tools will consult the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./plugins#enabled-plugins-file\",\n        children: \"Enabled Plugins File\"\n      }), \" to determine\\r\\nwhat plugins to scan for commands. If a plugin is not included into that file, e.g. because it was enabled implicitly as\\r\\na dependency, it won't be listed in the enabled plugins file and thus its CLI commands \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"will not be discovered\"\n      }), \"\\r\\nand will not be available.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Use the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"help\"\n      }), \" command to see what commands are available, both core and provided by plugins.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"aliases\",\n      children: \"Command Aliases\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl\"\n      }), \", \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-diagnostics\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-plugins\"\n      }), \" support command aliases. Aliases provide\\r\\na way to define abbreviated versions of certain commands and their arguments. For example,\\r\\ninstead of typing \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl environment\"\n      }), \" it may be more convenient to define an alias,\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl env\"\n      }), \", that would expand to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl environment\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Aliases are loaded from a file specified via the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"RABBITMQ_CLI_ALIASES_FILE\"\n      }), \" environment\\r\\nvariable:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"export RABBITMQ_CLI_ALIASES_FILE=/path/to/cli_aliases.conf\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The aliases file uses a very minimalistic ini-style \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"alias = command\"\n      }), \" format, for\\r\\nexample:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-ini\",\n        children: \"env = environment\\r\\nst  = status --quiet\\r\\n\\r\\nlp  = list_parameters --quiet\\r\\nlq  = list_queues --quiet\\r\\nlu  = list_users --quiet\\r\\n\\r\\ncs  = cipher_suites --openssl-format --quiet\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"With this alias file in place it will be possible to use\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmqctl env\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"which would expand to\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmqctl environment\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"or\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmqctl lq\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"which would expand to\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmqctl list_queues --quiet\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The last alias in the example above configures a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-diagnostics\"\n      }), \" command:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmq-diagnostics cs\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"would expand to\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmq-diagnostics cipher_suites --openssl-format --quiet\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"All tools process aliases the same way. As long as the expanded command is recognized,\\r\\naliases can be used with any tool or even more than one. For example,\\r\\nboth \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-diagnostics\"\n      }), \" provide the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"environment\"\n      }), \" command\\r\\nso the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"env\"\n      }), \" alias works for both of them exactly the same way:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmq-diagnostics env\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"would expand to\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmq-diagnostics environment\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The file will be consulted only if the command invoked is not provided by the tool.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi92ZXJzaW9uZWRfZG9jcy92ZXJzaW9uLTMuMTMvY2xpLm1kIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFiYml0bXEtd2Vic2l0ZS8uL3ZlcnNpb25lZF9kb2NzL3ZlcnNpb24tMy4xMy9jbGkubWQ/MTk3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyID0ge1xuXHR0aXRsZTogJ0NvbW1hbmQgTGluZSBUb29scydcbn07XG5leHBvcnQgY29uc3QgY29udGVudFRpdGxlID0gJ0NvbW1hbmQgTGluZSBUb29scyc7XG5leHBvcnQge2RlZmF1bHQgYXMgbWV0YWRhdGF9IGZyb20gJ0BzaXRlLy5kb2N1c2F1cnVzL2RvY3VzYXVydXMtcGx1Z2luLWNvbnRlbnQtZG9jcy9kZWZhdWx0L3NpdGUtdmVyc2lvbmVkLWRvY3MtdmVyc2lvbi0zLTEzLWNsaS1tZC0zMTQuanNvbidcbmV4cG9ydCBjb25zdCBhc3NldHMgPSB7XG5cbn07XG5cbmltcG9ydCB7RnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBqc3ggYXMgX2pzeCwganN4cyBhcyBfanN4c30gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQge3VzZU1EWENvbXBvbmVudHMgYXMgX3Byb3ZpZGVDb21wb25lbnRzfSBmcm9tIFwiQG1keC1qcy9yZWFjdFwiO1xuaW1wb3J0IFRhYnMgZnJvbSAnQHRoZW1lL1RhYnMnO1xuaW1wb3J0IFRhYkl0ZW0gZnJvbSAnQHRoZW1lL1RhYkl0ZW0nO1xuZXhwb3J0IGNvbnN0IHRvYyA9IFt7XG4gIFwidmFsdWVcIjogXCJUYWJsZSBvZiBDb250ZW50c1wiLFxuICBcImlkXCI6IFwidGFibGUtb2YtY29udGVudHNcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJPdmVydmlld1wiLFxuICBcImlkXCI6IFwib3ZlcnZpZXdcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJTdGFuZGFyZCBSYWJiaXRNUSBDTEkgVG9vbHNcIixcbiAgXCJpZFwiOiBcInN0YW5kYXJkLXJhYmJpdG1xLWNsaS10b29sc1wiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkFkZGl0aW9uYWwgVG9vbHNcIixcbiAgXCJpZFwiOiBcImFkZGl0aW9uYWwtdG9vbHNcIixcbiAgXCJsZXZlbFwiOiAzXG59LCB7XG4gIFwidmFsdWVcIjogXCJTeXN0ZW0gYW5kIEVudmlyb25tZW50IFJlcXVpcmVtZW50c1wiLFxuICBcImlkXCI6IFwicmVxdWlyZW1lbnRzXCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwiSW5zdGFsbGF0aW9uXCIsXG4gIFwiaWRcIjogXCJpbnN0YWxsYXRpb25cIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJEaXNjb3ZlcmluZyBDb21tYW5kcyBVc2luZyB0aGUgSGVscCBDb21tYW5kXCIsXG4gIFwiaWRcIjogXCJoZWxwXCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwicmFiYml0bXFjdGxcIixcbiAgXCJpZFwiOiBcInJhYmJpdG1xY3RsXCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwicmFiYml0bXEtcXVldWVzXCIsXG4gIFwiaWRcIjogXCJyYWJiaXRtcS1xdWV1ZXNcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJyYWJiaXRtcS1zdHJlYW1zXCIsXG4gIFwiaWRcIjogXCJyYWJiaXRtcS1zdHJlYW1zXCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwicmFiYml0bXEtZGlhZ25vc3RpY3NcIixcbiAgXCJpZFwiOiBcInJhYmJpdG1xLWRpYWdub3N0aWNzXCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwicmFiYml0bXEtcGx1Z2luc1wiLFxuICBcImlkXCI6IFwicmFiYml0bXEtcGx1Z2luc1wiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcInJhYmJpdG1xLXVwZ3JhZGVcIixcbiAgXCJpZFwiOiBcInJhYmJpdG1xLXVwZ3JhZGVcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJPZmZsaW5lIE1vZGVcIixcbiAgXCJpZFwiOiBcIm9mZmxpbmUtbW9kZVwiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkF1dGhlbnRpY2F0aW9uXCIsXG4gIFwiaWRcIjogXCJhdXRoZW50aWNhdGlvblwiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIlVzaW5nIENMSSBUb29scyBhZ2FpbnN0IFJlbW90ZSBTZXJ2ZXIgTm9kZXNcIixcbiAgXCJpZFwiOiBcInJlbW90ZS1ub2Rlc1wiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIk5vZGUgTmFtZXNcIixcbiAgXCJpZFwiOiBcIm5vZGUtbmFtZXNcIixcbiAgXCJsZXZlbFwiOiAzXG59LCB7XG4gIFwidmFsdWVcIjogXCJDYXZlYXRzIGluIENvbnRhaW5lcml6ZWQgRW52aXJvbm1lbnRzXCIsXG4gIFwiaWRcIjogXCJjb250YWluZXJzXCIsXG4gIFwibGV2ZWxcIjogM1xufSwge1xuICBcInZhbHVlXCI6IFwiU2hhcmVkIFNlY3JldCBNaXNtYXRjaCBCZXR3ZWVuIFRoZSBIb3N0IGFuZCB0aGUgQ29udGFpbmVyXCIsXG4gIFwiaWRcIjogXCJzaGFyZWQtc2VjcmV0LW1pc21hdGNoLWJldHdlZW4tdGhlLWhvc3QtYW5kLXRoZS1jb250YWluZXJcIixcbiAgXCJsZXZlbFwiOiA0XG59LCB7XG4gIFwidmFsdWVcIjogXCJTaGFyZWQgU2VjcmV0IFNlZWRpbmcgUmFjZSBDb25kaXRpb25cIixcbiAgXCJpZFwiOiBcInNoYXJlZC1zZWNyZXQtc2VlZGluZy1yYWNlLWNvbmRpdGlvblwiLFxuICBcImxldmVsXCI6IDRcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIk9wdGlvbnMgYW5kIFBvc2l0aW9uYWwgQXJndW1lbnRzXCIsXG4gIFwiaWRcIjogXCJwYXNzaW5nLWFyZ3VtZW50c1wiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkhvdyBDTEkgVG9vbHMgQXV0aGVudGljYXRlIHRvIE5vZGVzIChhbmQgTm9kZXMgdG8gRWFjaCBPdGhlcik6IHRoZSBFcmxhbmcgQ29va2llXCIsXG4gIFwiaWRcIjogXCJlcmxhbmctY29va2llXCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwiQ29va2llIEZpbGUgTG9jYXRpb25zXCIsXG4gIFwiaWRcIjogXCJjb29raWUtZmlsZS1sb2NhdGlvbnNcIixcbiAgXCJsZXZlbFwiOiAzXG59LCB7XG4gIFwidmFsdWVcIjogXCJMaW51eCwgTWFjT1MsICpCU0RcIixcbiAgXCJpZFwiOiBcImxpbnV4LW1hY29zLWJzZFwiLFxuICBcImxldmVsXCI6IDRcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkNvbW11bml0eSBEb2NrZXIgSW1hZ2UgYW5kIEt1YmVybmV0ZXNcIixcbiAgXCJpZFwiOiBcImNvbW11bml0eS1kb2NrZXItaW1hZ2UtYW5kLWt1YmVybmV0ZXNcIixcbiAgXCJsZXZlbFwiOiA0XG59LCB7XG4gIFwidmFsdWVcIjogXCJXaW5kb3dzXCIsXG4gIFwiaWRcIjogXCJ3aW5kb3dzXCIsXG4gIFwibGV2ZWxcIjogNFxufSwge1xuICBcInZhbHVlXCI6IFwiRXJsYW5nIDIwLjIgb3IgbGF0ZXJcIixcbiAgXCJpZFwiOiBcImVybGFuZy0yMDItb3ItbGF0ZXJcIixcbiAgXCJsZXZlbFwiOiA1XG59LCB7XG4gIFwidmFsdWVcIjogXCJPdmVycmlkaW5nIFVzaW5nIENMSSBhbmQgUnVudGltZSBDb21tYW5kIExpbmUgQXJndW1lbnRzXCIsXG4gIFwiaWRcIjogXCJvdmVycmlkaW5nLXVzaW5nLWNsaS1hbmQtcnVudGltZS1jb21tYW5kLWxpbmUtYXJndW1lbnRzXCIsXG4gIFwibGV2ZWxcIjogM1xufSwge1xuICBcInZhbHVlXCI6IFwiVHJvdWJsZXNob290aW5nXCIsXG4gIFwiaWRcIjogXCJjb29raWUtZmlsZS10cm91Ymxlc2hvb3RpbmdcIixcbiAgXCJsZXZlbFwiOiAzXG59LCB7XG4gIFwidmFsdWVcIjogXCJDTEkgVG9vbHNcIixcbiAgXCJpZFwiOiBcImNsaS10b29sc1wiLFxuICBcImxldmVsXCI6IDRcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIlNlcnZlciBOb2Rlc1wiLFxuICBcImlkXCI6IFwic2VydmVyLW5vZGVzXCIsXG4gIFwibGV2ZWxcIjogNFxufSwge1xuICBcInZhbHVlXCI6IFwiSG9zdG5hbWUgUmVzb2x1dGlvblwiLFxuICBcImlkXCI6IFwiaG9zdG5hbWUtcmVzb2x1dGlvblwiLFxuICBcImxldmVsXCI6IDRcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkF1dGhlbnRpY2F0aW9uIEZhaWx1cmVzXCIsXG4gIFwiaWRcIjogXCJjbGktYXV0aGVudGljYXRpb24tZmFpbHVyZXNcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJQb3NzaWJsZSBSZWFzb24gMTogTWlzcGxhY2VkIG9yIE1pc3NpbmcgQ29va2llIEZpbGVcIixcbiAgXCJpZFwiOiBcInBvc3NpYmxlLXJlYXNvbi0xLW1pc3BsYWNlZC1vci1taXNzaW5nLWNvb2tpZS1maWxlXCIsXG4gIFwibGV2ZWxcIjogNFxufSwge1xuICBcInZhbHVlXCI6IFwiUG9zc2libGUgUmVhc29uIDI6IE5vZGUgTmFtZSBUeXBlIE1pc21hdGNoXCIsXG4gIFwiaWRcIjogXCJwb3NzaWJsZS1yZWFzb24tMi1ub2RlLW5hbWUtdHlwZS1taXNtYXRjaFwiLFxuICBcImxldmVsXCI6IDRcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIlBvc3NpYmxlIFJlYXNvbiAzOiBJbnRlci1ub2RlIENvbm5lY3Rpb25zIFJlcXVpcmUgVExTXCIsXG4gIFwiaWRcIjogXCJwb3NzaWJsZS1yZWFzb24tMy1pbnRlci1ub2RlLWNvbm5lY3Rpb25zLXJlcXVpcmUtdGxzXCIsXG4gIFwibGV2ZWxcIjogNFxufSwge1xuICBcInZhbHVlXCI6IFwiUG9zc2libGUgUmVhc29uIDQ6IEhvc3RuYW1lIE1pc21hdGNoXCIsXG4gIFwiaWRcIjogXCJwb3NzaWJsZS1yZWFzb24tNC1ob3N0bmFtZS1taXNtYXRjaFwiLFxuICBcImxldmVsXCI6IDRcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIk90aGVyIFBvc3NpYmxlIFJlYXNvbnNcIixcbiAgXCJpZFwiOiBcIm90aGVyLXBvc3NpYmxlLXJlYXNvbnNcIixcbiAgXCJsZXZlbFwiOiA0XG59LCB7XG4gIFwidmFsdWVcIjogXCJNYW5hZ2luZyBOb2Rlc1wiLFxuICBcImlkXCI6IFwibWFuYWdpbmctbm9kZXNcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJHZXR0aW5nIG5vZGUgc3RhdHVzXCIsXG4gIFwiaWRcIjogXCJnZXR0aW5nLW5vZGUtc3RhdHVzXCIsXG4gIFwibGV2ZWxcIjogM1xufSwge1xuICBcInZhbHVlXCI6IFwiU3RhcnRpbmcgYSBub2RlXCIsXG4gIFwiaWRcIjogXCJzdGFydGluZy1hLW5vZGVcIixcbiAgXCJsZXZlbFwiOiAzXG59LCB7XG4gIFwidmFsdWVcIjogXCJTdG9wcGluZyBhIG5vZGVcIixcbiAgXCJpZFwiOiBcInN0b3BwaW5nLWEtbm9kZVwiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcInJhYmJpdG1xYWRtaW5cIixcbiAgXCJpZFwiOiBcImh0dHAtYXBpLWNsaVwiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIiZxdW90O05vZGUtbG9jYWwmcXVvdDsgYW5kICZxdW90O0NsdXN0ZXJ3aWRlJnF1b3Q7IENvbW1hbmRzXCIsXG4gIFwiaWRcIjogXCJjbGktYW5kLWNsdXN0ZXJpbmdcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJDb21tYW5kcyBQcm92aWRlZCBieSBQbHVnaW5zXCIsXG4gIFwiaWRcIjogXCJjb21tYW5kLWRpc2NvdmVyeVwiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkNvbW1hbmQgQWxpYXNlc1wiLFxuICBcImlkXCI6IFwiYWxpYXNlc1wiLFxuICBcImxldmVsXCI6IDJcbn1dO1xuZnVuY3Rpb24gX2NyZWF0ZU1keENvbnRlbnQocHJvcHMpIHtcbiAgY29uc3QgX2NvbXBvbmVudHMgPSB7XG4gICAgYTogXCJhXCIsXG4gICAgYWRtb25pdGlvbjogXCJhZG1vbml0aW9uXCIsXG4gICAgY29kZTogXCJjb2RlXCIsXG4gICAgaDE6IFwiaDFcIixcbiAgICBoMjogXCJoMlwiLFxuICAgIGgzOiBcImgzXCIsXG4gICAgaDQ6IFwiaDRcIixcbiAgICBoNTogXCJoNVwiLFxuICAgIGhlYWRlcjogXCJoZWFkZXJcIixcbiAgICBsaTogXCJsaVwiLFxuICAgIG9sOiBcIm9sXCIsXG4gICAgcDogXCJwXCIsXG4gICAgcHJlOiBcInByZVwiLFxuICAgIHN0cm9uZzogXCJzdHJvbmdcIixcbiAgICB1bDogXCJ1bFwiLFxuICAgIC4uLl9wcm92aWRlQ29tcG9uZW50cygpLFxuICAgIC4uLnByb3BzLmNvbXBvbmVudHNcbiAgfTtcbiAgcmV0dXJuIF9qc3hzKF9GcmFnbWVudCwge1xuICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5oZWFkZXIsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmgxLCB7XG4gICAgICAgIGlkOiBcImNvbW1hbmQtbGluZS10b29sc1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJDb21tYW5kIExpbmUgVG9vbHNcIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwidGFibGUtb2YtY29udGVudHNcIixcbiAgICAgIGNoaWxkcmVuOiBcIlRhYmxlIG9mIENvbnRlbnRzXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJUaGlzIGd1aWRlIGNvdmVycyBhIG51bWJlciBvZiB0b3BpY3MgcmVsYXRlZCB0byBSYWJiaXRNUSBDTEkgdG9vbHMgdXNhZ2U6XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMudWwsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIjb3ZlcnZpZXdcIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJPdmVydmlld1wiXG4gICAgICAgIH0pXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIiNpbnN0YWxsYXRpb25cIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJJbnN0YWxsYXRpb25cIlxuICAgICAgICB9KSwgXCIgYW5kIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIiNyZXF1aXJlbWVudHNcIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJyZXF1aXJlbWVudHNcIlxuICAgICAgICB9KSwgXCIgZm9yIHJ1bm5pbmcgQ0xJIHRvb2xzXCJdXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtcIkhvdyBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIjZXJsYW5nLWNvb2tpZVwiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIkNMSSB0b29scyBhdXRoZW50aWNhdGUgdG8gUmFiYml0TVEgbm9kZXNcIlxuICAgICAgICB9KSwgXCIgYW5kIGhvdyB0byBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIjY2xpLWF1dGhlbnRpY2F0aW9uLWZhaWx1cmVzXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwidHJvdWJsZXNob290ZSBhdXRoZW50aWNhdGlvbiBmYWlsdXJlc1wiXG4gICAgICAgIH0pXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiI3Bhc3NpbmctYXJndW1lbnRzXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwiQ29tbWFuZCBsaW5lIHVzYWdlXCJcbiAgICAgICAgfSlcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIiNjbGktYW5kLWNsdXN0ZXJpbmdcIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJDTEkgdG9vbHMgYW5kIGNsdXN0ZXJpbmdcIlxuICAgICAgICB9KVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJIb3cgdG8gXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiI25vZGUtbmFtZXNcIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJhZGRyZXNzIGEgc3BlY2lmaWMgbm9kZVwiXG4gICAgICAgIH0pXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJDYXZlYXRzIGFyb3VuZCBDTEkgdG9vbHMgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiI2NvbnRhaW5lcnNcIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJ1c2FnZSBpbiBjb250YWluZXJpemVkIGVudmlyb25tZW50c1wiXG4gICAgICAgIH0pXVxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcIm92ZXJ2aWV3XCIsXG4gICAgICBjaGlsZHJlbjogXCJPdmVydmlld1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDMsIHtcbiAgICAgIGlkOiBcInN0YW5kYXJkLXJhYmJpdG1xLWNsaS10b29sc1wiLFxuICAgICAgY2hpbGRyZW46IFwiU3RhbmRhcmQgUmFiYml0TVEgQ0xJIFRvb2xzXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJSYWJiaXRNUSBzaGlwcyB3aXRoIG11bHRpcGxlIGNvbW1hbmQgbGluZSB0b29scywgZWFjaCB3aXRoIGEgc2V0IG9mIHJlbGF0ZWQgY29tbWFuZHM6XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMudWwsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIi4vbWFuL3JhYmJpdG1xY3RsLjhcIixcbiAgICAgICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcWN0bFwiXG4gICAgICAgICAgfSlcbiAgICAgICAgfSksIFwiIGZvciBzZXJ2aWNlIG1hbmFnZW1lbnQgYW5kIGdlbmVyYWwgb3BlcmF0b3IgdGFza3NcIl1cbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiLi9tYW4vcmFiYml0bXEtZGlhZ25vc3RpY3MuOFwiLFxuICAgICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLWRpYWdub3N0aWNzXCJcbiAgICAgICAgICB9KVxuICAgICAgICB9KSwgXCIgZm9yIGRpYWdub3N0aWNzIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIi4vbW9uaXRvcmluZ1wiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIm1vbml0b3JpbmcgYW5kIGhlYWx0aCBjaGVja2luZ1wiXG4gICAgICAgIH0pXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIuL21hbi9yYWJiaXRtcS1wbHVnaW5zLjhcIixcbiAgICAgICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS1wbHVnaW5zXCJcbiAgICAgICAgICB9KVxuICAgICAgICB9KSwgXCIgZm9yIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIi4vcGx1Z2luc1wiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcInBsdWdpbiBtYW5hZ2VtZW50XCJcbiAgICAgICAgfSldXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIi4vbWFuL3JhYmJpdG1xLXF1ZXVlcy44XCIsXG4gICAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXEtcXVldWVzXCJcbiAgICAgICAgICB9KVxuICAgICAgICB9KSwgXCIgZm9yIG1haW50ZW5hbmNlIHRhc2tzIG9uIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIi4vcXVldWVzXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwicXVldWVzXCJcbiAgICAgICAgfSksIFwiLCBpbiBwYXJ0aWN1bGFyIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIi4vcXVvcnVtLXF1ZXVlc1wiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcInF1b3J1bSBxdWV1ZXNcIlxuICAgICAgICB9KV1cbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiLi9tYW4vcmFiYml0bXEtc3RyZWFtcy44XCIsXG4gICAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXEtc3RyZWFtc1wiXG4gICAgICAgICAgfSlcbiAgICAgICAgfSksIFwiIGZvciBtYWludGVuYW5jZSB0YXNrcyBvbiBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIuL3N0cmVhbXNcIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJzdHJlYW1zXCJcbiAgICAgICAgfSldXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIi4vbWFuL3JhYmJpdG1xLXVwZ3JhZGUuOFwiLFxuICAgICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLXVwZ3JhZGVcIlxuICAgICAgICAgIH0pXG4gICAgICAgIH0pLCBcIiBmb3IgbWFpbnRlbmFuY2UgdGFza3MgcmVsYXRlZCB0byBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIuL3VwZ3JhZGVcIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJ1cGdyYWRlc1wiXG4gICAgICAgIH0pXVxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJPbiBXaW5kb3dzLCB0aGUgYWJvdmUgdG9vbCBuYW1lcyB3aWxsIGVuZCB3aXRoIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiLmJhdFwiXG4gICAgICB9KSwgXCIsIGUuZy4gXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcWN0bFwiXG4gICAgICB9KSwgXCIgaW4gYSBXaW5kb3dzIGluc3RhbGxhdGlvbiB3aWxsXFxyXFxuYmUgbmFtZWQgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcWN0bC5iYXRcIlxuICAgICAgfSksIFwiLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgzLCB7XG4gICAgICBpZDogXCJhZGRpdGlvbmFsLXRvb2xzXCIsXG4gICAgICBjaGlsZHJlbjogXCJBZGRpdGlvbmFsIFRvb2xzXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJBZGRpdGlvbmFsIHRvb2xzIGFyZSBvcHRpb25hbCBhbmQgY2FuIGJlIG9idGFpbmVkIGZyb20gR2l0SHViOlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnVsLCB7XG4gICAgICBjaGlsZHJlbjogW1wiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbX2pzeHMoX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiLi9tYW5hZ2VtZW50LWNsaVwiLFxuICAgICAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcWFkbWluXCJcbiAgICAgICAgICB9KSwgXCIgdjJcIl1cbiAgICAgICAgfSksIFwiIGZvciBvcGVyYXRvciB0YXNrcyBvdmVyIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIuL21hbmFnZW1lbnQjaHR0cC1hcGlcIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJIVFRQIEFQSVwiXG4gICAgICAgIH0pXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCJodHRwczovL2dpdGh1Yi5jb20vcmFiYml0bXEvc3VwcG9ydC10b29sc1wiLFxuICAgICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLWNvbGxlY3QtZW52XCJcbiAgICAgICAgICB9KVxuICAgICAgICB9KSwgXCIgd2hpY2ggY29sbGVjdHMgcmVsZXZhbnQgY2x1c3RlciBhbmQgZW52aXJvbm1lbnQgaW5mb3JtYXRpb25cXHJcXG5hcyB3ZWxsIGFzIHNlcnZlciBsb2dzLiBUaGlzIHRvb2wgaXMgc3BlY2lmaWMgdG8gTGludXggYW5kIFVOSVgtbGlrZSBvcGVyYXRpbmcgc3lzdGVtcy5cIl1cbiAgICAgIH0pLCBcIlxcblwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiRGlmZmVyZW50IHRvb2xzIGNvdmVyIGRpZmZlcmVudCB1c2FnZSBzY2VuYXJpb3MuIEZvciBleGFtcGxlLCBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xY3RsXCJcbiAgICAgIH0pLCBcIiBpcyB1c3VhbGx5XFxyXFxub25seSBhdmFpbGFibGUgdG8gUmFiYml0TVEgYWRtaW5pc3RyYXRvciBnaXZlbiB0aGF0IGl0IHByb3ZpZGVzIGZ1bGwgY29udHJvbCBvdmVyIGEgbm9kZSxcXHJcXG5pbmNsdWRpbmcgdmlydHVhbCBob3N0LCB1c2VyIGFuZCBwZXJtaXNzaW9uIG1hbmFnZW1lbnQsIGRlc3RydWN0aXZlIG9wZXJhdGlvbnNcXHJcXG5vbiBub2RlJ3MgZGF0YSBhbmQgc28gb24uXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xYWRtaW5cIlxuICAgICAgfSksIFwiIGlzIGJ1aWx0IG9uIHRvcCBvZiB0aGUgSFRUUCBBUEkgYW5kIHVzZXMgYSBkaWZmZXJlbnQgbWVjaGFuaXNtLCBhbmQgb25seVxcclxcbnJlcXVpcmVzIHRoYXQgdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL21hbmFnZW1lbnQjaHR0cC1hcGlcIixcbiAgICAgICAgY2hpbGRyZW46IFwiSFRUUCBBUElcIlxuICAgICAgfSksIFwiIHBvcnQgaXMgb3BlbiBmb3Igb3V0c2lkZSBjb25uZWN0aW9ucy5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkV2ZW4gdGhvdWdoIENMSSB0b29scyBzaGlwIHdpdGggdGhlIHNlcnZlciwgbW9zdCBjb21tYW5kcyBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiI3JlbW90ZS1ub2Rlc1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJjYW4gYmUgdXNlZCB0byBvcGVyYXRlIG9uIHJlbW90ZSBub2Rlc1wiXG4gICAgICB9KSwgXCIuXFxyXFxuUGx1Z2lucyBjYW4gXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIiNjb21tYW5kLWRpc2NvdmVyeVwiLFxuICAgICAgICBjaGlsZHJlbjogXCJwcm92aWRlIENMSSBjb21tYW5kc1wiXG4gICAgICB9KSwgXCIgdGhhdCB3aWxsIGJlIGRpc2NvdmVyZWQgYnkgQ0xJIHRvb2xzIGZvciBleHBsaWNpdGx5IGVuYWJsZWQgcGx1Z2lucy5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwicmVxdWlyZW1lbnRzXCIsXG4gICAgICBjaGlsZHJlbjogXCJTeXN0ZW0gYW5kIEVudmlyb25tZW50IFJlcXVpcmVtZW50c1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJSYWJiaXRNUSBDTEkgdG9vbHMgcmVxdWlyZSBhIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL3doaWNoLWVybGFuZ1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJjb21wYXRpYmxlIEVybGFuZy9PVFBcIlxuICAgICAgfSksIFwiIHZlcnNpb24gdG8gYmUgaW5zdGFsbGVkLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVGhlIHRvb2xzIGFzc3VtZSB0aGF0IHN5c3RlbSBsb2NhbGUgaXMgYSBVVEYtOCBvbmUgKGUuZy4gXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJlbl9HQi5VVEYtOFwiXG4gICAgICB9KSwgXCIgb3IgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJlbl9VUy5VVEYtOFwiXG4gICAgICB9KSwgXCIpLiBJZiB0aGF0J3NcXHJcXG5ub3QgdGhlIGNhc2UsIHRoZSB0b29scyBtYXkgc3RpbGwgZnVuY3Rpb24gY29ycmVjdGx5IGJ1dCBpdCBjYW5ub3QgYmUgZ3VhcmFudGVlZC5cXHJcXG5BIHdhcm5pbmcgd2lsbCBiZSBlbWl0dGVkIGluIG5vbi1VVEYtOCBsb2NhbGVzLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJpbnN0YWxsYXRpb25cIixcbiAgICAgIGNoaWxkcmVuOiBcIkluc3RhbGxhdGlvblwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJFeGNlcHQgZm9yIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXFhZG1pblwiXG4gICAgICB9KSwgXCIsIGFsbCBvZiB0aGUgdG9vbHMgYWJvdmUgc2hpcCB3aXRoIFJhYmJpdE1RIGFuZCBjYW4gYmUgZm91bmQgdW5kZXIgdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwic2JpblwiXG4gICAgICB9KSwgXCJcXHJcXG5kaXJlY3RvcnkgaW4gaW5zdGFsbGF0aW9uIHJvb3QuIFdpdGggbW9zdCBwYWNrYWdlIHR5cGVzIHRoYXQgZGlyZWN0b3J5IGlzIGFkZGVkIHRvIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiUEFUSFwiXG4gICAgICB9KSwgXCIgYXQgaW5zdGFsbGF0aW9uIHRpbWUuXFxyXFxuVGhpcyBtZWFucyB0aGF0IGNvcmUgdG9vbHMgc3VjaCBhcyBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLWRpYWdub3N0aWNzXCJcbiAgICAgIH0pLCBcIiBhbmQgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcWN0bFwiXG4gICAgICB9KSwgXCIgYXJlIGF2YWlsYWJsZSBvbiBldmVyeSBub2RlXFxyXFxudGhhdCBoYXMgUmFiYml0TVEgaW5zdGFsbGVkLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vaW5zdGFsbC1nZW5lcmljLXVuaXhcIixcbiAgICAgICAgY2hpbGRyZW46IFwiR2VuZXJpYyBVTklYIHBhY2thZ2VcIlxuICAgICAgfSksIFwiIHVzZXJzIGhhdmUgdG8gbWFrZSBzdXJlIHRoYXQgdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwic2JpblwiXG4gICAgICB9KSwgXCIgZGlyZWN0b3J5IHVuZGVyIGluc3RhbGxhdGlvblxcclxcbnJvb3QgaXMgYWRkZWQgdG8gXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJQQVRIXCJcbiAgICAgIH0pLCBcIiBmb3Igc2ltcGxlciBpbnRlcmFjdGl2ZSB1c2UuIE5vbi1pbnRlcmFjdGl2ZSB1c2UgY2FzZXMgY2FuIHVzZSBmdWxsIG9yIHJlbGF0aXZlIHBhdGhzIHdpdGhvdXRcXHJcXG5tb2RpZmljYXRpb25zIHRvIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIlBBVEhcIlxuICAgICAgfSksIFwiIGVudmlyb25tZW50IHZhcmlhYmxlLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vbWFuYWdlbWVudC1jbGlcIixcbiAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xYWRtaW5cIlxuICAgICAgICB9KVxuICAgICAgfSksIFwiIGlzIGEgc3RhbmRhbG9uZSB0b29sXFxyXFxudGhhdCBpcyBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiaHR0cHM6Ly9naXRodWIuY29tL3JhYmJpdG1xL3JhYmJpdG1xYWRtaW4tbmcvcmVsZWFzZXNcIixcbiAgICAgICAgY2hpbGRyZW46IFwiZGlzdHJpYnV0ZWQgdmlhIEdpdEh1YiByZWxlYXNlc1wiXG4gICAgICB9KSwgXCIuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJJZiBpbnRlcmFjdGlvbiBmcm9tIGEgcmVtb3RlIG5vZGUgaXMgcmVxdWlyZWQsIGRvd25sb2FkIGFuZCBleHRyYWN0IHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi9pbnN0YWxsLWdlbmVyaWMtdW5peFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJnZW5lcmljIFVOSVggcGFja2FnZVwiXG4gICAgICB9KSwgXCJcXHJcXG5vciB1c2UgdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL2luc3RhbGwtd2luZG93c1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJXaW5kb3dzIGluc3RhbGxlclwiXG4gICAgICB9KSwgXCIuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJCZXNpZGVzIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIjYXV0aGVudGljYXRpb25cIixcbiAgICAgICAgY2hpbGRyZW46IFwiYXV0aGVudGljYXRpb25cIlxuICAgICAgfSksIFwiLCBhbGwgY29uZmlndXJhdGlvbiBmb3IgY29yZSBDTEkgdG9vbHMgaXMgb3B0aW9uYWwuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiQ29tbWFuZHMgdGhhdCByZXF1aXJlIHNwZWNpZmljIGFyZ3VtZW50cyBsaXN0IHRoZW0gaW4gdGhlIHVzYWdlIHNlY3Rpb24gYW5kIHdpbGwgcmVwb3J0XFxyXFxuYW55IG1pc3NpbmcgYXJndW1lbnRzIHdoZW4gZXhlY3V0ZWQuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwiaGVscFwiLFxuICAgICAgY2hpbGRyZW46IFwiRGlzY292ZXJpbmcgQ29tbWFuZHMgVXNpbmcgdGhlIEhlbHAgQ29tbWFuZFwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJUbyBmaW5kIG91dCB3aGF0IGNvbW1hbmRzIGFyZSBhdmFpbGFibGUsIHVzZSB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJoZWxwXCJcbiAgICAgIH0pLCBcIiBjb21tYW5kOlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhUYWJzLCB7XG4gICAgICBncm91cElkOiBcImV4YW1wbGVzXCIsXG4gICAgICBjaGlsZHJlbjogW19qc3goVGFiSXRlbSwge1xuICAgICAgICB2YWx1ZTogXCJiYXNoXCIsXG4gICAgICAgIGxhYmVsOiBcImJhc2hcIixcbiAgICAgICAgZGVmYXVsdDogdHJ1ZSxcbiAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWJhc2hcIixcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xY3RsIGhlbHBcXHJcXG5cXHJcXG5yYWJiaXRtcS1kaWFnbm9zdGljcyBoZWxwXFxuXCJcbiAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgICAgfSksIF9qc3goVGFiSXRlbSwge1xuICAgICAgICB2YWx1ZTogXCJQb3dlclNoZWxsXCIsXG4gICAgICAgIGxhYmVsOiBcIlBvd2VyU2hlbGxcIixcbiAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLVBvd2VyU2hlbGxcIixcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xY3RsLmJhdCBoZWxwXFxyXFxuXFxyXFxucmFiYml0bXEtZGlhZ25vc3RpY3MuYmF0IGhlbHBcXG5cIlxuICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgICB9KV1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJUaGUgY29tbWFuZCBjYW4gZGlzcGxheSB1c2FnZSBpbmZvcm1hdGlvbiBmb3IgYSBwYXJ0aWN1bGFyIGNvbW1hbmQ6XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoVGFicywge1xuICAgICAgZ3JvdXBJZDogXCJleGFtcGxlc1wiLFxuICAgICAgY2hpbGRyZW46IFtfanN4KFRhYkl0ZW0sIHtcbiAgICAgICAgdmFsdWU6IFwiYmFzaFwiLFxuICAgICAgICBsYWJlbDogXCJiYXNoXCIsXG4gICAgICAgIGRlZmF1bHQ6IHRydWUsXG4gICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1iYXNoXCIsXG4gICAgICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS1kaWFnbm9zdGljcyBoZWxwIHN0YXR1c1xcblwiXG4gICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICAgIH0pLCBfanN4KFRhYkl0ZW0sIHtcbiAgICAgICAgdmFsdWU6IFwiUG93ZXJTaGVsbFwiLFxuICAgICAgICBsYWJlbDogXCJQb3dlclNoZWxsXCIsXG4gICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1Qb3dlclNoZWxsXCIsXG4gICAgICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcWN0bC5iYXQgaGVscCBhZGRfdmhvc3RcXHJcXG5cXHJcXG5yYWJiaXRtcS1kaWFnbm9zdGljcy5iYXQgaGVscCBzdGF0dXNcXG5cIlxuICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgICB9KV1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkFsdGVybmF0aXZlbHksIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIi0taGVscFwiXG4gICAgICB9KSwgXCIgb3B0aW9uIGNhbiBiZSB1c2VkOlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhUYWJzLCB7XG4gICAgICBncm91cElkOiBcImV4YW1wbGVzXCIsXG4gICAgICBjaGlsZHJlbjogW19qc3goVGFiSXRlbSwge1xuICAgICAgICB2YWx1ZTogXCJiYXNoXCIsXG4gICAgICAgIGxhYmVsOiBcImJhc2hcIixcbiAgICAgICAgZGVmYXVsdDogdHJ1ZSxcbiAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWJhc2hcIixcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xY3RsIC0taGVscFxcclxcblxcclxcbnJhYmJpdG1xLWRpYWdub3N0aWNzIC0taGVscFxcblwiXG4gICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICAgIH0pLCBfanN4KFRhYkl0ZW0sIHtcbiAgICAgICAgdmFsdWU6IFwiUG93ZXJTaGVsbFwiLFxuICAgICAgICBsYWJlbDogXCJQb3dlclNoZWxsXCIsXG4gICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1Qb3dlclNoZWxsXCIsXG4gICAgICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcWN0bC5iYXQgLS1oZWxwXFxyXFxuXFxyXFxucmFiYml0bXEtZGlhZ25vc3RpY3MuYmF0IC0taGVscFxcblwiXG4gICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICAgIH0pXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcImluY2x1ZGluZyBmb3IgaW5kaXZpZHVhbCBjb21tYW5kczpcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhUYWJzLCB7XG4gICAgICBncm91cElkOiBcImV4YW1wbGVzXCIsXG4gICAgICBjaGlsZHJlbjogW19qc3goVGFiSXRlbSwge1xuICAgICAgICB2YWx1ZTogXCJiYXNoXCIsXG4gICAgICAgIGxhYmVsOiBcImJhc2hcIixcbiAgICAgICAgZGVmYXVsdDogdHJ1ZSxcbiAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWJhc2hcIixcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLWRpYWdub3N0aWNzIHN0YXR1cyAtLWhlbHBcXG5cIlxuICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgICB9KSwgX2pzeChUYWJJdGVtLCB7XG4gICAgICAgIHZhbHVlOiBcIlBvd2VyU2hlbGxcIixcbiAgICAgICAgbGFiZWw6IFwiUG93ZXJTaGVsbFwiLFxuICAgICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtUG93ZXJTaGVsbFwiLFxuICAgICAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXEtZGlhZ25vc3RpY3MuYmF0IHN0YXR1cyAtLWhlbHBcXG5cIlxuICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgICB9KV1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwicmFiYml0bXFjdGxcIixcbiAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xY3RsXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL21hbi9yYWJiaXRtcWN0bC44XCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xY3RsXCJcbiAgICAgIH0pLCBcIiBpcyB0aGUgb3JpZ2luYWwgQ0xJIHRvb2wgdGhhdCBzaGlwcyB3aXRoIFJhYmJpdE1RLlxcclxcbkl0IHN1cHBvcnRzIGEgd2lkZSByYW5nZSBvZiBvcGVyYXRpb25zLCBtb3N0bHkgYWRtaW5pc3RyYXRpdmUgKG9wZXJhdGlvbmFsKSBpbiBuYXR1cmUuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiVGhpcyBpbmNsdWRlc1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnVsLCB7XG4gICAgICBjaGlsZHJlbjogW1wiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFwiU3RvcHBpbmcgbm9kZVwiXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJBY2Nlc3MgdG8gbm9kZSBzdGF0dXMsIGVmZmVjdGl2ZSBjb25maWd1cmF0aW9uLCBoZWFsdGggY2hlY2tzXCJcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIlZpcnR1YWwgaG9zdCBtYW5hZ2VtZW50XCJcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIlVzZXIgYW5kIHBlcm1pc3Npb24gbWFuYWdlbWVudFwiXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJQb2xpY3kgbWFuYWdlbWVudFwiXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJMaXN0aW5nIHF1ZXVlcywgY29ubmVjdGlvbnMsIGNoYW5uZWxzLCBleGNoYW5nZXMsIGNvbnN1bWVyc1wiXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJDbHVzdGVyIG1lbWJlcnNoaXAgbWFuYWdlbWVudFwiXG4gICAgICB9KSwgXCJcXG5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJhbmQgbW9yZS5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcWN0bFwiXG4gICAgICB9KSwgXCIgdXNlcyBhIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIjZXJsYW5nLWNvb2tpZVwiLFxuICAgICAgICBjaGlsZHJlbjogXCJzaGFyZWQgc2VjcmV0IGF1dGhlbnRpY2F0aW9uIG1lY2hhbmlzbVwiXG4gICAgICB9KSwgXCIgKGRlc2NyaWJlZCBiZWxvdykgd2l0aCBzZXJ2ZXIgbm9kZXMuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcInJhYmJpdG1xLXF1ZXVlc1wiLFxuICAgICAgY2hpbGRyZW46IFwicmFiYml0bXEtcXVldWVzXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL21hbi9yYWJiaXRtcS1xdWV1ZXMuOFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS1xdWV1ZXNcIlxuICAgICAgfSksIFwiIGFsbG93cyB0aGUgb3BlcmF0b3IgdG8gbWFuYWdlIHJlcGxpY2FzIG9mIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL3F1b3J1bS1xdWV1ZXNcIixcbiAgICAgICAgY2hpbGRyZW46IFwicmVwbGljYXRlZCBxdWV1ZXNcIlxuICAgICAgfSksIFwiLlxcclxcbkl0IHNoaXBzIHdpdGggUmFiYml0TVEuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiTW9zdCBjb21tYW5kcyBvbmx5IHN1cHBvcnQgdGhlIG9ubGluZSBtb2RlICh3aGVuIHRhcmdldCBub2RlIGlzIHJ1bm5pbmcpLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLXF1ZXVlc1wiXG4gICAgICB9KSwgXCIgdXNlcyBhIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIjZXJsYW5nLWNvb2tpZVwiLFxuICAgICAgICBjaGlsZHJlbjogXCJzaGFyZWQgc2VjcmV0IGF1dGhlbnRpY2F0aW9uIG1lY2hhbmlzbVwiXG4gICAgICB9KSwgXCIgKGRlc2NyaWJlZCBiZWxvdykgd2l0aCBzZXJ2ZXIgbm9kZXMuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcInJhYmJpdG1xLXN0cmVhbXNcIixcbiAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLXN0cmVhbXNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vbWFuL3JhYmJpdG1xLXN0cmVhbXMuOFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS1zdHJlYW1zXCJcbiAgICAgIH0pLCBcIiBhbGxvd3MgdGhlIG9wZXJhdG9yIHRvIG1hbmFnZSByZXBsaWNhcyBvZiBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi9zdHJlYW1zXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInN0cmVhbXNcIlxuICAgICAgfSksIFwiLlxcclxcbkl0IHNoaXBzIHdpdGggUmFiYml0TVEuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiTW9zdCBjb21tYW5kcyBvbmx5IHN1cHBvcnQgdGhlIG9ubGluZSBtb2RlICh3aGVuIHRhcmdldCBub2RlIGlzIHJ1bm5pbmcpLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLXN0cmVhbXNcIlxuICAgICAgfSksIFwiIHVzZXMgYSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiI2VybGFuZy1jb29raWVcIixcbiAgICAgICAgY2hpbGRyZW46IFwic2hhcmVkIHNlY3JldCBhdXRoZW50aWNhdGlvbiBtZWNoYW5pc21cIlxuICAgICAgfSksIFwiIChkZXNjcmliZWQgYmVsb3cpIHdpdGggc2VydmVyIG5vZGVzLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJyYWJiaXRtcS1kaWFnbm9zdGljc1wiLFxuICAgICAgY2hpbGRyZW46IFwicmFiYml0bXEtZGlhZ25vc3RpY3NcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vbWFuL3JhYmJpdG1xLWRpYWdub3N0aWNzLjhcIixcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXEtZGlhZ25vc3RpY3NcIlxuICAgICAgfSksIFwiIGlzIHRoZSBwcmltYXJ5IHRvb2wgZm9yIGluc3BlY3Rpbmcgbm9kZSBzdGF0ZS5cXHJcXG5JdCBoYXMgbWFueSBjb21tYW5kcyB0aGF0IGFsbG93IHRoZSBvcGVyYXRvciB0byBzdHVkeSB2YXJpb3VzIGFzcGVjdHMgb2YgdGhlIHN5c3RlbS5cXHJcXG5JdCBzaGlwcyB3aXRoIFJhYmJpdE1RLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkl0IHN1cHBvcnRzIGJvdGggb25saW5lICh3aGVuIHRhcmdldCBub2RlIGlzIHJ1bm5pbmcpIGFuZCBvZmZsaW5lIG1vZGUgKGNoYW5nZXNcXHJcXG50YWtlIGVmZmVjdCBvbiBub2RlIHJlc3RhcnQpLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLWRpYWdub3N0aWNzXCJcbiAgICAgIH0pLCBcIiB1c2VzIGEgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIiNlcmxhbmctY29va2llXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInNoYXJlZCBzZWNyZXQgYXV0aGVudGljYXRpb24gbWVjaGFuaXNtXCJcbiAgICAgIH0pLCBcIiAoZGVzY3JpYmVkIGJlbG93KSB3aXRoIHNlcnZlciBub2Rlcy5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwicmFiYml0bXEtcGx1Z2luc1wiLFxuICAgICAgY2hpbGRyZW46IFwicmFiYml0bXEtcGx1Z2luc1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi9tYW4vcmFiYml0bXEtcGx1Z2lucy44XCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLXBsdWdpbnNcIlxuICAgICAgfSksIFwiIGlzIGEgdG9vbCB0aGF0IG1hbmFnZXMgcGx1Z2luczpcXHJcXG5saXN0cywgZW5hYmxlcyBhbmQgZGlzYWJsZXMgdGhlbS4gSXQgc2hpcHMgd2l0aCBSYWJiaXRNUS5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJJdCBzdXBwb3J0cyBib3RoIG9ubGluZSAod2hlbiB0YXJnZXQgbm9kZSBpcyBydW5uaW5nKSBhbmQgb2ZmbGluZSBtb2RlIChjaGFuZ2VzXFxyXFxudGFrZSBlZmZlY3Qgb24gbm9kZSByZXN0YXJ0KS5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS1wbHVnaW5zXCJcbiAgICAgIH0pLCBcIiB1c2VzIGEgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIiNlcmxhbmctY29va2llXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInNoYXJlZCBzZWNyZXQgYXV0aGVudGljYXRpb24gbWVjaGFuaXNtXCJcbiAgICAgIH0pLCBcIiAoZGVzY3JpYmVkIGJlbG93KSB3aXRoIHNlcnZlciBub2Rlcy5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwicmFiYml0bXEtdXBncmFkZVwiLFxuICAgICAgY2hpbGRyZW46IFwicmFiYml0bXEtdXBncmFkZVwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi9tYW4vcmFiYml0bXEtdXBncmFkZS44XCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLXVwZ3JhZGVcIlxuICAgICAgfSksIFwiIGlzIGEgdG9vbCBkZWRpY2F0ZWQgdG8gcHJlLXVwZ3JhZGUsIHVwZ3JhZGUgYW5kIHBvc3QtdXBncmFkZSBvcGVyYXRpb25zLlxcclxcbkl0IHNoaXBzIHdpdGggUmFiYml0TVEuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiTW9zdCBjb21tYW5kcyBvbmx5IHN1cHBvcnQgdGhlIG9ubGluZSBtb2RlICh3aGVuIHRhcmdldCBub2RlIGlzIHJ1bm5pbmcpLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLXVwZ3JhZGVcIlxuICAgICAgfSksIFwiIHVzZXMgYSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiI2VybGFuZy1jb29raWVcIixcbiAgICAgICAgY2hpbGRyZW46IFwic2hhcmVkIHNlY3JldCBhdXRoZW50aWNhdGlvbiBtZWNoYW5pc21cIlxuICAgICAgfSksIFwiIChkZXNjcmliZWQgYmVsb3cpIHdpdGggc2VydmVyIG5vZGVzLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJvZmZsaW5lLW1vZGVcIixcbiAgICAgIGNoaWxkcmVuOiBcIk9mZmxpbmUgTW9kZVwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIi0tb2ZmbGluZVwiXG4gICAgICB9KSwgXCIgaXMgYSBmbGFnIHN1cHBvcnRlZCBieSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLXBsdWdpbnNcIlxuICAgICAgfSksIFwiIGNvbW1hbmRzLiBXaGVuIHByb3ZpZGVkLCB0aGUgdG9vbCB3aWxsIGF2b2lkXFxyXFxuY29udGFjdGluZyB0aGUgdGFyZ2V0IG5vZGUgYW5kIGluc3RlYWQgb3BlcmF0ZSBvbiBwbHVnaW4gZmlsZXMgZGlyZWN0bHkuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJXaGVuIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIi0tb2ZmbGluZVwiXG4gICAgICB9KSwgXCIgZmxhZyBpcyB1c2VkLCB0aGUgY29tbWFuZCB3aWxsIHJlbHkgb24gXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vY29uZmlndXJlI2N1c3RvbWlzZS1lbnZpcm9ubWVudFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJlbnZpcm9ubWVudCB2YXJpYWJsZXNcIlxuICAgICAgfSksIFwiXFxyXFxudG8gZGV0ZXJtaW5lIHdoZXJlIHRvIGZpbmQgdGhlIHBsdWdpbnMgZGlyZWN0b3J5IG9mIHRoZSBsb2NhbCBub2RlLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiRm9yIGV4YW1wbGUsIGl0IHdpbGwgcmVzcGVjdCBhbmQgdXNlIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIlJBQkJJVE1RX1BMVUdJTlNfRElSXCJcbiAgICAgIH0pLCBcIiBlbnZpcm9ubWVudCB2YXJpYWJsZSB2YWx1ZVxcclxcbmp1c3QgbGlrZSBhIFJhYmJpdE1RIG5vZGUgd291bGQuIFdoZW4gXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJSQUJCSVRNUV9QTFVHSU5TX0RJUlwiXG4gICAgICB9KSwgXCIgaXMgb3ZlcnJpZGRlbiBmb3Igc2VydmVyIG5vZGVzLFxcclxcbml0IG11c3QgYWxzbyBiZSBzZXQgaWRlbnRpY2FsbHkgZm9yIHRoZSBsb2NhbCBPUyB1c2VyIHRoYXQgaW52b2tlcyBDTEkgdG9vbHMuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcImF1dGhlbnRpY2F0aW9uXCIsXG4gICAgICBjaGlsZHJlbjogXCJBdXRoZW50aWNhdGlvblwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJXaXRoIHRoZSBleGNlcHRpb24gb2YgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcWFkbWluXCJcbiAgICAgIH0pLCBcIiwgUmFiYml0TVEgdG9vbHMgdXNlIGEgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIiNlcmxhbmctY29va2llXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInNoYXJlZCBzZWNyZXQgYXV0aGVudGljYXRpb24gbWVjaGFuaXNtXCJcbiAgICAgIH0pLCBcIi5cXHJcXG5UaGlzIHJlcXVpcmVzIHRoYXQgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vbmV0d29ya2luZ1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJpbnRlci1ub2RlIGFuZCBDTEkgY29tbXVuaWNhdGlvbiBwb3J0c1wiXG4gICAgICB9KSwgXCIgKGJ5IGRlZmF1bHQpXFxyXFxuaXMgb3BlbiBmb3IgZXh0ZXJuYWwgY29ubmVjdGlvbnMgb24gdGhlIHRhcmdldCBub2RlLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJyZW1vdGUtbm9kZXNcIixcbiAgICAgIGNoaWxkcmVuOiBcIlVzaW5nIENMSSBUb29scyBhZ2FpbnN0IFJlbW90ZSBTZXJ2ZXIgTm9kZXNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiQ0xJIHRvb2xzIGNhbiBiZSB1c2VkIHRvIHRhbGsgdG8gcmVtb3RlIG5vZGVzIGFzIHdlbGwgYXMgdGhlIGxvY2FsIG9uZXMuIE5vZGVzIGFyZSBpZGVudGlmaWVkIGJ5IFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIjbm9kZS1uYW1lc1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJub2RlIG5hbWVzXCJcbiAgICAgIH0pLCBcIi5cXHJcXG5JZiBubyBub2RlIG5hbWUgaXMgc3BlY2lmaWVkLCBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdEB7bG9jYWwgaG9zdG5hbWV9XCJcbiAgICAgIH0pLCBcIiBpcyBhc3N1bWVkIHRvIGJlIHRoZSB0YXJnZXQuIFdoZW4gY29udGFjdGluZyByZW1vdGUgbm9kZXMsXFxyXFxudGhlIHNhbWUgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIiNhdXRoZW50aWNhdGlvblwiLFxuICAgICAgICBjaGlsZHJlbjogXCJhdXRoZW50aWNhdGlvbiByZXF1aXJlbWVudHNcIlxuICAgICAgfSksIFwiIGFwcGx5LlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVG8gY29udGFjdCBhIHJlbW90ZSBub2RlLCB1c2UgdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiLS1ub2RlXCJcbiAgICAgIH0pLCBcIiAoXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCItblwiXG4gICAgICB9KSwgXCIpIG9wdGlvbiB0aGF0IFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXFjdGxcIlxuICAgICAgfSksIFwiLCBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLWRpYWdub3N0aWNzXCJcbiAgICAgIH0pLCBcIiBhbmQgb3RoZXIgY29yZSBDTEkgdG9vbHNcXHJcXG5hY2NlcHQuIFRoZSBmb2xsb3dpbmcgZXhhbXBsZSBjb250YWN0IHRoZSBub2RlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0QHJlbW90ZS1ob3N0LmxvY2FsXCJcbiAgICAgIH0pLCBcIiB0byBmaW5kIG91dCBpdHMgc3RhdHVzOlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtYmFzaFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS1kaWFnbm9zdGljcyBzdGF0dXMgLW4gcmFiYml0QHJlbW90ZS1ob3N0LmxvY2FsXFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiU29tZSBjb21tYW5kcywgc3VjaCBhc1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1iYXNoXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLWRpYWdub3N0aWNzIHN0YXR1c1xcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcImNhbiBiZSB1c2VkIGFnYWluc3QgYW55IG5vZGUuIE90aGVycywgc3VjaCBhc1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1iYXNoXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xY3RsIHNodXRkb3duXFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwib3JcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtYmFzaFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcWN0bCB3YWl0XFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJjYW4gb25seSBiZSBydW4gb24gdGhlIHNhbWUgaG9zdCBvciBpbiB0aGUgc2FtZSBjb250YWluZXIgYXMgdGhlaXIgdGFyZ2V0IG5vZGUuIFRoZXNlIGNvbW1hbmRzIHR5cGljYWxseVxcclxcbnJlbHkgb24gb3IgbW9kaWZ5IHNvbWV0aGluZyBpbiB0aGUgbG9jYWwgZW52aXJvbm1lbnQsIGUuZy4gdGhlIGxvY2FsIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL3BsdWdpbnNcIixcbiAgICAgICAgY2hpbGRyZW46IFwiZW5hYmxlZCBwbHVnaW5zIGZpbGVcIlxuICAgICAgfSksIFwiLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgzLCB7XG4gICAgICBpZDogXCJub2RlLW5hbWVzXCIsXG4gICAgICBjaGlsZHJlbjogXCJOb2RlIE5hbWVzXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlJhYmJpdE1RIG5vZGVzIGFyZSBpZGVudGlmaWVkIGJ5IG5vZGUgbmFtZXMuIEEgbm9kZSBuYW1lIGNvbnNpc3RzIG9mIHR3byBwYXJ0cyxcXHJcXG5hIHByZWZpeCAodXN1YWxseSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdFwiXG4gICAgICB9KSwgXCIpIGFuZCBob3N0bmFtZS4gRm9yIGV4YW1wbGUsIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0QG5vZGUxLm1lc3NhZ2luZy5zdmMubG9jYWxcIlxuICAgICAgfSksIFwiXFxyXFxuaXMgYSBub2RlIG5hbWUgd2l0aCB0aGUgcHJlZml4IG9mIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0XCJcbiAgICAgIH0pLCBcIiBhbmQgaG9zdG5hbWUgb2YgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJub2RlMS5tZXNzYWdpbmcuc3ZjLmxvY2FsXCJcbiAgICAgIH0pLCBcIi5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIk5vZGUgbmFtZXMgaW4gYSBjbHVzdGVyIG11c3QgYmUgdW5pcXVlLiBJZiBtb3JlIHRoYW4gb25lIG5vZGUgaXMgcnVubmluZyBvbiBhIGdpdmVuIGhvc3RcXHJcXG4odGhpcyBpcyB1c3VhbGx5IHRoZSBjYXNlIGluIGRldmVsb3BtZW50IGFuZCBRQSBlbnZpcm9ubWVudHMpLCB0aGV5IG11c3QgdXNlXFxyXFxuZGlmZmVyZW50IHByZWZpeGVzLCBlLmcuIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0MUBob3N0bmFtZVwiXG4gICAgICB9KSwgXCIgYW5kIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0MkBob3N0bmFtZVwiXG4gICAgICB9KSwgXCIuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJDTEkgdG9vbHMgaWRlbnRpZnkgYW5kIGFkZHJlc3Mgc2VydmVyIG5vZGVzIHVzaW5nIG5vZGUgbmFtZXMuXFxyXFxuTW9zdCBDTEkgY29tbWFuZHMgYXJlIGludm9rZWQgYWdhaW5zdCBhIG5vZGUgY2FsbGVkIHRhcmdldCBub2RlLiBUbyBzcGVjaWZ5IGEgdGFyZ2V0IG5vZGUsXFxyXFxudXNlIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIi0tbm9kZVwiXG4gICAgICB9KSwgXCIgKFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiLW5cIlxuICAgICAgfSksIFwiKSBvcHRpb24uIEZvciBleGFtcGxlLCB0byBydW4gYSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi9tb25pdG9yaW5nXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImhlYWx0aCBjaGVja1wiXG4gICAgICB9KSwgXCJcXHJcXG5vbiBub2RlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0QHdhcnAxMC5sb2NhbFwiXG4gICAgICB9KSwgXCI6XCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1iYXNoXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLWRpYWdub3N0aWNzIC1uIHJhYmJpdEB3YXJwMTAgY2hlY2tfYWxhcm1zXFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJTb21lIGNvbW1hbmRzIGFjY2VwdCBib3RoIGEgdGFyZ2V0IG5vZGUgYW5kIGFub3RoZXIgbm9kZSBuYW1lLiBGb3IgZXhhbXBsZSxcXHJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xY3RsIGZvcmdldF9jbHVzdGVyX25vZGVcIlxuICAgICAgfSksIFwiIGFjY2VwdHMgYm90aCBhIHRhcmdldCBub2RlICh0aGF0IHdpbGwgcGVyZm9ybSB0aGUgYWN0aW9uKVxcclxcbmFuZCBhIG5hbWUgb2YgdGhlIG5vZGUgdG8gYmUgcmVtb3ZlZC5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkluIGEgY2x1c3Rlciwgbm9kZXMgaWRlbnRpZnkgYW5kIGNvbnRhY3QgZWFjaCBvdGhlciB1c2luZyBub2RlIG5hbWVzLiBTZWUgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vY2x1c3RlcmluZyNub2RlLW5hbWVzXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIkNsdXN0ZXJpbmcgZ3VpZGVcIlxuICAgICAgfSksIFwiXFxyXFxuZm9yIGRldGFpbHMuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJXaGVuIGEgbm9kZSBzdGFydHMgdXAsIGl0IGNoZWNrcyB3aGV0aGVyIGl0IGhhcyBiZWVuIGFzc2lnbmVkIGEgbm9kZSBuYW1lLiBUaGlzIGlzIGRvbmVcXHJcXG52aWEgdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiUkFCQklUTVFfTk9ERU5BTUVcIlxuICAgICAgfSksIFwiIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL2NvbmZpZ3VyZSNzdXBwb3J0ZWQtZW52aXJvbm1lbnQtdmFyaWFibGVzXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImVudmlyb25tZW50IHZhcmlhYmxlXCJcbiAgICAgIH0pLCBcIi5cXHJcXG5JZiBubyB2YWx1ZSB3YXMgZXhwbGljaXRseSBjb25maWd1cmVkLCB0aGUgbm9kZSByZXNvbHZlcyBpdHMgaG9zdG5hbWUgYW5kIHByZXBlbmRzIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0XCJcbiAgICAgIH0pLCBcIiB0byBpdCB0byBjb21wdXRlIGl0cyBub2RlIG5hbWUuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJJZiBhIHN5c3RlbSB1c2VzIGZ1bGx5IHF1YWxpZmllZCBkb21haW4gbmFtZXMgKEZRRE5zKSBmb3IgaG9zdG5hbWVzLCBSYWJiaXRNUSBub2Rlc1xcclxcbmFuZCBDTEkgdG9vbHMgbXVzdCBiZSBjb25maWd1cmVkIHRvIHVzZSBzbyBjYWxsZWQgbG9uZyBub2RlIG5hbWVzLlxcclxcbkZvciBzZXJ2ZXIgbm9kZXMgdGhpcyBpcyBkb25lIGJ5IHNldHRpbmcgdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiUkFCQklUTVFfVVNFX0xPTkdOQU1FXCJcbiAgICAgIH0pLCBcIiBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi9jb25maWd1cmUjc3VwcG9ydGVkLWVudmlyb25tZW50LXZhcmlhYmxlc1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJlbnZpcm9ubWVudCB2YXJpYWJsZVwiXG4gICAgICB9KSwgXCJcXHJcXG50byBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInRydWVcIlxuICAgICAgfSksIFwiLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiRm9yIENMSSB0b29scywgZWl0aGVyIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiUkFCQklUTVFfVVNFX0xPTkdOQU1FXCJcbiAgICAgIH0pLCBcIiBtdXN0IGJlIHNldCBvciB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCItLWxvbmduYW1lc1wiXG4gICAgICB9KSwgXCIgb3B0aW9uXFxyXFxubXVzdCBiZSBzcGVjaWZpZWQ6XCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1iYXNoXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIiMgdGhpcyBleGFtcGxlIGFzc3VtZXMgdGhhdCBob3N0MS5tZXNzYWdpbmcuZW5nLmNvb2xjb3Jwb3JhdGlvbi5iYW5hbmEgaXMgYSBob3N0bmFtZVxcclxcbiMgdGhhdCBzdWNjZXNzZnVsbHkgcmVzb2x2ZXNcXHJcXG5yYWJiaXRtcS1kaWFnbm9zdGljcyAtbiByYWJiaXRAaG9zdDEubWVzc2FnaW5nLmVuZy5jb29sY29ycG9yYXRpb24uYmFuYW5hIGNoZWNrX2FsYXJtcyAtLWxvbmduYW1lc1xcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgzLCB7XG4gICAgICBpZDogXCJjb250YWluZXJzXCIsXG4gICAgICBjaGlsZHJlbjogXCJDYXZlYXRzIGluIENvbnRhaW5lcml6ZWQgRW52aXJvbm1lbnRzXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJXaGVuIFJhYmJpdE1RIGlzIHJ1bm5pbmcgaW4gYSBjb250YWluZXIsIHRoZXJlIGFyZSB0d28gY29tbW9uIHdheXMgb2YgcnVubmluZyBDTEkgdG9vbHM6XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMub2wsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtcIkRvIGl0IHdpdGhpbiB0aGUgY29udGFpbmVyIGl0c2VsZiwgdXNpbmcgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiaHR0cHM6Ly9kb2NzLmRvY2tlci5jb20vcmVmZXJlbmNlL2NsaS9kb2NrZXIvY29udGFpbmVyL2V4ZWMvXCIsXG4gICAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgICAgY2hpbGRyZW46IFwiZG9ja2VyIGV4ZWNcIlxuICAgICAgICAgIH0pXG4gICAgICAgIH0pLCBcIiBhbmQgc2ltaWxhclxcclxcbnRvb2xpbmdcIl1cbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW1wiRm9yd2FyZCB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiLi9uZXR3b3JraW5nI3BvcnRzXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwicmVsZXZhbnQgaW50ZXItbm9kZSBjb21tdW5pY2F0aW9uIHBvcnRzXCJcbiAgICAgICAgfSksIFwiIGFuZCBkbyBpdCBmcm9tIHRoZSBob3N0XCJdXG4gICAgICB9KSwgXCJcXG5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJUaGVyZSBhcmUgdHdvIGNvbW1vbiBwcm9ibGVtcyB0aGF0IG1heSBhcmlzZSB3aXRoIHRoaXMgYXBwcm9hY2guXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oNCwge1xuICAgICAgaWQ6IFwic2hhcmVkLXNlY3JldC1taXNtYXRjaC1iZXR3ZWVuLXRoZS1ob3N0LWFuZC10aGUtY29udGFpbmVyXCIsXG4gICAgICBjaGlsZHJlbjogXCJTaGFyZWQgU2VjcmV0IE1pc21hdGNoIEJldHdlZW4gVGhlIEhvc3QgYW5kIHRoZSBDb250YWluZXJcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiV2hlbiBDTEkgdG9vbHMgYXJlIHJ1biBpbiB0aGUgaG9zdCwgdGhlIGxvY2FsIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIjZXJsYW5nLWNvb2tpZVwiLFxuICAgICAgICBjaGlsZHJlbjogXCJzaGFyZWQgc2VjcmV0XCJcbiAgICAgIH0pLCBcIiBtdXN0XFxyXFxubWF0Y2ggdGhhdCBpbiB0aGUgY29udGFpbmVyLiBXaGVuIHRoaXMgaXMgbm90IHRoZSBjYXNlLCBDTEkgdG9vbHMgd2lsbCBmYWlsXFxyXFxudG8gYXV0aGVudGljYXRlIGFuZCB3b24ndCBiZSBhYmxlIHRvIHBlcmZvcm0gYW55IG9wZXJhdGlvbiBvbiB0aGUgdGFyZ2V0IG5vZGUuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDQsIHtcbiAgICAgIGlkOiBcInNoYXJlZC1zZWNyZXQtc2VlZGluZy1yYWNlLWNvbmRpdGlvblwiLFxuICAgICAgY2hpbGRyZW46IFwiU2hhcmVkIFNlY3JldCBTZWVkaW5nIFJhY2UgQ29uZGl0aW9uXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5hZG1vbml0aW9uLCB7XG4gICAgICB0eXBlOiBcImRhbmdlclwiLFxuICAgICAgY2hpbGRyZW46IF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgICAgY2hpbGRyZW46IFtcIklmIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIjZXJsYW5nLWNvb2tpZVwiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcInNoYXJlZCBzZWNyZXRcIlxuICAgICAgICB9KSwgXCIgdXNlZCBieSB0aGUgY29udGFpbmVyIGlzIG5vdCBwcmUtc2VlZGVkLCB0aGUgbm9kZVxcclxcbm11c3QgYmUgYWxsb3dlZCB0byBib290IGJlZm9yZSBDTEkgY29tbWFuZHMgY2FuIGJlIHJ1biBhZ2FpbnN0IGl0XCJdXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiV2hlbiBhIENMSSB0b29sIHJ1bnMgb24gYSBob3N0IHdoZXJlIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiI2VybGFuZy1jb29raWVcIixcbiAgICAgICAgY2hpbGRyZW46IFwic2hhcmVkIHNlY3JldFwiXG4gICAgICB9KSwgXCIgaXMgbm90IHByZS1zZWVkZWRcXHJcXG5hbmQgYmVmb3JlIHRoZSBsb2NhbCBib290aW5nIFJhYmJpdE1RIG5vZGUgaGFzIGEgY2hhbmNlIHRvIGNyZWF0ZSB0aGUgY29va2llIGZpbGUsIGl0XFxyXFxud2lsbCBjcmVhdGUgYSBjb25mdXNpbmcgc2l0dWF0aW9uIHdoZXJlIHRoZSBzZWNyZXQgc2VlZGVkIG1heSBiZSBvdmVyd3JpdHRlblxcclxcbmR1cmluZyBub2RlIGJvb3QuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiQXMgYSByZXN1bHQsIENMSSB0b29scyBtYXkgZmFpbCB0byBhdXRoZW50aWNhdGUsIFJhYmJpdE1RIG5vZGUgbWF5IGZhaWwgdG8gYWNjZXNzIHRoZSBjcmVhdGVkIGZpbGVcXHJcXG5hbmQgdGh1cyBzdG9wIHdpdGggYW4gZXJyb3IsIGFuZCBvdGhlciBwcm9ibGVtYXRpYyBzY2VuYXJpb3MgdGhhdCBzdGVtIGZyb20gdGhlIGZhY3QgdGhhdFxcclxcbnRoZSBzZWNyZXQgZG9lcyBub3QgbWF0Y2guXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwicGFzc2luZy1hcmd1bWVudHNcIixcbiAgICAgIGNoaWxkcmVuOiBcIk9wdGlvbnMgYW5kIFBvc2l0aW9uYWwgQXJndW1lbnRzXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJSYWJiaXRNUSBDTEkgdG9vbHMgbGFyZ2VseSBmb2xsb3cgZXhpc3RpbmcsIGxvbmcgZXN0YWJsaXNoZWQgY29tbWFuZCBsaW5lIGFyZ3VtZW50IHBhcnNpbmcgY29udmVudGlvbnMuXFxyXFxuVGhpcyBzZWN0aW9uIHByb3ZpZGVzIHNvbWUgZXhhbXBsZXMgYW5kIGZvY3VzZXMgb24gZWRnZSBjYXNlcyBhbmQgbGVzc2VyIGtub3duIGZlYXR1cmVzLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJEaWZmZXJlbnQgY29tbWFuZHMgdGFrZSBkaWZmZXJlbnQgYXJndW1lbnRzLiBTb21lIGFyZSBuYW1lZCBvcHRpb25zIHN1Y2ggYXMgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCItLW5vZGVcIlxuICAgICAgfSksIFwiIChhbGlhc2VkIGFzIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiLW5cIlxuICAgICAgfSksIFwiKSxcXHJcXG5vdGhlcnMgYXJlIHBvc2l0aW9uYWwgYXJndW1lbnRzLCBzdWNoIGFzIHRoZSB1c2VybmFtZSBhbmQgcGFzc3dvcmQgYXJndW1lbnRzIGluXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1iYXNoXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xY3RsIGFkZF91c2VyIDx1c2VybmFtZT4gPHBhc3N3b3JkPlxcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkEgc3BlY2lmaWMgZXhhbXBsZTpcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtYmFzaFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcWN0bCBhZGRfdXNlciBcXFwiYS11c2VyXFxcIiBcXFwiYS1wYSQkdzByZFxcXCJcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIk9wdGlvbnMgY2FuIGJlIHByb3ZpZGVkIGJlZm9yZSBvciBhZnRlciBwb3NpdGlvbmFsIGFyZ3VtZW50cyB3aXRoIG9uZSBleGNlcHRpb246IGFueXRoaW5nXFxyXFxudGhhdCBmb2xsb3dzIGEgZG91YmxlIGh5cGhlbiAoXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCItLVwiXG4gICAgICB9KSwgXCIpIHdpbGwgYmUgdHJlYXRlZCBhcyBwb3NpdGlvbmFsIGFyZ3VtZW50czpcIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWJhc2hcIixcbiAgICAgICAgY2hpbGRyZW46IFwiIyBhbGwgdmFsdWVzIGFmdGVyIHRoZSBkb3VibGUgaHlwaGVuICgtLSkgd2lsbCBiZSB0cmVhdGVkIGFzIHBvc2l0aW9uYWwgYXJndW1lbnRzLFxcclxcbiMgZXZlbiBpZiB0aGV5IGJlZ2luIHdpdGggYSBoeXBoZW4gb3IgYSBkb3VibGUgaHlwaGVuXFxyXFxucmFiYml0bXFjdGwgYWRkX3VzZXIgLS1ub2RlIHJhYmJpdEBob3N0MS5tZXNzYWdpbmcuZW5nLmNvb2xjb3Jwb3JhdGlvbi5iYW5hbmEgLS0gXFxcImEtdXNlclxcXCIgXFxcImEtcGEkJHcwcmRcXFwiXFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiVGhlIGV4cGxpY2l0IHBvc2l0aW9uYWwgYXJndW1lbnQgc2VwYXJhdG9yIG11c3QgYmUgdXNlZCB3aGVuIHBvc2l0aW9uYWwgYXJndW1lbnRzIGJlZ2luIHdpdGggYSBoeXBoZW4gb3IgYSBkb3VibGVcXHJcXG5oeXBoZW4gKHN1Y2ggYXMgZ2VuZXJhdGVkIHBhc3N3b3JkcyksIHRvIG1ha2Ugc3VyZSB0aGV5IGFyZSBub3QgcGFyc2VkIGFzIG9wdGlvbnM6XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWJhc2hcIixcbiAgICAgICAgY2hpbGRyZW46IFwiIyBTaW5jZSBcXFwiLS0hYS1wYSQkdzByZFxcXCIgaXMgZXhwbGljaXRseSBwcm92aWRlZCBhcyBhIHBvc2l0aW9uYWwgYXJndW1lbnQsIGl0IHdvbid0XFxyXFxuIyBiZSBtaXN0YWtlbmx5IGNvbnNpZGVyZWQgZm9yIGFuIHVuc3VwcG9ydGVkIG9wdGlvbiwgZXZlbiB0aG91Z2ggaXQgc3RhcnRzIHdpdGggYSBkb3VibGUgaHlwaGVuXFxyXFxucmFiYml0bXFjdGwgYWRkX3VzZXIgLS1ub2RlIHJhYmJpdEBob3N0MS5tZXNzYWdpbmcuZW5nLmNvb2xjb3Jwb3JhdGlvbi5iYW5hbmEgLS0gXFxcImEtdXNlclxcXCIgXFxcIi0tIWEtcGEkJHcwcmRcXFwiXFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJPcHRpb24gdmFsdWVzIGNhbiBiZSBwYXNzZWQgYXMgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCItLW9wdGlvbiA8dmFsdWU+XCJcbiAgICAgIH0pLCBcIiBvciBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIi0tb3B0aW9uPTx2YWx1ZT5cIlxuICAgICAgfSksIFwiLiBUaGUgbGF0dGVyIHZhcmlhbnQgbXVzdCBiZSB1c2VkXFxyXFxud2hlbiB0aGUgdmFsdWUgYmVnaW5zIHdpdGggYSBoeXBoZW4gKFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiLVwiXG4gICAgICB9KSwgXCIpLCBvdGhlcndpc2UgaXQgd291bGQgYmUgdHJlYXRlZCBhcyBhbiBvcHRpb246XCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1iYXNoXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIiMgYW4gYWx0ZXJuYXRpdmUgd2F5IG9mIHByb3ZpZGluZyBhbiBvcHRpb24gdmFsdWVcXHJcXG5yYWJiaXRtcWN0bCBhZGRfdXNlciAtLW5vZGU9cmFiYml0QGhvc3QxLm1lc3NhZ2luZy5lbmcuY29vbGNvcnBvcmF0aW9uLmJhbmFuYSAtLSBcXFwiYS11c2VyXFxcIiBcXFwiYS1wYSQkdzByZFxcXCJcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXFjdGxcIlxuICAgICAgfSksIFwiLCBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLWRpYWdub3N0aWNzXCJcbiAgICAgIH0pLCBcIiwgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS1wbHVnaW5zXCJcbiAgICAgIH0pLCBcIiwgYW5kIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXEtcXVldWVzXCJcbiAgICAgIH0pLCBcIiBzdXBwb3J0IFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIjYWxpYXNlc1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJjb21tYW5kIGFsaWFzZXNcIlxuICAgICAgfSksIFwiLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJlcmxhbmctY29va2llXCIsXG4gICAgICBjaGlsZHJlbjogXCJIb3cgQ0xJIFRvb2xzIEF1dGhlbnRpY2F0ZSB0byBOb2RlcyAoYW5kIE5vZGVzIHRvIEVhY2ggT3RoZXIpOiB0aGUgRXJsYW5nIENvb2tpZVwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJSYWJiaXRNUSBub2RlcyBhbmQgQ0xJIHRvb2xzICh3aXRoIHRoZSBleGNlcHRpb24gb2YgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcWFkbWluXCJcbiAgICAgIH0pLCBcIikgdXNlIGFcXHJcXG5jb29raWUgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhleSBhcmUgYWxsb3dlZCB0byBjb21tdW5pY2F0ZSB3aXRoXFxyXFxuZWFjaCBvdGhlci4gRm9yIGEgQ0xJIHRvb2wgYW5kIGEgbm9kZSB0byBiZSBhYmxlIHRvIGNvbW11bmljYXRlIHRoZXkgbXVzdCBoYXZlXFxyXFxudGhlIHNhbWUgc2hhcmVkIHNlY3JldCBjYWxsZWQgdGhlIEVybGFuZyBjb29raWUuIFRoZSBjb29raWUgaXNcXHJcXG5qdXN0IGEgc3RyaW5nIG9mIGFscGhhbnVtZXJpYyBjaGFyYWN0ZXJzIHVwIHRvIDI1NSBjaGFyYWN0ZXJzIGluIHNpemUuXFxyXFxuSXQgaXMgdXN1YWxseSBzdG9yZWQgaW4gYSBsb2NhbCBmaWxlLiBUaGUgZmlsZVxcclxcbm11c3QgYmUgb25seSBhY2Nlc3NpYmxlIHRvIHRoZSBvd25lciAoZS5nLiBoYXZlIFVOSVggcGVybWlzc2lvbnMgb2YgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCI2MDBcIlxuICAgICAgfSksIFwiIG9yIHNpbWlsYXIpLlxcclxcbkV2ZXJ5IGNsdXN0ZXIgbm9kZSBtdXN0IGhhdmUgdGhlIHNhbWUgY29va2llLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIklmIHRoZSBmaWxlIGRvZXMgbm90IGV4aXN0LCBFcmxhbmcgVk0gd2lsbCBhdXRvbWF0aWNhbGx5IGNyZWF0ZVxcclxcbm9uZSB3aXRoIGEgcmFuZG9tbHkgZ2VuZXJhdGVkIHZhbHVlIHdoZW4gdGhlIFJhYmJpdE1RIHNlcnZlclxcclxcbnN0YXJ0cyB1cC5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkVybGFuZyBjb29raWUgZ2VuZXJhdGlvbiBzaG91bGQgYmUgZG9uZSBhdCBjbHVzdGVyIGRlcGxveW1lbnQgc3RhZ2UsIGlkZWFsbHkgdXNpbmcgYXV0b21hdGlvblxcclxcbmFuZCBvcmNoZXN0cmF0aW9uIHRvb2xzLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDMsIHtcbiAgICAgIGlkOiBcImNvb2tpZS1maWxlLWxvY2F0aW9uc1wiLFxuICAgICAgY2hpbGRyZW46IFwiQ29va2llIEZpbGUgTG9jYXRpb25zXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oNCwge1xuICAgICAgaWQ6IFwibGludXgtbWFjb3MtYnNkXCIsXG4gICAgICBjaGlsZHJlbjogXCJMaW51eCwgTWFjT1MsICpCU0RcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiT24gVU5JWCBzeXN0ZW1zLCB0aGUgY29va2llIHdpbGwgYmUgdHlwaWNhbGx5XFxyXFxubG9jYXRlZCBpbiBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIi92YXIvbGliL3JhYmJpdG1xLy5lcmxhbmcuY29va2llXCJcbiAgICAgIH0pLCBcIiAodXNlZCBieSB0aGUgc2VydmVyKVxcclxcbmFuZCBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIiRIT01FLy5lcmxhbmcuY29va2llXCJcbiAgICAgIH0pLCBcIiAodXNlZCBieSBDTEkgdG9vbHMpLiBOb3RlIHRoYXQgc2luY2UgdGhlIHZhbHVlXFxyXFxub2YgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCIkSE9NRVwiXG4gICAgICB9KSwgXCIgdmFyaWVzIGZyb20gdXNlciB0byB1c2VyLCBpdCdzIG5lY2Vzc2FyeSB0byBwbGFjZSBhIGNvcHkgb2ZcXHJcXG50aGUgY29va2llIGZpbGUgZm9yIGVhY2ggdXNlciB0aGF0IHdpbGwgYmUgdXNpbmcgdGhlIENMSSB0b29scy5cXHJcXG5UaGlzIGFwcGxpZXMgdG8gYm90aCBub24tcHJpdmlsZWdlZCB1c2VycyBhbmQgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJyb290XCJcbiAgICAgIH0pLCBcIi5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJSYWJiaXRNUSBub2RlcyB3aWxsIGxvZyBpdHMgZWZmZWN0aXZlIHVzZXIncyBob21lIGRpcmVjdG9yeSBsb2NhdGlvbiBlYXJseSBvbiBib290LlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDQsIHtcbiAgICAgIGlkOiBcImNvbW11bml0eS1kb2NrZXItaW1hZ2UtYW5kLWt1YmVybmV0ZXNcIixcbiAgICAgIGNoaWxkcmVuOiBcIkNvbW11bml0eSBEb2NrZXIgSW1hZ2UgYW5kIEt1YmVybmV0ZXNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9yYWJiaXRtcS9cIixcbiAgICAgICAgY2hpbGRyZW46IFwiRG9ja2VyIGNvbW11bml0eSBSYWJiaXRNUSBpbWFnZVwiXG4gICAgICB9KSwgXCIgdXNlcyBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIlJBQkJJVE1RX0VSTEFOR19DT09LSUVcIlxuICAgICAgfSksIFwiIGVudmlyb25tZW50IHZhcmlhYmxlIHZhbHVlXFxyXFxudG8gcG9wdWxhdGUgdGhlIGNvb2tpZSBmaWxlLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkNvbmZpZ3VyYXRpb24gbWFuYWdlbWVudCBhbmQgY29udGFpbmVyIG9yY2hlc3RyYXRpb24gdG9vbHMgdGhhdCB1c2UgdGhpcyBpbWFnZVxcclxcbm11c3QgbWFrZSBzdXJlIHRoYXQgZXZlcnkgUmFiYml0TVEgbm9kZSBjb250YWluZXIgaW4gYSBjbHVzdGVyIHVzZXMgdGhlIHNhbWUgdmFsdWUuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkluIHRoZSBjb250ZXh0IG9mIEt1YmVybmV0ZXMsIHRoZSB2YWx1ZSBtdXN0IGJlIHNwZWNpZmllZCBpbiB0aGVcXHJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvd29ya2xvYWRzL2NvbnRyb2xsZXJzL2RlcGxveW1lbnQvXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImRlcGxveW1lbnQgZmlsZVwiXG4gICAgICB9KSwgXCIuXFxyXFxuRm9yIGluc3RhbmNlLCB0aGlzIGNhbiBiZSBzZWVuIGluIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiaHR0cHM6Ly9naXRodWIuY29tL3JhYmJpdG1xL2RpeS1rdWJlcm5ldGVzLWV4YW1wbGVzXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIlJhYmJpdE1RIG9uIEt1YmVybmV0ZXMgZXhhbXBsZXMgcmVwb3NpdG9yeVwiXG4gICAgICB9KSwgXCIuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDQsIHtcbiAgICAgIGlkOiBcIndpbmRvd3NcIixcbiAgICAgIGNoaWxkcmVuOiBcIldpbmRvd3NcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIk9uIFdpbmRvd3MsIHRoZSBjb29raWUgbG9jYXRpb24gZGVwZW5kcyBvbiBhIGZldyBmYWN0b3JzOlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnVsLCB7XG4gICAgICBjaGlsZHJlbjogW1wiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJXaGV0aGVyIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiSE9NRURSSVZFXCJcbiAgICAgICAgfSksIFwiIGFuZCBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiSE9NRVBBVEhcIlxuICAgICAgICB9KSwgXCIgZW52aXJvbm1lbnQgdmFyaWFibGVzIGFyZSBib3RoIHNldFwiXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJFcmxhbmcgdmVyc2lvbjogcHJpb3IgdG8gMjAuMiAodGhlc2UgYXJlIG5vIGxvbmdlciBzdXBwb3J0ZWQgYnkgYW55IFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIi9yZWxlYXNlLWluZm9ybWF0aW9uXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwibWFpbnRhaW5lZCByZWxlYXNlIHNlcmllcyBvZiBSYWJiaXRNUVwiXG4gICAgICAgIH0pLCBcIikgb3IgMjAuMiBhbmQgbGF0ZXJcIl1cbiAgICAgIH0pLCBcIlxcblwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmg1LCB7XG4gICAgICBpZDogXCJlcmxhbmctMjAyLW9yLWxhdGVyXCIsXG4gICAgICBjaGlsZHJlbjogXCJFcmxhbmcgMjAuMiBvciBsYXRlclwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiV2l0aCBFcmxhbmcgdmVyc2lvbnMgc3RhcnRpbmcgd2l0aCAyMC4yLCB0aGUgY29va2llIGZpbGUgbG9jYXRpb25zIGFyZTpcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy51bCwge1xuICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIiVIT01FRFJJVkUlJUhPTUVQQVRIJVxcXFwuZXJsYW5nLmNvb2tpZVwiXG4gICAgICAgIH0pLCBcIiAodXN1YWxseSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiQzpcXFxcVXNlcnNcXFxcJVVTRVJOQU1FJVxcXFwuZXJsYW5nLmNvb2tpZVwiXG4gICAgICAgIH0pLCBcIiBmb3IgdXNlciBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiJVVTRVJOQU1FJVwiXG4gICAgICAgIH0pLCBcIikgaWYgYm90aCB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIkhPTUVEUklWRVwiXG4gICAgICAgIH0pLCBcIiBhbmQgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIkhPTUVQQVRIXCJcbiAgICAgICAgfSksIFwiIGVudmlyb25tZW50IHZhcmlhYmxlcyBhcmUgc2V0XCJdXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCIlVVNFUlBST0ZJTEUlXFxcXC5lcmxhbmcuY29va2llXCJcbiAgICAgICAgfSksIFwiICh1c3VhbGx5IFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJDOlxcXFxVc2Vyc1xcXFwlVVNFUk5BTUUlXFxcXC5lcmxhbmcuY29va2llXCJcbiAgICAgICAgfSksIFwiKSBpZiBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiSE9NRURSSVZFXCJcbiAgICAgICAgfSksIFwiIGFuZCBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiSE9NRVBBVEhcIlxuICAgICAgICB9KSwgXCIgYXJlIG5vdCBib3RoIHNldFwiXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJGb3IgdGhlIFJhYmJpdE1RIFdpbmRvd3Mgc2VydmljZSAtIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCIlVVNFUlBST0ZJTEUlXFxcXC5lcmxhbmcuY29va2llXCJcbiAgICAgICAgfSksIFwiICh1c3VhbGx5IFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJDOlxcXFxXSU5ET1dTXFxcXHN5c3RlbTMyXFxcXGNvbmZpZ1xcXFxzeXN0ZW1wcm9maWxlXCJcbiAgICAgICAgfSksIFwiKVwiXVxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJJZiB0aGUgV2luZG93cyBzZXJ2aWNlIGlzIHVzZWQsIHRoZSBjb29raWUgc2hvdWxkIGJlIGNvcGllZCBmcm9tXFxyXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJDOlxcXFxXaW5kb3dzXFxcXHN5c3RlbTMyXFxcXGNvbmZpZ1xcXFxzeXN0ZW1wcm9maWxlXFxcXC5lcmxhbmcuY29va2llXCJcbiAgICAgIH0pLCBcIiB0byB0aGUgZXhwZWN0ZWRcXHJcXG5sb2NhdGlvbiBmb3IgdXNlcnMgcnVubmluZyBjb21tYW5kcyBsaWtlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXFjdGwuYmF0XCJcbiAgICAgIH0pLCBcIi5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwib3ZlcnJpZGluZy11c2luZy1jbGktYW5kLXJ1bnRpbWUtY29tbWFuZC1saW5lLWFyZ3VtZW50c1wiLFxuICAgICAgY2hpbGRyZW46IFwiT3ZlcnJpZGluZyBVc2luZyBDTEkgYW5kIFJ1bnRpbWUgQ29tbWFuZCBMaW5lIEFyZ3VtZW50c1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJBcyBhbiBhbHRlcm5hdGl2ZSwgdGhlIG9wdGlvbiBcXFwiXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCItc2V0Y29va2llIDx2YWx1ZT5cIlxuICAgICAgfSksIFwiXFxcIiBjYW4gYmUgYWRkZWRcXHJcXG50byBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIlJBQkJJVE1RX1NFUlZFUl9BRERJVElPTkFMX0VSTF9BUkdTXCJcbiAgICAgIH0pLCBcIiBcIiwgX2pzeChcImFcIiwge1xuICAgICAgICBocmVmOiBcIi4vY29uZmlndXJlXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImVudmlyb25tZW50IHZhcmlhYmxlIHZhbHVlXCJcbiAgICAgIH0pLCBcIlxcclxcbnRvIG92ZXJyaWRlIHRoZSBjb29raWUgdmFsdWUgdXNlZCBieSBhIFJhYmJpdE1RIG5vZGU6XCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1iYXNoXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIlJBQkJJVE1RX1NFUlZFUl9BRERJVElPTkFMX0VSTF9BUkdTPVxcXCItc2V0Y29va2llIGNvb2tpZS12YWx1ZVxcXCJcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJDTEkgdG9vbHMgY2FuIHRha2UgYSBjb29raWUgdmFsdWUgdXNpbmcgYSBjb21tYW5kIGxpbmUgZmxhZzpcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtYmFzaFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS1kaWFnbm9zdGljcyBzdGF0dXMgLS1lcmxhbmctY29va2llIFxcXCJjb29raWUtdmFsdWVcXFwiXFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJCb3RoIGFyZSBcIiwgX2pzeChfY29tcG9uZW50cy5zdHJvbmcsIHtcbiAgICAgICAgY2hpbGRyZW46IFwidGhlIGxlYXN0IHNlY3VyZSBvcHRpb25zXCJcbiAgICAgIH0pLCBcIiBhbmQgZ2VuZXJhbGx5IFwiLCBfanN4KF9jb21wb25lbnRzLnN0cm9uZywge1xuICAgICAgICBjaGlsZHJlbjogXCJub3QgcmVjb21tZW5kZWRcIlxuICAgICAgfSksIFwiLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgzLCB7XG4gICAgICBpZDogXCJjb29raWUtZmlsZS10cm91Ymxlc2hvb3RpbmdcIixcbiAgICAgIGNoaWxkcmVuOiBcIlRyb3VibGVzaG9vdGluZ1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDQsIHtcbiAgICAgIGlkOiBcImNsaS10b29sc1wiLFxuICAgICAgY2hpbGRyZW46IFwiQ0xJIFRvb2xzXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlN0YXJ0aW5nIHdpdGggXCIsIF9qc3hzKF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIvcmVsZWFzZS1pbmZvcm1hdGlvblwiLFxuICAgICAgICBjaGlsZHJlbjogW1widmVyc2lvbiBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiMy44LjZcIlxuICAgICAgICB9KV1cbiAgICAgIH0pLCBcIiwgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS1kaWFnbm9zdGljc1wiXG4gICAgICB9KSwgXCIgaW5jbHVkZXMgYSBjb21tYW5kXFxyXFxudGhhdCBwcm92aWRlcyByZWxldmFudCBpbmZvcm1hdGlvbiBvbiB0aGUgRXJsYW5nIGNvb2tpZSBmaWxlIHVzZWQgYnkgQ0xJIHRvb2xzOlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtYmFzaFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS1kaWFnbm9zdGljcyBlcmxhbmdfY29va2llX3NvdXJjZXNcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJUaGUgY29tbWFuZCB3aWxsIHJlcG9ydCBvbiB0aGUgZWZmZWN0aXZlIHVzZXIsIHVzZXIgaG9tZSBkaXJlY3RvcnkgYW5kIHRoZSBleHBlY3RlZCBsb2NhdGlvblxcclxcbm9mIHRoZSBjb29raWUgZmlsZTpcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJDb29raWUgRmlsZVxcclxcblxcclxcbkVmZmVjdGl2ZSB1c2VyOiBhbnRhcmVzXFxyXFxuRWZmZWN0aXZlIGhvbWUgZGlyZWN0b3J5OiAvaG9tZS9jbGktdXNlclxcclxcbkNvb2tpZSBmaWxlIHBhdGg6IC9ob21lL2NsaS11c2VyLy5lcmxhbmcuY29va2llXFxyXFxuQ29va2llIGZpbGUgZXhpc3RzPyB0cnVlXFxyXFxuQ29va2llIGZpbGUgdHlwZTogcmVndWxhclxcclxcbkNvb2tpZSBmaWxlIGFjY2VzczogcmVhZFxcclxcbkNvb2tpZSBmaWxlIHNpemU6IDIwXFxyXFxuXFxyXFxuQ29va2llIENMSSBTd2l0Y2hcXHJcXG5cXHJcXG4tLWVybGFuZy1jb29raWUgdmFsdWUgc2V0PyBmYWxzZVxcclxcbi0tZXJsYW5nLWNvb2tpZSB2YWx1ZSBsZW5ndGg6IDBcXHJcXG5cXHJcXG5FbnYgdmFyaWFibGUgIChEZXByZWNhdGVkKVxcclxcblxcclxcblJBQkJJVE1RX0VSTEFOR19DT09LSUUgdmFsdWUgc2V0PyBmYWxzZVxcclxcblJBQkJJVE1RX0VSTEFOR19DT09LSUUgdmFsdWUgbGVuZ3RoOiAwXFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDQsIHtcbiAgICAgIGlkOiBcInNlcnZlci1ub2Rlc1wiLFxuICAgICAgY2hpbGRyZW46IFwiU2VydmVyIE5vZGVzXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIldoZW4gYSBub2RlIHN0YXJ0cywgaXQgd2lsbCBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi9sb2dnaW5nXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImxvZ1wiXG4gICAgICB9KSwgXCIgdGhlIGhvbWUgZGlyZWN0b3J5IGxvY2F0aW9uIG9mIGl0cyBlZmZlY3RpdmUgdXNlcjpcIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwibm9kZSAgICAgICAgICAgOiByYWJiaXRAY2RiZjRkZTVmMjJkXFxyXFxuaG9tZSBkaXIgICAgICAgOiAvdmFyL2xpYi9yYWJiaXRtcVxcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVW5sZXNzIGFueSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi9yZWxvY2F0ZVwiLFxuICAgICAgICBjaGlsZHJlbjogXCJzZXJ2ZXIgZGlyZWN0b3JpZXNcIlxuICAgICAgfSksIFwiIHdlcmUgb3ZlcnJpZGRlbiwgdGhhdCdzIHRoZSBkaXJlY3Rvcnkgd2hlcmVcXHJcXG50aGUgY29va2llIGZpbGUgd2lsbCBiZSBsb29rZWQgZm9yLCBhbmQgY3JlYXRlZCBieSB0aGUgbm9kZSBvbiBmaXJzdCBib290IGlmIGl0IGRvZXMgbm90IGFscmVhZHkgZXhpc3QuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJJbiB0aGUgZXhhbXBsZSBhYm92ZSwgdGhlIGNvb2tpZSBmaWxlIGxvY2F0aW9uIHdpbGwgYmUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCIvdmFyL2xpYi9yYWJiaXRtcS8uZXJsYW5nLmNvb2tpZVwiXG4gICAgICB9KSwgXCIuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDQsIHtcbiAgICAgIGlkOiBcImhvc3RuYW1lLXJlc29sdXRpb25cIixcbiAgICAgIGNoaWxkcmVuOiBcIkhvc3RuYW1lIFJlc29sdXRpb25cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiU3RhcnRpbmcgd2l0aCBcIiwgX2pzeHMoX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi9yZWxlYXNlLWluZm9ybWF0aW9uXCIsXG4gICAgICAgIGNoaWxkcmVuOiBbXCJSYWJiaXRNUSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiMy44LjZcIlxuICAgICAgICB9KV1cbiAgICAgIH0pLCBcIiwgQ0xJIHRvb2xzIHByb3ZpZGUgdHdvIGNvbW1hbmRzIHRoYXQgaGVscCB2ZXJpZnlcXHJcXG50aGF0IGhvc3RuYW1lIHJlc29sdXRpb24gb24gYSBub2RlIHdvcmtzIGFzIGV4cGVjdGVkLiBUaGUgY29tbWFuZHMgYXJlIG5vdCBtZWFudCB0byByZXBsYWNlXFxyXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcImh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0RpZ18oY29tbWFuZClcIixcbiAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcImRpZ1wiXG4gICAgICAgIH0pXG4gICAgICB9KSwgXCIgYW5kIG90aGVyIHNwZWNpYWxpc2VkIEROUyB0b29scyBidXQgcmF0aGVyXFxyXFxucHJvdmlkZSBhIHdheSB0byBwZXJmb3JtIG1vc3QgYmFzaWMgY2hlY2tzIHdoaWxlIHRha2luZyBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiaHR0cHM6Ly9lcmxhbmcub3JnL2RvYy9hcHBzL2VydHMvaW5ldF9jZmcuaHRtbFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJFcmxhbmcgcnVudGltZSBob3N0bmFtZSByZXNvbHZlciBmZWF0dXJlc1wiXG4gICAgICB9KSwgXCJcXHJcXG5pbnRvIGFjY291bnQuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJUaGUgY29tbWFuZHMgYXJlIGNvdmVyZWQgaW4gdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL25ldHdvcmtpbmcjZG5zLXZlcmlmeS1yZXNvbHV0aW9uXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIk5ldHdvcmtpbmcgZ3VpZGVcIlxuICAgICAgfSksIFwiLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJjbGktYXV0aGVudGljYXRpb24tZmFpbHVyZXNcIixcbiAgICAgIGNoaWxkcmVuOiBcIkF1dGhlbnRpY2F0aW9uIEZhaWx1cmVzXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJXaGVuIHRoZSBjb29raWUgaXMgbWlzY29uZmlndXJlZCAoZm9yIGV4YW1wbGUsIG5vdCBpZGVudGljYWwpLCBSYWJiaXRNUSBub2RlcyB3aWxsIGxvZyBlcnJvcnNcXHJcXG5zdWNoIGFzIFxcXCJDb25uZWN0aW9uIGF0dGVtcHQgZnJvbSBkaXNhbGxvd2VkIG5vZGVcXFwiLCBcXFwiXFxcIiwgXFxcIkNvdWxkIG5vdCBhdXRvLWNsdXN0ZXJcXFwiLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiRm9yIGV4YW1wbGUsIHdoZW4gYSBDTEkgdG9vbCBjb25uZWN0cyBhbmQgdHJpZXMgdG8gYXV0aGVudGljYXRlIHVzaW5nIGEgbWlzbWF0Y2hpbmcgc2VjcmV0IHZhbHVlOlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIjIwMjAtMDYtMTUgMTM6MDM6MzMgW2Vycm9yXSA8MC4xMTg3LjA+ICoqIENvbm5lY3Rpb24gYXR0ZW1wdCBmcm9tIG5vZGUgJ3JhYmJpdG1xY2xpLTk5MzkxLXJhYmJpdEB3YXJwMTAnIHJlamVjdGVkLiBJbnZhbGlkIGNoYWxsZW5nZSByZXBseS4gKipcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIldoZW4gYSBDTEkgdG9vbCBzdWNoIGFzIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXFjdGxcIlxuICAgICAgfSksIFwiIGZhaWxzIHRvIGF1dGhlbnRpY2F0ZSB3aXRoIFJhYmJpdE1RLFxcclxcbnRoZSBtZXNzYWdlIHVzdWFsbHkgc2F5c1wiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCIqIGVwbWQgcmVwb3J0cyBub2RlICdyYWJiaXQnIHJ1bm5pbmcgb24gcG9ydCAyNTY3MlxcclxcbiogVENQIGNvbm5lY3Rpb24gc3VjY2VlZGVkIGJ1dCBFcmxhbmcgZGlzdHJpYnV0aW9uIGZhaWxlZFxcclxcbiogc3VnZ2VzdGlvbjogaG9zdG5hbWUgbWlzbWF0Y2g/XFxyXFxuKiBzdWdnZXN0aW9uOiBpcyB0aGUgY29va2llIHNldCBjb3JyZWN0bHk/XFxyXFxuKiBzdWdnZXN0aW9uOiBpcyB0aGUgRXJsYW5nIGRpc3RyaWJ1dGlvbiB1c2luZyBUTFM/XFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiVGhpcyBtZWFucyB0aGF0IFRDUCBjb25uZWN0aW9uIGZyb20gYSBDTEkgdG9vbCB0byBhIFJhYmJpdE1RIG5vZGVcXHJcXG5zdWNjZWVkZWQgYnV0IGF1dGhlbnRpY2F0aW9uIGF0dGVtcHQgd2FzIHJlamVjdGVkIGJ5IHRoZSBzZXJ2ZXIuIFRoZVxcclxcbm1lc3NhZ2UgYWxzbyBtZW50aW9ucyBzZXZlcmFsIG1vc3QgY29tbW9uIHJlYXNvbnMgZm9yIHRoYXQsIHdoaWNoIGFyZVxcclxcbmNvdmVyZWQgbmV4dC5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmg0LCB7XG4gICAgICBpZDogXCJwb3NzaWJsZS1yZWFzb24tMS1taXNwbGFjZWQtb3ItbWlzc2luZy1jb29raWUtZmlsZVwiLFxuICAgICAgY2hpbGRyZW46IFwiUG9zc2libGUgUmVhc29uIDE6IE1pc3BsYWNlZCBvciBNaXNzaW5nIENvb2tpZSBGaWxlXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJBbiBpbmNvcnJlY3RseSBwbGFjZWQgY29va2llIGZpbGUgb3IgY29va2llIHZhbHVlIG1pc21hdGNoIGFyZSBtb3N0XFxyXFxuY29tbW9uIHNjZW5hcmlvcyBmb3Igc3VjaCBmYWlsdXJlcy5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIlJhYmJpdE1RIG5vZGUgbG9ncyBpdHMgY29va2llIGhhc2ggb24gc3RhcnQuIENMSSB0b29scyBwcmludCB0aGVpclxcclxcbmNvb2tpZSBoYXNoIHZhbHVlIHdoZW4gdGhleSBmYWlsIHRvIGF1dGhlbnRpY2F0ZSB3aXRoIHRoZSB0YXJnZXQgbm9kZS5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIldoZW4gYSByZWNlbnQgRXJsYW5nL09UUCB2ZXJzaW9uIGlzIHVzZWQsIGF1dGhlbnRpY2F0aW9uIGZhaWx1cmVzIGNvbnRhaW5cXHJcXG5tb3JlIGluZm9ybWF0aW9uIGFuZCBjb29raWUgbWlzbWF0Y2hlcyBjYW4gYmUgaWRlbnRpZmllZCBiZXR0ZXI6XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0QHdhcnAxMDpcXHJcXG4gICogY29ubmVjdGVkIHRvIGVwbWQgKHBvcnQgNDM2OSkgb24gd2FycDEwXFxyXFxuICAqIGVwbWQgcmVwb3J0cyBub2RlICdyYWJiaXQnIHJ1bm5pbmcgb24gcG9ydCAyNTY3MlxcclxcbiAgKiBUQ1AgY29ubmVjdGlvbiBzdWNjZWVkZWQgYnV0IEVybGFuZyBkaXN0cmlidXRpb24gZmFpbGVkXFxyXFxuXFxyXFxuICAqIEF1dGhlbnRpY2F0aW9uIGZhaWxlZCAocmVqZWN0ZWQgYnkgdGhlIHJlbW90ZSBub2RlKSwgcGxlYXNlIGNoZWNrIHRoZSBFcmxhbmcgY29va2llXFxyXFxuXFxyXFxuY3VycmVudCBub2RlIGRldGFpbHM6XFxyXFxuLSBub2RlIG5hbWU6ICdyYWJiaXRtcS1jbGktNjNAd2FycDEwJ1xcclxcbi0gaG9tZSBkaXI6IC9ob21lL3VzZXJuYW1lXFxyXFxuLSBjb29raWUgaGFzaDogU2cwOFI4K0c4NUVZSFozSC85TlVmZz09XFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDQsIHtcbiAgICAgIGlkOiBcInBvc3NpYmxlLXJlYXNvbi0yLW5vZGUtbmFtZS10eXBlLW1pc21hdGNoXCIsXG4gICAgICBjaGlsZHJlbjogXCJQb3NzaWJsZSBSZWFzb24gMjogTm9kZSBOYW1lIFR5cGUgTWlzbWF0Y2hcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiSWYgUmFiYml0TVEgbm9kZXMgYXJlIGNvbmZpZ3VyZWQgdG8gdXNlIGxvbmcgbm9kZSBuYW1lcyAoXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJSQUJCSVRNUV9VU0VfTE9OR05BTUVcIlxuICAgICAgfSksIFwiIGlzIGV4cG9ydGVkIHRvIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwidHJ1ZVwiXG4gICAgICB9KSwgXCIpLFxcclxcbnNvIHNob3VsZCBDTEkgdG9vbHMgdmlhIHRoZSBzYW1lIGVudmlyb25tZW50IHZhcmlhYmxlIG9yIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIi0tbG9uZ25hbWVzXCJcbiAgICAgIH0pLCBcIiBjb21tYW5kIGxpbmUgZmxhZyBpbnRyb2R1Y2VkIGluIDMuNy4wLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmg0LCB7XG4gICAgICBpZDogXCJwb3NzaWJsZS1yZWFzb24tMy1pbnRlci1ub2RlLWNvbm5lY3Rpb25zLXJlcXVpcmUtdGxzXCIsXG4gICAgICBjaGlsZHJlbjogXCJQb3NzaWJsZSBSZWFzb24gMzogSW50ZXItbm9kZSBDb25uZWN0aW9ucyBSZXF1aXJlIFRMU1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJJZiBSYWJiaXRNUSBpcyBzZXQgdXAgdG8gXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vY2x1c3RlcmluZy1zc2xcIixcbiAgICAgICAgY2hpbGRyZW46IFwiZW5jcnlwdCBpbnRlci1ub2RlIGFuZCBDTEkgY29ubmVjdGlvbnMgdXNpbmcgVExTXCJcbiAgICAgIH0pLCBcIixcXHJcXG5DTEkgdG9vbHMgYWxzbyBtdXN0IHVzZSBUTFMgYW5kIHRoZXJlZm9yZSByZXF1aXJlIGFkZGl0aW9uYWwgb3B0aW9ucy5cXHJcXG5Ob24tVExTIGNvbm5lY3Rpb25zIGZyb20gb3RoZXIgbm9kZXMgYW5kIENMSSB0b29scyB3aWxsIGZhaWwuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDQsIHtcbiAgICAgIGlkOiBcInBvc3NpYmxlLXJlYXNvbi00LWhvc3RuYW1lLW1pc21hdGNoXCIsXG4gICAgICBjaGlsZHJlbjogXCJQb3NzaWJsZSBSZWFzb24gNDogSG9zdG5hbWUgTWlzbWF0Y2hcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiT3RoZXIgcmVhc29ucyBpbmNsdWRlIGEgaG9zdG5hbWUgbWlzbWF0Y2ggaW4gbm9kZSBuYW1lIHVzZWQgYnkgdGhlIHRhcmdldCBSYWJiaXRNUSBub2RlIGFuZCB0aGF0IHByb3ZpZGVkXFxyXFxudG8gdGhlIENMSSB0b29sIChlLmcuIHZpYSB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCItblwiXG4gICAgICB9KSwgXCIgZmxhZykuIEZvciBleGFtcGxlLCBpZiBhIG5vZGUgcnVucyB1c2luZyBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdEBybXExLmVuZy5tZWdhY29ycC5sb2NhbFwiXG4gICAgICB9KSwgXCJcXHJcXG5hcyBpdHMgbmFtZSBidXQgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcWN0bFwiXG4gICAgICB9KSwgXCIgaXMgaW52b2tlZCBhc1wiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtYmFzaFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS1kaWFnbm9zdGljcyBzdGF0dXMgLW4gcmFiYml0QHJtcS1kZXYuZW5nLm1lZ2Fjb3JwLmxvY2FsXFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJ0aGVuIGV2ZW4gaWYgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJybXEtZGV2LmVuZy5tZWdhY29ycC5sb2NhbFwiXG4gICAgICB9KSwgXCIgYW5kIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicm1xMS5lbmcubWVnYWNvcnAubG9jYWxcIlxuICAgICAgfSksIFwiIHJlc29sdmUgdG8gdGhlIHNhbWUgSVAgYWRkcmVzcyxcXHJcXG50aGUgc2VydmVyIHdpbGwgcmVqZWN0IFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXFjdGxcIlxuICAgICAgfSksIFwiJ3MgYXV0aGVudGljYXRpb24gYXR0ZW1wdC4gVGhpcyBzY2VuYXJpbyBpcyByZWxhdGl2ZWx5XFxyXFxucmFyZS5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJXaGVuIGEgcmVjZW50IEVybGFuZy9PVFAgdmVyc2lvbiBpcyB1c2VkLCBhdXRoZW50aWNhdGlvbiBmYWlsdXJlcyBjb250YWluXFxyXFxubW9yZSBpbmZvcm1hdGlvbiBhbmQgaG9zdG5hbWUgbWlzbWF0Y2hlcyBjYW4gYmUgaWRlbnRpZmllZCBiZXR0ZXI6XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0QGxvY2FsaG9zdDpcXHJcXG4gICogY29ubmVjdGVkIHRvIGVwbWQgKHBvcnQgNDM2OSkgb24gbG9jYWxob3N0XFxyXFxuICAqIGVwbWQgcmVwb3J0cyBub2RlICdyYWJiaXQnIHJ1bm5pbmcgb24gcG9ydCAyNTY3MlxcclxcbiAgKiBUQ1AgY29ubmVjdGlvbiBzdWNjZWVkZWQgYnV0IEVybGFuZyBkaXN0cmlidXRpb24gZmFpbGVkXFxyXFxuXFxyXFxuICAqIEhvc3RuYW1lIG1pc21hdGNoOiBub2RlIFxcXCJyYWJiaXRAd2FycDEwXFxcIiBiZWxpZXZlcyBpdHMgaG9zdCBpcyBkaWZmZXJlbnQuIFBsZWFzZSBlbnN1cmUgdGhhdCBob3N0bmFtZXMgcmVzb2x2ZSB0aGUgc2FtZSB3YXkgbG9jYWxseSBhbmQgb24gXFxcInJhYmJpdEB3YXJwMTBcXFwiXFxyXFxuXFxyXFxuXFxyXFxuY3VycmVudCBub2RlIGRldGFpbHM6XFxyXFxuLSBub2RlIG5hbWU6ICdyYWJiaXRtcS1jbGktMzBAd2FycDEwJ1xcclxcbi0gaG9tZSBkaXI6IC9Vc2Vycy9hbnRhcmVzXFxyXFxuLSBjb29raWUgaGFzaDogU2cwOFI4K0c4NUVZSFozSC85TlVmZz09XFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDQsIHtcbiAgICAgIGlkOiBcIm90aGVyLXBvc3NpYmxlLXJlYXNvbnNcIixcbiAgICAgIGNoaWxkcmVuOiBcIk90aGVyIFBvc3NpYmxlIFJlYXNvbnNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkp1c3QgbGlrZSB3aXRoIGFueSBuZXR3b3JrIGNvbm5lY3Rpb24sIENMSS10by1ub2RlIGNvbm5lY3Rpb25zIGNhbiBmYWlsIGR1ZSB0b1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnVsLCB7XG4gICAgICBjaGlsZHJlbjogW1wiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFwiSG9zdG5hbWUgcmVzb2x1dGlvbiBmYWlsdXJlc1wiXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJJbmNvcnJlY3QgSVAgcm91dGluZ1wiXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJUQ1AgcG9ydCBhY2Nlc3MgYmxvY2tlZCAoZmlyZXdhbGxzLCBldGMpXCJcbiAgICAgIH0pLCBcIlxcblwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcImFuZCBzbyBvbi5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vbmV0d29ya2luZ1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJSYWJiaXRNUSBOZXR3b3JraW5nIGd1aWRlXCJcbiAgICAgIH0pLCBcIiBjb250YWlucyBhIHNlY3Rpb24gb24gdHJvdWJsZXNob290aW5nIG9mIG5ldHdvcmtpbmctcmVsYXRlZCBpc3N1ZXMuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcIm1hbmFnaW5nLW5vZGVzXCIsXG4gICAgICBjaGlsZHJlbjogXCJNYW5hZ2luZyBOb2Rlc1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDMsIHtcbiAgICAgIGlkOiBcImdldHRpbmctbm9kZS1zdGF0dXNcIixcbiAgICAgIGNoaWxkcmVuOiBcIkdldHRpbmcgbm9kZSBzdGF0dXNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVG8gcmV0cmlldmUgbm9kZSBzdGF0dXMsIHVzZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLWRpYWdub3N0aWNzIHN0YXR1c1wiXG4gICAgICB9KSwgXCIgb3IgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS1kaWFnbm9zdGljcy5iYXQgc3RhdHVzXCJcbiAgICAgIH0pLCBcIlxcclxcbndpdGggYW4gb3B0aW9uYWwgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCItLW5vZGVcIlxuICAgICAgfSksIFwiIHRhcmdldDpcIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoVGFicywge1xuICAgICAgZ3JvdXBJZDogXCJleGFtcGxlc1wiLFxuICAgICAgY2hpbGRyZW46IFtfanN4KFRhYkl0ZW0sIHtcbiAgICAgICAgdmFsdWU6IFwiYmFzaFwiLFxuICAgICAgICBsYWJlbDogXCJiYXNoXCIsXG4gICAgICAgIGRlZmF1bHQ6IHRydWUsXG4gICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1iYXNoXCIsXG4gICAgICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS1kaWFnbm9zdGljcyAgc3RhdHVzXFxyXFxuXFxyXFxucmFiYml0bXEtZGlhZ25vc3RpY3MgIHN0YXR1cyAtLW5vZGUgcmFiYml0QHRhcmdldC1ob3N0bmFtZS5sb2NhbFxcblwiXG4gICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICAgIH0pLCBfanN4KFRhYkl0ZW0sIHtcbiAgICAgICAgdmFsdWU6IFwiUG93ZXJTaGVsbFwiLFxuICAgICAgICBsYWJlbDogXCJQb3dlclNoZWxsXCIsXG4gICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1Qb3dlclNoZWxsXCIsXG4gICAgICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS1kaWFnbm9zdGljcyAuYmF0IHN0YXR1c1xcclxcblxcclxcbnJhYmJpdG1xLWRpYWdub3N0aWNzIC5iYXQgc3RhdHVzIC0tbm9kZSByYWJiaXRAdGFyZ2V0LWhvc3RuYW1lLmxvY2FsXFxuXCJcbiAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgICAgfSldXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDMsIHtcbiAgICAgIGlkOiBcInN0YXJ0aW5nLWEtbm9kZVwiLFxuICAgICAgY2hpbGRyZW46IFwiU3RhcnRpbmcgYSBub2RlXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJIb3cgUmFiYml0TVEgbm9kZXMgYXJlIHN0YXJ0ZWQgZGVwZW5kcyBvbiB0aGUgcGFja2FnZSB0eXBlIHVzZWQ6XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMudWwsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtcIldoZW4gdXNpbmcgRGViaWFuIGFuZCBSUE0gcGFja2FnZXMgb24gbW9kZXJuIExpbnV4IGRpc3RyaWJ1dGlvbnMsIG5vZGVzIGFyZSBcIiwgX2pzeHMoX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiLi9pbnN0YWxsLWRlYmlhbiNtYW5hZ2luZy1zZXJ2aWNlXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFtcIm1hbmFnZWQgdXNpbmcgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgICAgY2hpbGRyZW46IFwic3lzdGVtZFwiXG4gICAgICAgICAgfSldXG4gICAgICAgIH0pXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJXaGVuIHVzaW5nIFdpbmRvd3MgaW5zdGFsbGVyLCBub2RlcyBhcmUgdXN1YWxseSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIuL2luc3RhbGwtd2luZG93cyNtYW5hZ2luZ1wiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIm1hbmFnZWQgYnkgdGhlIFdpbmRvd3Mgc2VydmljZSBtYW5hZ2VyXCJcbiAgICAgICAgfSldXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtcIldoZW4gdXNpbmcgSG9tZWJyZXcgZm9ybXVsYSwgbm9kZXMgYXJlIG1hbmFnZWQgdXNpbmcgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcImJyZXcgc2VydmljZXNcIlxuICAgICAgICB9KV1cbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW1wiV2hlbiB1c2luZyBnZW5lcmljIFVOSVggYnVpbGQgb3IgYmluYXJ5IFdpbmRvd3MgYnVpbGQsIG5vZGVzIGFyZSBzdGFydGVkIHVzaW5nIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJzYmluL3JhYmJpdG1xLXNlcnZlclwiXG4gICAgICAgIH0pLCBcIiBhbmQgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcInNiaW4vcmFiYml0bXEtc2VydmVyLmJhdFwiXG4gICAgICAgIH0pLCBcIiwgcmVzcGVjdGl2ZWx5LCBpbiB0aGUgaW5zdGFsbGF0aW9uIHJvb3RcIl1cbiAgICAgIH0pLCBcIlxcblwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgzLCB7XG4gICAgICBpZDogXCJzdG9wcGluZy1hLW5vZGVcIixcbiAgICAgIGNoaWxkcmVuOiBcIlN0b3BwaW5nIGEgbm9kZVwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiVG8gc3RvcCBhIG5vZGUsIGNvbnNpZGVyIHVzaW5nIHRoZSBzYW1lIHNlcnZpY2UgbWFuYWdlbWVudCB0b29saW5nIHVzZWQgd2hlbiBzdGFydGluZ1xcclxcbnRoZSBub2RlLCB3aGljaCBkZXBlbmRzIG9uIHRoZSBwYWNrYWdlIHR5cGVkIHVzZWQgd2hlbiBSYWJiaXRNUSB3YXMgaW5zdGFsbGVkLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJUbyBzdG9wIGEgbm9kZSB1c2luZyBSYWJiaXRNUSBDTEkgdG9vbHMsIHVzZVxcclxcblwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXFjdGwgc2h1dGRvd25cIlxuICAgICAgfSksIFwiIG9yIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXFjdGwuYmF0IHNodXRkb3duXCJcbiAgICAgIH0pLCBcIiB3aXRoIGFuIG9wdGlvbmFsIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiLS1ub2RlXCJcbiAgICAgIH0pLCBcIiB0YXJnZXQ6XCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKFRhYnMsIHtcbiAgICAgIGdyb3VwSWQ6IFwiZXhhbXBsZXNcIixcbiAgICAgIGNoaWxkcmVuOiBbX2pzeChUYWJJdGVtLCB7XG4gICAgICAgIHZhbHVlOiBcImJhc2hcIixcbiAgICAgICAgbGFiZWw6IFwiYmFzaFwiLFxuICAgICAgICBkZWZhdWx0OiB0cnVlLFxuICAgICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtYmFzaFwiLFxuICAgICAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXFjdGwgc2h1dGRvd25cXHJcXG5yYWJiaXRtcWN0bCBzaHV0ZG93biAtLW5vZGUgcmFiYml0QHRhcmdldC1ob3N0bmFtZS5sb2NhbFxcblwiXG4gICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICAgIH0pLCBfanN4KFRhYkl0ZW0sIHtcbiAgICAgICAgdmFsdWU6IFwiUG93ZXJTaGVsbFwiLFxuICAgICAgICBsYWJlbDogXCJQb3dlclNoZWxsXCIsXG4gICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1Qb3dlclNoZWxsXCIsXG4gICAgICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcWN0bC5iYXQgc2h1dGRvd25cXHJcXG5yYWJiaXRtcWN0bC5iYXQgc2h1dGRvd24gLS1ub2RlIHJhYmJpdEB0YXJnZXQtaG9zdG5hbWUubG9jYWxcXG5cIlxuICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgICB9KV1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwiaHR0cC1hcGktY2xpXCIsXG4gICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcWFkbWluXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL21hbmFnZW1lbnQtY2xpXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xYWRtaW5cIlxuICAgICAgfSksIFwiIGlzIGEgY29tbWFuZCBsaW5lIHRvb2wgdGhhdCdzIGJ1aWx0IG9uIHRvcCBvZiBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi9tYW5hZ2VtZW50XCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIlJhYmJpdE1RIEhUVFAgQVBJXCJcbiAgICAgIH0pLCBcIi5cXHJcXG5JdCBpcyBub3QgYSByZXBsYWNlbWVudCBmb3IgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcWN0bFwiXG4gICAgICB9KSwgXCIgYW5kIHByb3ZpZGVzIGFjY2VzcyB0byBhIHN1YnNldCBvZiBtb3N0IGNvbW1vbmx5XFxyXFxucGVyZm9ybWVkIG9wZXJhdGlvbnMgcHJvdmlkZWQgYnkgdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL21hbmFnZW1lbnRcIixcbiAgICAgICAgY2hpbGRyZW46IFwibWFuYWdlbWVudCBVSVwiXG4gICAgICB9KSwgXCIuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xYWRtaW5cIlxuICAgICAgfSksIFwiIHVzZXMgSFRUUCBBUEkgYXV0aGVudGljYXRpb24gbWVjaGFuaXNtIChiYXNpYyBIVFRQIGF1dGhlbnRpY2F0aW9uKS5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkl0IGlzIGEgbmF0aXZlIGJpbmFyeSBhbmQgbXVzdCBiZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiaHR0cHM6Ly9naXRodWIuY29tL3JhYmJpdG1xL3JhYmJpdG1xYWRtaW4tbmcvcmVsZWFzZXNcIixcbiAgICAgICAgY2hpbGRyZW46IFwiZG93bmxvYWRlZCBzZXBhcmF0ZWx5XCJcbiAgICAgIH0pLCBcIiBmcm9tIHRoZSBSYWJiaXRNUVxcclxcbmRpc3RyaWJ1dGlvbi5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwiY2xpLWFuZC1jbHVzdGVyaW5nXCIsXG4gICAgICBjaGlsZHJlbjogXCJcXFwiTm9kZS1sb2NhbFxcXCIgYW5kIFxcXCJDbHVzdGVyd2lkZVxcXCIgQ29tbWFuZHNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiQ2xpZW50IGNvbm5lY3Rpb25zLCBjaGFubmVscyBhbmQgcXVldWVzIHdpbGwgYmUgZGlzdHJpYnV0ZWQgYWNyb3NzIGNsdXN0ZXIgbm9kZXMuXFxyXFxuT3BlcmF0b3JzIG5lZWQgdG8gYmUgYWJsZSB0byBpbnNwZWN0IGFuZCBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi9tb25pdG9yaW5nXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIm1vbml0b3JcIlxuICAgICAgfSksIFwiIHN1Y2ggcmVzb3VyY2VzXFxyXFxuYWNyb3NzIGFsbCBjbHVzdGVyIG5vZGVzLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiQ0xJIHRvb2xzIHN1Y2ggYXMgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vbWFuL3JhYmJpdG1xY3RsLjhcIixcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXFjdGxcIlxuICAgICAgfSksIFwiIGFuZFxcclxcblwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXEtZGlhZ25vc3RpY3NcIlxuICAgICAgfSksIFwiIHByb3ZpZGUgY29tbWFuZHMgdGhhdCBpbnNwZWN0IHJlc291cmNlcyBhbmRcXHJcXG5jbHVzdGVyLXdpZGUgc3RhdGUuIFNvbWUgY29tbWFuZHMgZm9jdXMgb24gdGhlIHN0YXRlIG9mIGEgc2luZ2xlIG5vZGVcXHJcXG4oZS5nLiBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLWRpYWdub3N0aWNzIGVudmlyb25tZW50XCJcbiAgICAgIH0pLCBcIiBhbmQgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS1kaWFnbm9zdGljcyBzdGF0dXNcIlxuICAgICAgfSksIFwiKSwgb3RoZXJzIGluc3BlY3QgY2x1c3Rlci13aWRlIHN0YXRlLiBTb21lIGV4YW1wbGVzIG9mIHRoZVxcclxcbmxhdHRlciBpbmNsdWRlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXFjdGwgbGlzdF9jb25uZWN0aW9uc1wiXG4gICAgICB9KSwgXCIsIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXFjdGwgbGlzdF9tcXR0X2Nvbm5lY3Rpb25zXCJcbiAgICAgIH0pLCBcIiwgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcWN0bCBsaXN0X3N0b21wX2Nvbm5lY3Rpb25zXCJcbiAgICAgIH0pLCBcIixcXHJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xY3RsIGxpc3RfdXNlcnNcIlxuICAgICAgfSksIFwiLCBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xY3RsIGxpc3Rfdmhvc3RzXCJcbiAgICAgIH0pLCBcIiBhbmQgc28gb24uXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJTdWNoIFxcXCJjbHVzdGVyLXdpZGVcXFwiIGNvbW1hbmRzIHdpbGwgb2Z0ZW4gY29udGFjdCBvbmUgbm9kZVxcclxcbmZpcnN0LCBkaXNjb3ZlciBjbHVzdGVyIG1lbWJlcnMgYW5kIGNvbnRhY3QgdGhlbSBhbGwgdG9cXHJcXG5yZXRyaWV2ZSBhbmQgY29tYmluZSB0aGVpciByZXNwZWN0aXZlIHN0YXRlLiBGb3IgZXhhbXBsZSxcXHJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xY3RsIGxpc3RfY29ubmVjdGlvbnNcIlxuICAgICAgfSksIFwiIHdpbGwgY29udGFjdCBhbGxcXHJcXG5ub2RlcywgcmV0cmlldmUgdGhlaXIgQU1RUCAwLTktMSBhbmQgQU1RUCAxLjAgY29ubmVjdGlvbnMsXFxyXFxuYW5kIGRpc3BsYXkgdGhlbSBhbGwgdG8gdGhlIHVzZXIuIFRoZSB1c2VyIGRvZXNuJ3QgaGF2ZVxcclxcbnRvIG1hbnVhbGx5IGNvbnRhY3QgYWxsIG5vZGVzLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkFzc3VtaW5nIGEgbm9uLWNoYW5naW5nXFxyXFxuc3RhdGUgb2YgdGhlIGNsdXN0ZXIgKGUuZy4gbm8gY29ubmVjdGlvbnMgYXJlIGNsb3NlZCBvclxcclxcbm9wZW5lZCksIHR3byBDTEkgY29tbWFuZHMgZXhlY3V0ZWQgYWdhaW5zdCB0d28gZGlmZmVyZW50XFxyXFxubm9kZXMgb25lIGFmdGVyIGFub3RoZXIgd2lsbCBwcm9kdWNlIGlkZW50aWNhbCBvclxcclxcbnNlbWFudGljYWxseSBpZGVudGljYWwgcmVzdWx0cy4gXFxcIk5vZGUtbG9jYWxcXFwiIGNvbW1hbmRzLCBob3dldmVyLCBsaWtlbHkgd2lsbCBub3QgcHJvZHVjZVxcclxcbmlkZW50aWNhbCByZXN1bHRzIHNpbmNlIHR3byBub2RlcyByYXJlbHkgaGF2ZSBlbnRpcmVseSBpZGVudGljYWwgc3RhdGUuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwiY29tbWFuZC1kaXNjb3ZlcnlcIixcbiAgICAgIGNoaWxkcmVuOiBcIkNvbW1hbmRzIFByb3ZpZGVkIGJ5IFBsdWdpbnNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiQSBSYWJiaXRNUSBwbHVnaW4gY2FuIHByb3ZpZGUgQ0xJIGNvbW1hbmRzIHRoYXQgd2lsbCBiZSBkaXNjb3ZlcmVkIGJ5IHRvb2xzIHN1Y2ggYXMgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS1kaWFnbm9zdGljc1wiXG4gICAgICB9KSwgXCIsXFxyXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS1xdWV1ZXNcIlxuICAgICAgfSksIFwiLCBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xY3RsXCJcbiAgICAgIH0pLCBcIiwgYW5kIG90aGVycy4gRm9yIHBsdWdpbiBjb21tYW5kcyB0byBiZSBkaXNjb3ZlcmFibGUsIHRoZSBwbHVnaW5cXHJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5zdHJvbmcsIHtcbiAgICAgICAgY2hpbGRyZW46IFwibXVzdCBiZSBleHBsaWNpdGx5IGVuYWJsZWRcIlxuICAgICAgfSksIFwiLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiV2hlbiBwZXJmb3JtaW5nIGNvbW1hbmQgZGlzY292ZXJ5LCBDTEkgdG9vbHMgd2lsbCBjb25zdWx0IHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi9wbHVnaW5zI2VuYWJsZWQtcGx1Z2lucy1maWxlXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIkVuYWJsZWQgUGx1Z2lucyBGaWxlXCJcbiAgICAgIH0pLCBcIiB0byBkZXRlcm1pbmVcXHJcXG53aGF0IHBsdWdpbnMgdG8gc2NhbiBmb3IgY29tbWFuZHMuIElmIGEgcGx1Z2luIGlzIG5vdCBpbmNsdWRlZCBpbnRvIHRoYXQgZmlsZSwgZS5nLiBiZWNhdXNlIGl0IHdhcyBlbmFibGVkIGltcGxpY2l0bHkgYXNcXHJcXG5hIGRlcGVuZGVuY3ksIGl0IHdvbid0IGJlIGxpc3RlZCBpbiB0aGUgZW5hYmxlZCBwbHVnaW5zIGZpbGUgYW5kIHRodXMgaXRzIENMSSBjb21tYW5kcyBcIiwgX2pzeChfY29tcG9uZW50cy5zdHJvbmcsIHtcbiAgICAgICAgY2hpbGRyZW46IFwid2lsbCBub3QgYmUgZGlzY292ZXJlZFwiXG4gICAgICB9KSwgXCJcXHJcXG5hbmQgd2lsbCBub3QgYmUgYXZhaWxhYmxlLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVXNlIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcImhlbHBcIlxuICAgICAgfSksIFwiIGNvbW1hbmQgdG8gc2VlIHdoYXQgY29tbWFuZHMgYXJlIGF2YWlsYWJsZSwgYm90aCBjb3JlIGFuZCBwcm92aWRlZCBieSBwbHVnaW5zLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJhbGlhc2VzXCIsXG4gICAgICBjaGlsZHJlbjogXCJDb21tYW5kIEFsaWFzZXNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcWN0bFwiXG4gICAgICB9KSwgXCIsIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXEtZGlhZ25vc3RpY3NcIlxuICAgICAgfSksIFwiIGFuZCBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLXBsdWdpbnNcIlxuICAgICAgfSksIFwiIHN1cHBvcnQgY29tbWFuZCBhbGlhc2VzLiBBbGlhc2VzIHByb3ZpZGVcXHJcXG5hIHdheSB0byBkZWZpbmUgYWJicmV2aWF0ZWQgdmVyc2lvbnMgb2YgY2VydGFpbiBjb21tYW5kcyBhbmQgdGhlaXIgYXJndW1lbnRzLiBGb3IgZXhhbXBsZSxcXHJcXG5pbnN0ZWFkIG9mIHR5cGluZyBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xY3RsIGVudmlyb25tZW50XCJcbiAgICAgIH0pLCBcIiBpdCBtYXkgYmUgbW9yZSBjb252ZW5pZW50IHRvIGRlZmluZSBhbiBhbGlhcyxcXHJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xY3RsIGVudlwiXG4gICAgICB9KSwgXCIsIHRoYXQgd291bGQgZXhwYW5kIHRvIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXFjdGwgZW52aXJvbm1lbnRcIlxuICAgICAgfSksIFwiLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiQWxpYXNlcyBhcmUgbG9hZGVkIGZyb20gYSBmaWxlIHNwZWNpZmllZCB2aWEgdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiUkFCQklUTVFfQ0xJX0FMSUFTRVNfRklMRVwiXG4gICAgICB9KSwgXCIgZW52aXJvbm1lbnRcXHJcXG52YXJpYWJsZTpcIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWJhc2hcIixcbiAgICAgICAgY2hpbGRyZW46IFwiZXhwb3J0IFJBQkJJVE1RX0NMSV9BTElBU0VTX0ZJTEU9L3BhdGgvdG8vY2xpX2FsaWFzZXMuY29uZlxcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVGhlIGFsaWFzZXMgZmlsZSB1c2VzIGEgdmVyeSBtaW5pbWFsaXN0aWMgaW5pLXN0eWxlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiYWxpYXMgPSBjb21tYW5kXCJcbiAgICAgIH0pLCBcIiBmb3JtYXQsIGZvclxcclxcbmV4YW1wbGU6XCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1pbmlcIixcbiAgICAgICAgY2hpbGRyZW46IFwiZW52ID0gZW52aXJvbm1lbnRcXHJcXG5zdCAgPSBzdGF0dXMgLS1xdWlldFxcclxcblxcclxcbmxwICA9IGxpc3RfcGFyYW1ldGVycyAtLXF1aWV0XFxyXFxubHEgID0gbGlzdF9xdWV1ZXMgLS1xdWlldFxcclxcbmx1ICA9IGxpc3RfdXNlcnMgLS1xdWlldFxcclxcblxcclxcbmNzICA9IGNpcGhlcl9zdWl0ZXMgLS1vcGVuc3NsLWZvcm1hdCAtLXF1aWV0XFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiV2l0aCB0aGlzIGFsaWFzIGZpbGUgaW4gcGxhY2UgaXQgd2lsbCBiZSBwb3NzaWJsZSB0byB1c2VcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtYmFzaFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcWN0bCBlbnZcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJ3aGljaCB3b3VsZCBleHBhbmQgdG9cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtYmFzaFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcWN0bCBlbnZpcm9ubWVudFxcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIm9yXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWJhc2hcIixcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXFjdGwgbHFcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJ3aGljaCB3b3VsZCBleHBhbmQgdG9cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtYmFzaFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcWN0bCBsaXN0X3F1ZXVlcyAtLXF1aWV0XFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJUaGUgbGFzdCBhbGlhcyBpbiB0aGUgZXhhbXBsZSBhYm92ZSBjb25maWd1cmVzIGEgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS1kaWFnbm9zdGljc1wiXG4gICAgICB9KSwgXCIgY29tbWFuZDpcIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWJhc2hcIixcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXEtZGlhZ25vc3RpY3MgY3NcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJ3b3VsZCBleHBhbmQgdG9cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtYmFzaFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS1kaWFnbm9zdGljcyBjaXBoZXJfc3VpdGVzIC0tb3BlbnNzbC1mb3JtYXQgLS1xdWlldFxcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiQWxsIHRvb2xzIHByb2Nlc3MgYWxpYXNlcyB0aGUgc2FtZSB3YXkuIEFzIGxvbmcgYXMgdGhlIGV4cGFuZGVkIGNvbW1hbmQgaXMgcmVjb2duaXplZCxcXHJcXG5hbGlhc2VzIGNhbiBiZSB1c2VkIHdpdGggYW55IHRvb2wgb3IgZXZlbiBtb3JlIHRoYW4gb25lLiBGb3IgZXhhbXBsZSxcXHJcXG5ib3RoIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXFjdGxcIlxuICAgICAgfSksIFwiIGFuZCBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLWRpYWdub3N0aWNzXCJcbiAgICAgIH0pLCBcIiBwcm92aWRlIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcImVudmlyb25tZW50XCJcbiAgICAgIH0pLCBcIiBjb21tYW5kXFxyXFxuc28gdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiZW52XCJcbiAgICAgIH0pLCBcIiBhbGlhcyB3b3JrcyBmb3IgYm90aCBvZiB0aGVtIGV4YWN0bHkgdGhlIHNhbWUgd2F5OlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtYmFzaFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS1kaWFnbm9zdGljcyBlbnZcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJ3b3VsZCBleHBhbmQgdG9cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtYmFzaFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS1kaWFnbm9zdGljcyBlbnZpcm9ubWVudFxcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIlRoZSBmaWxlIHdpbGwgYmUgY29uc3VsdGVkIG9ubHkgaWYgdGhlIGNvbW1hbmQgaW52b2tlZCBpcyBub3QgcHJvdmlkZWQgYnkgdGhlIHRvb2wuXCJcbiAgICB9KV1cbiAgfSk7XG59XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHByb3BzID0ge30pIHtcbiAgY29uc3Qge3dyYXBwZXI6IE1EWExheW91dH0gPSB7XG4gICAgLi4uX3Byb3ZpZGVDb21wb25lbnRzKCksXG4gICAgLi4ucHJvcHMuY29tcG9uZW50c1xuICB9O1xuICByZXR1cm4gTURYTGF5b3V0ID8gX2pzeChNRFhMYXlvdXQsIHtcbiAgICAuLi5wcm9wcyxcbiAgICBjaGlsZHJlbjogX2pzeChfY3JlYXRlTWR4Q29udGVudCwge1xuICAgICAgLi4ucHJvcHNcbiAgICB9KVxuICB9KSA6IF9jcmVhdGVNZHhDb250ZW50KHByb3BzKTtcbn1cblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./versioned_docs/version-3.13/cli.md\n");

/***/ })

}]);