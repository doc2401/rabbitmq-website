"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkrabbitmq_website"] = globalThis["webpackChunkrabbitmq_website"] || []).push([["content---rabbitmq-website-docs-reliabilitye-9-b-7da"],{

/***/ "./.docusaurus/docusaurus-plugin-content-docs/default/site-versioned-docs-version-4-1-reliability-md-e9b.json":
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"id":"reliability","title":"Reliability Guide","description":"<!--","source":"@site/versioned_docs/version-4.1/reliability.md","sourceDirName":".","slug":"/reliability","permalink":"/rabbitmq-website/docs/reliability","draft":false,"unlisted":false,"editUrl":"https://github.com/rabbitmq/rabbitmq-website/tree/main/versioned_docs/version-4.1/reliability.md","tags":[],"version":"4.1","frontMatter":{"title":"Reliability Guide"},"sidebar":"docsSidebar","previous":{"title":"Channels","permalink":"/rabbitmq-website/docs/channels/"},"next":{"title":"Consumer Acknowledgements and Publisher Confirms","permalink":"/rabbitmq-website/docs/confirms"}}');

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanM/MjA0NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbXBvcnQge01EWENvbXBvbmVudHN9IGZyb20gJ21keC90eXBlcy5qcydcbiAqIEBpbXBvcnQge0NvbXBvbmVudCwgUmVhY3RFbGVtZW50LCBSZWFjdE5vZGV9IGZyb20gJ3JlYWN0J1xuICovXG5cbi8qKlxuICogQGNhbGxiYWNrIE1lcmdlQ29tcG9uZW50c1xuICogICBDdXN0b20gbWVyZ2UgZnVuY3Rpb24uXG4gKiBAcGFyYW0ge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSBjdXJyZW50Q29tcG9uZW50c1xuICogICBDdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgY29udGV4dC5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMuXG4gKlxuICogQHR5cGVkZWYgUHJvcHNcbiAqICAgQ29uZmlndXJhdGlvbiBmb3IgYE1EWFByb3ZpZGVyYC5cbiAqIEBwcm9wZXJ0eSB7UmVhY3ROb2RlIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NoaWxkcmVuXVxuICogICBDaGlsZHJlbiAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbiB8IG51bGwgfCB1bmRlZmluZWR9IFtkaXNhYmxlUGFyZW50Q29udGV4dD1mYWxzZV1cbiAqICAgVHVybiBvZmYgb3V0ZXIgY29tcG9uZW50IGNvbnRleHQgKGRlZmF1bHQ6IGBmYWxzZWApLlxuICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuLyoqIEB0eXBlIHtSZWFkb25seTxNRFhDb21wb25lbnRzPn0gKi9cbmNvbnN0IGVtcHR5Q29tcG9uZW50cyA9IHt9XG5cbmNvbnN0IE1EWENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KGVtcHR5Q29tcG9uZW50cylcblxuLyoqXG4gKiBHZXQgY3VycmVudCBjb21wb25lbnRzIGZyb20gdGhlIE1EWCBDb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz4gfCBNZXJnZUNvbXBvbmVudHMgfCBudWxsIHwgdW5kZWZpbmVkfSBbY29tcG9uZW50c11cbiAqICAgQWRkaXRpb25hbCBjb21wb25lbnRzIHRvIHVzZSBvciBhIGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyB0aGVtIChvcHRpb25hbCkuXG4gKiBAcmV0dXJucyB7TURYQ29tcG9uZW50c31cbiAqICAgQ3VycmVudCBjb21wb25lbnRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlTURYQ29tcG9uZW50cyhjb21wb25lbnRzKSB7XG4gIGNvbnN0IGNvbnRleHRDb21wb25lbnRzID0gUmVhY3QudXNlQ29udGV4dChNRFhDb250ZXh0KVxuXG4gIC8vIE1lbW9pemUgdG8gYXZvaWQgdW5uZWNlc3NhcnkgdG9wLWxldmVsIGNvbnRleHQgY2hhbmdlc1xuICByZXR1cm4gUmVhY3QudXNlTWVtbyhcbiAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBDdXN0b20gbWVyZ2UgdmlhIGEgZnVuY3Rpb24gcHJvcFxuICAgICAgaWYgKHR5cGVvZiBjb21wb25lbnRzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBjb21wb25lbnRzKGNvbnRleHRDb21wb25lbnRzKVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gey4uLmNvbnRleHRDb21wb25lbnRzLCAuLi5jb21wb25lbnRzfVxuICAgIH0sXG4gICAgW2NvbnRleHRDb21wb25lbnRzLCBjb21wb25lbnRzXVxuICApXG59XG5cbi8qKlxuICogUHJvdmlkZXIgZm9yIE1EWCBjb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8UHJvcHM+fSBwcm9wZXJ0aWVzXG4gKiAgIFByb3BlcnRpZXMuXG4gKiBAcmV0dXJucyB7UmVhY3RFbGVtZW50fVxuICogICBFbGVtZW50LlxuICogQHNhdGlzZmllcyB7Q29tcG9uZW50fVxuICovXG5leHBvcnQgZnVuY3Rpb24gTURYUHJvdmlkZXIocHJvcGVydGllcykge1xuICAvKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuICBsZXQgYWxsQ29tcG9uZW50c1xuXG4gIGlmIChwcm9wZXJ0aWVzLmRpc2FibGVQYXJlbnRDb250ZXh0KSB7XG4gICAgYWxsQ29tcG9uZW50cyA9XG4gICAgICB0eXBlb2YgcHJvcGVydGllcy5jb21wb25lbnRzID09PSAnZnVuY3Rpb24nXG4gICAgICAgID8gcHJvcGVydGllcy5jb21wb25lbnRzKGVtcHR5Q29tcG9uZW50cylcbiAgICAgICAgOiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgfHwgZW1wdHlDb21wb25lbnRzXG4gIH0gZWxzZSB7XG4gICAgYWxsQ29tcG9uZW50cyA9IHVzZU1EWENvbXBvbmVudHMocHJvcGVydGllcy5jb21wb25lbnRzKVxuICB9XG5cbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgTURYQ29udGV4dC5Qcm92aWRlcixcbiAgICB7dmFsdWU6IGFsbENvbXBvbmVudHN9LFxuICAgIHByb3BlcnRpZXMuY2hpbGRyZW5cbiAgKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ }),

/***/ "./versioned_docs/version-4.1/reliability.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assets: () => (/* binding */ assets),\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   metadata: () => (/* reexport default export from named module */ _site_docusaurus_docusaurus_plugin_content_docs_default_site_versioned_docs_version_4_1_reliability_md_e9b_json__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var _site_docusaurus_docusaurus_plugin_content_docs_default_site_versioned_docs_version_4_1_reliability_md_e9b_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.docusaurus/docusaurus-plugin-content-docs/default/site-versioned-docs-version-4-1-reliability-md-e9b.json\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n\n\nconst frontMatter = {\n\ttitle: 'Reliability Guide'\n};\nconst contentTitle = 'Reliability Guide';\n\nconst assets = {\n\n};\n\n\n\nconst toc = [{\n  \"value\": \"Overview\",\n  \"id\": \"overview\",\n  \"level\": 2\n}, {\n  \"value\": \"What Can Fail?\",\n  \"id\": \"what-can-fail\",\n  \"level\": 2\n}, {\n  \"value\": \"Connection Failures\",\n  \"id\": \"connection-failures\",\n  \"level\": 2\n}, {\n  \"value\": \"Acknowledgements and Confirms\",\n  \"id\": \"confirms\",\n  \"level\": 3\n}, {\n  \"value\": \"Detecting Dead TCP Connections with Heartbeats\",\n  \"id\": \"heartbeats\",\n  \"level\": 2\n}, {\n  \"value\": \"Data Safety on the RabbitMQ Side\",\n  \"id\": \"broker-side\",\n  \"level\": 2\n}, {\n  \"value\": \"Clustering and Queue Content Replication\",\n  \"id\": \"clustering\",\n  \"level\": 2\n}, {\n  \"value\": \"Data Safety on the Publisher Side\",\n  \"id\": \"publisher-side\",\n  \"level\": 2\n}, {\n  \"value\": \"Ensuring that Messages are Routed\",\n  \"id\": \"routing\",\n  \"level\": 3\n}, {\n  \"value\": \"Data Safety on the Consumer Side\",\n  \"id\": \"consumer-side\",\n  \"level\": 2\n}, {\n  \"value\": \"Unprocessable Deliveries\",\n  \"id\": \"unprocessable-deliveries\",\n  \"level\": 3\n}, {\n  \"value\": \"Consumer Cancel Notification\",\n  \"id\": \"cancel-notification\",\n  \"level\": 3\n}, {\n  \"value\": \"Federation and Shovel\",\n  \"id\": \"federation-and-shovel\",\n  \"level\": 2\n}, {\n  \"value\": \"Monitoring and Health Checks\",\n  \"id\": \"monitoring\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.header, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1, {\n        id: \"reliability-guide\",\n        children: \"Reliability Guide\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"overview\",\n      children: \"Overview\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This guides provides an overview features of\\r\\nRabbitMQ and (some) of its supported protocols related to data safety\\r\\nand failure handling.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"They help application developers and operators achieve \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"reliable delivery\"\n      }), \",\\r\\nthat is, to ensure that messages are always delivered, even encountering failures\\r\\nof various kinds.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Data safety is a joint responsibility of RabbitMQ nodes, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./publishers\",\n        children: \"publishers\"\n      }), \"\\r\\nand \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./consumers\",\n        children: \"consumers\"\n      }), \". Therefore, this guide provides an overview of\\r\\ntopics imported to each part of a messaging-based system.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This guide is primarily an overview. Each topic is discussed in more details\\r\\nin its own dedicated guide.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The following guides discuss data safety and resilience topics in more detail:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./confirms\",\n          children: \"Acknowledgements and Confirms\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./clustering\",\n          children: \"Clustering\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./quorum-queues\",\n          children: \"Replicated Queues\"\n        }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./streams\",\n          children: \"Streams\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./publishers\",\n          children: \"Publishers\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./consumers\",\n          children: \"Consumers\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./alarms\",\n          children: \"Resource Alarms\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./monitoring\",\n          children: \"Monitoring, Metrics and Health Checks\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"what-can-fail\",\n      children: \"What Can Fail?\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Messaging-based systems are distributed by definition and can fail in\\r\\ndifferent, and sometimes subtle, ways.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Network connection problems and congestion are probably the most common class of failure.\\r\\nNot only can networks fail, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./heartbeats#tcp-proxies\",\n        children: \"firewalls can interrupt connections\"\n      }), \"\\r\\nthey consider to be idle, and network failures \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./heartbeats\",\n        children: \"take time to detect\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In addition to connectivity failures, the server and client\\r\\napplications can experience hardware failure (or software can crash)\\r\\nat any time. Additionally, even if client applications keep running,\\r\\nlogic errors can cause \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./channels#error-handling\",\n        children: \"channel\"\n      }), \" or \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./connections#error-handling\",\n        children: \"connection errors\"\n      }), \" which force the\\r\\nclient to establish a new channel or connection and recover from the\\r\\nproblem.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This list of failures, of course, is not at all exhaustive. It does not cover more subtle failures\\r\\nsuch as omission failures (failure to respond in a predictable amount of time),\\r\\nperformance degradations, malicious or buggy applications that exhaust the system of resources\\r\\nand so on. Those failures can be detected with \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#monitoring\",\n        children: \"monitoring, metrics and health checks\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"connection-failures\",\n      children: \"Connection Failures\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"In the event of a network connection failure between a client and RabbitMQ node,\\r\\nthe client will need to establish a new connection to the broker. Any channels opened on the\\r\\nprevious connection will have been automatically closed and these will\\r\\nneed re-opening too.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"In general when connections fail, the client will be informed by the\\r\\nconnection throwing an exception (or similar language construct).\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Most client libraries provide a feature that automatically recovers from connection\\r\\nfailures. For cases where this opinionated recovery is not suitable, application\\r\\ndevelopers can implement their own recovery by defining connection failure\\r\\nevent handlers. See client documentation, such as the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/client-libraries/java-api-guide\",\n        children: \"Java\"\n      }), \"\\r\\nand \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/client-libraries/dotnet-api-guide\",\n        children: \".NET client guides\"\n      }), \", to learn more.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"confirms\",\n      children: \"Acknowledgements and Confirms\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"When a connection fails, messages may be in transit between client and\\r\\nserver - they may be in the middle of being decoded or encoded on either side,\\r\\nsit in TCP stack buffers, or be in flight on the wire. In such events\\r\\nmessages in transit will not be delivered — they will\\r\\nneed to be retransmitted. \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./confirms\",\n        children: \"Acknowledgements\"\n      }), \" let the server and\\r\\nclients know when to do this.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Acknowledgements can be used in both directions - to allow a consumer\\r\\nto indicate to the server that it has received and/or processed a delivery\\r\\nand to allow the server to indicate the same thing to the\\r\\npublisher. They are known as consumer acknowledgements and publisher confirms.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"While TCP ensures that packets have been delivered to connection peer, and will\\r\\nretransmit until they are, that only handles failures at the network\\r\\nlayer. Acknowledgements and confirms indicate that messages have been\\r\\nreceived \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"and acted upon\"\n      }), \" by the peer application.\\r\\nAn acknowledgement signals both the receipt of a message, and a transfer of ownership where\\r\\nthe receiver assumes full responsibility for it.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Acknowledgements therefore have semantics. A consuming application\\r\\nshould not acknowledge messages until it has done whatever it needs to\\r\\ndo with them: recorded them in a data store, forwarded them on, or performed\\r\\nany other operation. Once it does so, the broker is free\\r\\nto mark the delivery for deletion.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Similarly, the broker will confirm messages once it has taken\\r\\nresponsibility for them. The details are covered in the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./confirms\",\n        children: \"Acknowledgements and Confirms guide\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Use of acknowledgements guarantees \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"at least once\"\n      }), \"\\r\\ndelivery. Without acknowledgements, message loss is possible\\r\\nduring publish and consume operations and\\r\\nonly \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"at most once\"\n      }), \" delivery is guaranteed.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"heartbeats\",\n      children: \"Detecting Dead TCP Connections with Heartbeats\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In some types of network failure, packet loss can mean that\\r\\ndisrupted TCP connections take a moderately long time (about 11\\r\\nminutes with default configuration on Linux, for example) to be\\r\\ndetected by the operating system. AMQP 0-9-1 offers a\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./heartbeats\",\n        children: \"heartbeat feature\"\n      }), \" to ensure that the application layer\\r\\npromptly finds out about disrupted connections (and also\\r\\ncompletely unresponsive peers). Heartbeats also defend against\\r\\ncertain network equipment which may terminate \\\"idle\\\" TCP\\r\\nconnections. See the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./heartbeats\",\n        children: \"guide on heartbeats\"\n      }), \" for details.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"broker-side\",\n      children: \"Data Safety on the RabbitMQ Side\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"In order to avoid losing messages on the RabbitMQ (as opposed to application) side, queues and messages\\r\\nmust be able to cope with RabbitMQ node restarts, node and hardware failures.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"With some messaging protocols supported by RabbitMQ, applications control \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./queues#durability\",\n        children: \"durability of queues and messages\"\n      }), \".\\r\\nIt's therefore critically important that durable queues (or replicated queue types covered below)\\r\\nare used for important data, and messages are \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./publishers#message-properties\",\n        children: \"published as persistent by publishers\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"clustering\",\n      children: \"Clustering and Queue Content Replication\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./clustering\",\n        children: \"Clusters of nodes\"\n      }), \" offer redundancy and can tolerate failure of a single node.\\r\\nIn a RabbitMQ cluster, all definitions (of exchanges, bindings, users, etc) are replicated across the entire\\r\\ncluster.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./quorum-queues\",\n        children: \"Quorum queues\"\n      }), \", \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./streams\",\n        children: \"streams\"\n      }), \" and superstreams (partitioned streams) are\\r\\nreplicated data structures. One of the nodes hosts a leader replica, others replicas are followers.\\r\\nIn case of leader failure one of the followers is elected to be a new leader. Queue state changes (enqueueing, keeping track\\r\\nof deliveries and acknowledgements) happen on the leader replica, although some operations can be\\r\\nperformed on followers, too.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Queues and streams remain visible and reachable from all nodes regardless\\r\\nof what node their leader replica is located. During a leader re-election, in flight\\r\\nmessage delivery will be paused for quorum queues until a new leader is elected.\\r\\nIn the case of a successful leader election, this happens transparently to clients.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./queues#exclusive-queues\",\n        children: \"Exclusive queues\"\n      }), \" are tied to the lifecycle of their connection and thus are never\\r\\nreplicated and by definition will not survive a node restart.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Consumers connected to the failed node will have to recover as usual. Consumers that were\\r\\nconnected to a different node will be automatically re-registered by RabbitMQ when a new leader replica\\r\\nfor the queue is elected. Those consumers do not need to perform recovery\\r\\n(e.g. reconnect or resubscribe).\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"publisher-side\",\n      children: \"Data Safety on the Publisher Side\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"When using confirms, producers recovering from a channel or connection\\r\\nfailure should retransmit any messages for which an acknowledgement\\r\\nhas not been received from the broker. There is a possibility of\\r\\nmessage duplication here, because the broker might have sent a\\r\\nconfirmation that never reached the producer (due to network failures,\\r\\netc). Therefore consumer applications will need to perform\\r\\ndeduplication or handle incoming messages in an idempotent manner.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"routing\",\n      children: \"Ensuring that Messages are Routed\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"In some circumstances it can be important for producers to ensure that\\r\\ntheir messages are being routed to queues (although not always - in\\r\\nthe case of a pub-sub system producers will just publish and if no\\r\\nconsumers are interested it is correct for messages to be dropped).\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To ensure messages are routed to a single known queue, the producer\\r\\ncan just declare a destination queue and publish directly to it. If\\r\\nmessages may be routed in more complex ways but the producer still\\r\\nneeds to know if they reached at least one queue, it can set the\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"mandatory\"\n      }), \" flag on a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"basic.publish\"\n      }), \", ensuring\\r\\nthat a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"basic.return\"\n      }), \" (containing a reply code and some\\r\\ntextual explanation) will be sent back to the client if no queues were\\r\\nappropriately bound. See the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./publishers\",\n        children: \"Publishers guide\"\n      }), \" for details.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Producers should also be aware that when publishing to a clustered node,\\r\\nif one or more destination queues that are bound to the exchange have\\r\\nmirrors in the cluster, it's possible to incur delays in the face of\\r\\nnetwork failures between nodes, due to flow control between replicas\\r\\nand the queue leader replica. See \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./nettick\",\n        children: \"inter-node heartbeat guide\"\n      }), \" for\\r\\nmore details.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"consumer-side\",\n      children: \"Data Safety on the Consumer Side\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In the event of network failure (or a node failure), messages can be\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./consumers#message-properties\",\n        children: \"redelivered\"\n      }), \", and consumers must be prepared to handle\\r\\ndeliveries they have seen in the past. It is recommended that consumer implementation\\r\\nis designed to be idempotent rather than to explicitly\\r\\nperform deduplication.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"If a message is delivered to a consumer and then requeued, either \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./confirms#automatic-requeueing\",\n        children: \"automatically\"\n      }), \" by\\r\\nRabbitMQ or by the same or different consumer, RabbitMQ will set the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"redelivered\"\n      }), \" flag on\\r\\nit when it is delivered again. This is a hint that a consumer \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"may\"\n      }), \" have seen\\r\\nthis message before. This is not guaranteed as the original delivery might have not made it to any consumers\\r\\ndue to a network or consumer application failure.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"If the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"redelivered\"\n      }), \" flag is not set then it is guaranteed that the message has not been seen\\r\\nbefore. Therefore if a consumer finds it more expensive to deduplicate\\r\\nmessages or process them in an idempotent manner, it can do this only\\r\\nfor messages with the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"redelivered\"\n      }), \" flag set.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"unprocessable-deliveries\",\n      children: \"Unprocessable Deliveries\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"If a consumer determines that it cannot handle a message then it\\r\\ncan reject it using the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"basic.reject\"\n      }), \" or \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"basic.nack\"\n      }), \" method, either asking the server to requeue it,\\r\\nor not (in which case the server might be configured\\r\\nto \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./dlx\",\n        children: \"dead-letter\"\n      }), \" it instead).\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"cancel-notification\",\n      children: \"Consumer Cancel Notification\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"When the queue a consumer was consuming from has been deleted, RabbitMQ will \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./consumer-cancel\",\n        children: \"notify the consumer\"\n      }), \".\\r\\nSuch consumer must take action to recover, whether it is consuming from a different queue or redeclaring\\r\\nthe one it was originally consuming from when this is safe and appropriate.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"federation-and-shovel\",\n      children: \"Federation and Shovel\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"RabbitMQ provides two plugins to assist with distributing nodes over\\r\\nunreliable networks (such as wide-area networks): \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./federation\",\n        children: \"Federation\"\n      }), \" and\\r\\nthe \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./shovel\",\n        children: \"Shovel\"\n      }), \". Both will recover from network failures and retransmit messages when necessary.\\r\\nBoth use confirms and acknowledgements by default.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"When connecting clusters with Federation or the Shovel, it is\\r\\ndesirable to ensure that the federation links and Shovels can recover\\r\\nfrom node failures, including permanent (\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"fail-stop\"\n      }), \") scenarios.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Federation will automatically distribute links across\\r\\nthe downstream cluster and migrate them on failure of a downstream\\r\\nnode. In order to connect to a new upstream when an upstream\\r\\nnode fails, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"multiple upstream URIs\"\n      }), \" must be specified for an upstream,\\r\\nor connection has to happen over a load balancer with sufficient availability characteristics.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Shovels can use multiple source and destination endpoints; first reachable endpoint will be used.\\r\\nA failed Shovel will be restarted after a configurable delay and retry.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"monitoring\",\n      children: \"Monitoring and Health Checks\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Some failure scenarios are subtle and hard to observe or detect. For example, a slow \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./connections\",\n        children: \"connection leak\"\n      }), \"\\r\\ncan build up over time and like a chronic disease, go unnoticed for a period of time. \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./monitoring\",\n        children: \"Monitoring and metrics\"\n      }), \"\\r\\nis the way to detect many types of failures. Longer-term metric data collected using tools such as \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./prometheus\",\n        children: \"Prometheus\"\n      }), \"\\r\\ncan help spot irregularities and problematic patterns in system behaviour.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In addition to monitoring, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./monitoring#health-checks\",\n        children: \"health checks\"\n      }), \" is another tool that can be used to detect\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"point-in-time\"\n      }), \" problems, that is, problems observable at the moment. Extensive health check coverage can result in false positives so more checks is not always better.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Both monitoring and health checks are covered in a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./monitoring\",\n        children: \"dedicated guide\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./versioned_docs/version-4.1/reliability.md\n");

/***/ })

}]);