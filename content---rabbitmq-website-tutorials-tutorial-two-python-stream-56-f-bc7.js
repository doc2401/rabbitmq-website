"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkrabbitmq_website"] = globalThis["webpackChunkrabbitmq_website"] || []).push([["content---rabbitmq-website-tutorials-tutorial-two-python-stream-56-f-bc7"],{

/***/ "./.docusaurus/docusaurus-plugin-content-docs/tutorials/site-tutorials-tutorial-two-python-stream-md-56f.json":
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"id":"tutorial-two-python-stream","title":"RabbitMQ tutorial - Offset Tracking","description":"<!--","source":"@site/tutorials/tutorial-two-python-stream.md","sourceDirName":".","slug":"/tutorial-two-python-stream","permalink":"/rabbitmq-website/tutorials/tutorial-two-python-stream","draft":false,"unlisted":false,"editUrl":"https://github.com/rabbitmq/rabbitmq-website/tree/main/tutorials/tutorial-two-python-stream.md","tags":[],"version":"current","frontMatter":{"title":"RabbitMQ tutorial - Offset Tracking"},"sidebar":"tutorialsSidebar","previous":{"title":"Hello World","permalink":"/rabbitmq-website/tutorials/tutorial-one-python-stream"},"next":{"title":"Hello World","permalink":"/rabbitmq-website/tutorials/tutorial-one-javascript-stream"}}');

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanM/MjA0NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbXBvcnQge01EWENvbXBvbmVudHN9IGZyb20gJ21keC90eXBlcy5qcydcbiAqIEBpbXBvcnQge0NvbXBvbmVudCwgUmVhY3RFbGVtZW50LCBSZWFjdE5vZGV9IGZyb20gJ3JlYWN0J1xuICovXG5cbi8qKlxuICogQGNhbGxiYWNrIE1lcmdlQ29tcG9uZW50c1xuICogICBDdXN0b20gbWVyZ2UgZnVuY3Rpb24uXG4gKiBAcGFyYW0ge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSBjdXJyZW50Q29tcG9uZW50c1xuICogICBDdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgY29udGV4dC5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMuXG4gKlxuICogQHR5cGVkZWYgUHJvcHNcbiAqICAgQ29uZmlndXJhdGlvbiBmb3IgYE1EWFByb3ZpZGVyYC5cbiAqIEBwcm9wZXJ0eSB7UmVhY3ROb2RlIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NoaWxkcmVuXVxuICogICBDaGlsZHJlbiAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbiB8IG51bGwgfCB1bmRlZmluZWR9IFtkaXNhYmxlUGFyZW50Q29udGV4dD1mYWxzZV1cbiAqICAgVHVybiBvZmYgb3V0ZXIgY29tcG9uZW50IGNvbnRleHQgKGRlZmF1bHQ6IGBmYWxzZWApLlxuICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuLyoqIEB0eXBlIHtSZWFkb25seTxNRFhDb21wb25lbnRzPn0gKi9cbmNvbnN0IGVtcHR5Q29tcG9uZW50cyA9IHt9XG5cbmNvbnN0IE1EWENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KGVtcHR5Q29tcG9uZW50cylcblxuLyoqXG4gKiBHZXQgY3VycmVudCBjb21wb25lbnRzIGZyb20gdGhlIE1EWCBDb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz4gfCBNZXJnZUNvbXBvbmVudHMgfCBudWxsIHwgdW5kZWZpbmVkfSBbY29tcG9uZW50c11cbiAqICAgQWRkaXRpb25hbCBjb21wb25lbnRzIHRvIHVzZSBvciBhIGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyB0aGVtIChvcHRpb25hbCkuXG4gKiBAcmV0dXJucyB7TURYQ29tcG9uZW50c31cbiAqICAgQ3VycmVudCBjb21wb25lbnRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlTURYQ29tcG9uZW50cyhjb21wb25lbnRzKSB7XG4gIGNvbnN0IGNvbnRleHRDb21wb25lbnRzID0gUmVhY3QudXNlQ29udGV4dChNRFhDb250ZXh0KVxuXG4gIC8vIE1lbW9pemUgdG8gYXZvaWQgdW5uZWNlc3NhcnkgdG9wLWxldmVsIGNvbnRleHQgY2hhbmdlc1xuICByZXR1cm4gUmVhY3QudXNlTWVtbyhcbiAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBDdXN0b20gbWVyZ2UgdmlhIGEgZnVuY3Rpb24gcHJvcFxuICAgICAgaWYgKHR5cGVvZiBjb21wb25lbnRzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBjb21wb25lbnRzKGNvbnRleHRDb21wb25lbnRzKVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gey4uLmNvbnRleHRDb21wb25lbnRzLCAuLi5jb21wb25lbnRzfVxuICAgIH0sXG4gICAgW2NvbnRleHRDb21wb25lbnRzLCBjb21wb25lbnRzXVxuICApXG59XG5cbi8qKlxuICogUHJvdmlkZXIgZm9yIE1EWCBjb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8UHJvcHM+fSBwcm9wZXJ0aWVzXG4gKiAgIFByb3BlcnRpZXMuXG4gKiBAcmV0dXJucyB7UmVhY3RFbGVtZW50fVxuICogICBFbGVtZW50LlxuICogQHNhdGlzZmllcyB7Q29tcG9uZW50fVxuICovXG5leHBvcnQgZnVuY3Rpb24gTURYUHJvdmlkZXIocHJvcGVydGllcykge1xuICAvKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuICBsZXQgYWxsQ29tcG9uZW50c1xuXG4gIGlmIChwcm9wZXJ0aWVzLmRpc2FibGVQYXJlbnRDb250ZXh0KSB7XG4gICAgYWxsQ29tcG9uZW50cyA9XG4gICAgICB0eXBlb2YgcHJvcGVydGllcy5jb21wb25lbnRzID09PSAnZnVuY3Rpb24nXG4gICAgICAgID8gcHJvcGVydGllcy5jb21wb25lbnRzKGVtcHR5Q29tcG9uZW50cylcbiAgICAgICAgOiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgfHwgZW1wdHlDb21wb25lbnRzXG4gIH0gZWxzZSB7XG4gICAgYWxsQ29tcG9uZW50cyA9IHVzZU1EWENvbXBvbmVudHMocHJvcGVydGllcy5jb21wb25lbnRzKVxuICB9XG5cbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgTURYQ29udGV4dC5Qcm92aWRlcixcbiAgICB7dmFsdWU6IGFsbENvbXBvbmVudHN9LFxuICAgIHByb3BlcnRpZXMuY2hpbGRyZW5cbiAgKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ }),

/***/ "./src/components/Tutorials/TutorialsStreamHelp.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [{\n  \"value\": \"Prerequisites\",\n  \"id\": \"prerequisites\",\n  \"level\": 3\n}, {\n  \"value\": \"Using docker\",\n  \"id\": \"using-docker\",\n  \"level\": 3\n}, {\n  \"value\": \"Where to get help\",\n  \"id\": \"where-to-get-help\",\n  \"level\": 3\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    admonition: \"admonition\",\n    code: \"code\",\n    h3: \"h3\",\n    p: \"p\",\n    pre: \"pre\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_components.admonition, {\n    type: \"info\",\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.h3, {\n      id: \"prerequisites\",\n      children: \"Prerequisites\"\n    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_components.p, {\n      children: [\"This tutorial assumes RabbitMQ is \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.a, {\n        href: \"/docs/download\",\n        children: \"installed\"\n      }), \", running on\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.code, {\n        children: \"localhost\"\n      }), \" and the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.a, {\n        href: \"/docs/stream#enabling-plugin\",\n        children: \"stream plugin\"\n      }), \"  enabled.\\r\\nThe \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.a, {\n        href: \"/docs/networking#ports\",\n        children: \"standard stream port\"\n      }), \" is 5552. In case you\\r\\nuse a different host, port or credentials, connections settings would require\\r\\nadjusting.\"]\n    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.h3, {\n      id: \"using-docker\",\n      children: \"Using docker\"\n    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n      children: \"If you don't have RabbitMQ installed, you can run it in a Docker container:\"\n    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"docker run -it --rm --name rabbitmq -p 5552:5552 -p 15672:15672 -p 5672:5672  \\\\\\r\\n    -e RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS='-rabbitmq_stream advertised_host localhost' \\\\\\r\\n    rabbitmq:4-management\\n\"\n      })\n    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.p, {\n      children: \"wait for the server to start and then enable the stream and stream management plugins:\"\n    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"docker exec rabbitmq rabbitmq-plugins enable rabbitmq_stream rabbitmq_stream_management \\n\"\n      })\n    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.h3, {\n      id: \"where-to-get-help\",\n      children: \"Where to get help\"\n    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_components.p, {\n      children: [\"If you're having trouble going through this tutorial you can contact us\\r\\nthrough the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.a, {\n        href: \"https://groups.google.com/forum/#!forum/rabbitmq-users\",\n        children: \"mailing\\r\\nlist\"\n      }), \" or \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.a, {\n        href: \"https://www.rabbitmq.com/discord\",\n        children: \"discord community server\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9UdXRvcmlhbHMvVHV0b3JpYWxzU3RyZWFtSGVscC5tZCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFiYml0bXEtd2Vic2l0ZS8uL3NyYy9jb21wb25lbnRzL1R1dG9yaWFscy9UdXRvcmlhbHNTdHJlYW1IZWxwLm1kP2FhZmYiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cbmV4cG9ydCBjb25zdCBmcm9udE1hdHRlciA9IHt9O1xuZXhwb3J0IGNvbnN0IGNvbnRlbnRUaXRsZSA9IHVuZGVmaW5lZDtcblxuXG5cbmltcG9ydCB7anN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHN9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuaW1wb3J0IHt1c2VNRFhDb21wb25lbnRzIGFzIF9wcm92aWRlQ29tcG9uZW50c30gZnJvbSBcIkBtZHgtanMvcmVhY3RcIjtcbmV4cG9ydCBjb25zdCB0b2MgPSBbe1xuICBcInZhbHVlXCI6IFwiUHJlcmVxdWlzaXRlc1wiLFxuICBcImlkXCI6IFwicHJlcmVxdWlzaXRlc1wiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIlVzaW5nIGRvY2tlclwiLFxuICBcImlkXCI6IFwidXNpbmctZG9ja2VyXCIsXG4gIFwibGV2ZWxcIjogM1xufSwge1xuICBcInZhbHVlXCI6IFwiV2hlcmUgdG8gZ2V0IGhlbHBcIixcbiAgXCJpZFwiOiBcIndoZXJlLXRvLWdldC1oZWxwXCIsXG4gIFwibGV2ZWxcIjogM1xufV07XG5mdW5jdGlvbiBfY3JlYXRlTWR4Q29udGVudChwcm9wcykge1xuICBjb25zdCBfY29tcG9uZW50cyA9IHtcbiAgICBhOiBcImFcIixcbiAgICBhZG1vbml0aW9uOiBcImFkbW9uaXRpb25cIixcbiAgICBjb2RlOiBcImNvZGVcIixcbiAgICBoMzogXCJoM1wiLFxuICAgIHA6IFwicFwiLFxuICAgIHByZTogXCJwcmVcIixcbiAgICAuLi5fcHJvdmlkZUNvbXBvbmVudHMoKSxcbiAgICAuLi5wcm9wcy5jb21wb25lbnRzXG4gIH07XG4gIHJldHVybiBfanN4cyhfY29tcG9uZW50cy5hZG1vbml0aW9uLCB7XG4gICAgdHlwZTogXCJpbmZvXCIsXG4gICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmgzLCB7XG4gICAgICBpZDogXCJwcmVyZXF1aXNpdGVzXCIsXG4gICAgICBjaGlsZHJlbjogXCJQcmVyZXF1aXNpdGVzXCJcbiAgICB9KSwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlRoaXMgdHV0b3JpYWwgYXNzdW1lcyBSYWJiaXRNUSBpcyBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiL2RvY3MvZG93bmxvYWRcIixcbiAgICAgICAgY2hpbGRyZW46IFwiaW5zdGFsbGVkXCJcbiAgICAgIH0pLCBcIiwgcnVubmluZyBvblxcclxcblwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwibG9jYWxob3N0XCJcbiAgICAgIH0pLCBcIiBhbmQgdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIvZG9jcy9zdHJlYW0jZW5hYmxpbmctcGx1Z2luXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInN0cmVhbSBwbHVnaW5cIlxuICAgICAgfSksIFwiICBlbmFibGVkLlxcclxcblRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiL2RvY3MvbmV0d29ya2luZyNwb3J0c1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJzdGFuZGFyZCBzdHJlYW0gcG9ydFwiXG4gICAgICB9KSwgXCIgaXMgNTU1Mi4gSW4gY2FzZSB5b3VcXHJcXG51c2UgYSBkaWZmZXJlbnQgaG9zdCwgcG9ydCBvciBjcmVkZW50aWFscywgY29ubmVjdGlvbnMgc2V0dGluZ3Mgd291bGQgcmVxdWlyZVxcclxcbmFkanVzdGluZy5cIl1cbiAgICB9KSwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwidXNpbmctZG9ja2VyXCIsXG4gICAgICBjaGlsZHJlbjogXCJVc2luZyBkb2NrZXJcIlxuICAgIH0pLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIklmIHlvdSBkb24ndCBoYXZlIFJhYmJpdE1RIGluc3RhbGxlZCwgeW91IGNhbiBydW4gaXQgaW4gYSBEb2NrZXIgY29udGFpbmVyOlwiXG4gICAgfSksIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1iYXNoXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImRvY2tlciBydW4gLWl0IC0tcm0gLS1uYW1lIHJhYmJpdG1xIC1wIDU1NTI6NTU1MiAtcCAxNTY3MjoxNTY3MiAtcCA1NjcyOjU2NzIgIFxcXFxcXHJcXG4gICAgLWUgUkFCQklUTVFfU0VSVkVSX0FERElUSU9OQUxfRVJMX0FSR1M9Jy1yYWJiaXRtcV9zdHJlYW0gYWR2ZXJ0aXNlZF9ob3N0IGxvY2FsaG9zdCcgXFxcXFxcclxcbiAgICByYWJiaXRtcTo0LW1hbmFnZW1lbnRcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJ3YWl0IGZvciB0aGUgc2VydmVyIHRvIHN0YXJ0IGFuZCB0aGVuIGVuYWJsZSB0aGUgc3RyZWFtIGFuZCBzdHJlYW0gbWFuYWdlbWVudCBwbHVnaW5zOlwiXG4gICAgfSksIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1iYXNoXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImRvY2tlciBleGVjIHJhYmJpdG1xIHJhYmJpdG1xLXBsdWdpbnMgZW5hYmxlIHJhYmJpdG1xX3N0cmVhbSByYWJiaXRtcV9zdHJlYW1fbWFuYWdlbWVudCBcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwid2hlcmUtdG8tZ2V0LWhlbHBcIixcbiAgICAgIGNoaWxkcmVuOiBcIldoZXJlIHRvIGdldCBoZWxwXCJcbiAgICB9KSwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIklmIHlvdSdyZSBoYXZpbmcgdHJvdWJsZSBnb2luZyB0aHJvdWdoIHRoaXMgdHV0b3JpYWwgeW91IGNhbiBjb250YWN0IHVzXFxyXFxudGhyb3VnaCB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcImh0dHBzOi8vZ3JvdXBzLmdvb2dsZS5jb20vZm9ydW0vIyFmb3J1bS9yYWJiaXRtcS11c2Vyc1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJtYWlsaW5nXFxyXFxubGlzdFwiXG4gICAgICB9KSwgXCIgb3IgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcImh0dHBzOi8vd3d3LnJhYmJpdG1xLmNvbS9kaXNjb3JkXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImRpc2NvcmQgY29tbXVuaXR5IHNlcnZlclwiXG4gICAgICB9KSwgXCIuXCJdXG4gICAgfSldXG4gIH0pO1xufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudChwcm9wcyA9IHt9KSB7XG4gIGNvbnN0IHt3cmFwcGVyOiBNRFhMYXlvdXR9ID0ge1xuICAgIC4uLl9wcm92aWRlQ29tcG9uZW50cygpLFxuICAgIC4uLnByb3BzLmNvbXBvbmVudHNcbiAgfTtcbiAgcmV0dXJuIE1EWExheW91dCA/IF9qc3goTURYTGF5b3V0LCB7XG4gICAgLi4ucHJvcHMsXG4gICAgY2hpbGRyZW46IF9qc3goX2NyZWF0ZU1keENvbnRlbnQsIHtcbiAgICAgIC4uLnByb3BzXG4gICAgfSlcbiAgfSkgOiBfY3JlYXRlTWR4Q29udGVudChwcm9wcyk7XG59XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/Tutorials/TutorialsStreamHelp.md\n");

/***/ }),

/***/ "./src/components/Tutorials/TutorialsStreamIntro.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    p: \"p\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_components.p, {\n    children: [\"RabbitMQ Streams was introduced in RabbitMQ 3.9.\\r\\nMore information is available \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.a, {\n      href: \"/docs/streams\",\n      children: \"here\"\n    }), \".\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9UdXRvcmlhbHMvVHV0b3JpYWxzU3RyZWFtSW50cm8ubWQiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWJiaXRtcS13ZWJzaXRlLy4vc3JjL2NvbXBvbmVudHMvVHV0b3JpYWxzL1R1dG9yaWFsc1N0cmVhbUludHJvLm1kPzJjNjIiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cbmV4cG9ydCBjb25zdCBmcm9udE1hdHRlciA9IHt9O1xuZXhwb3J0IGNvbnN0IGNvbnRlbnRUaXRsZSA9IHVuZGVmaW5lZDtcblxuXG5cbmltcG9ydCB7anN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHN9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuaW1wb3J0IHt1c2VNRFhDb21wb25lbnRzIGFzIF9wcm92aWRlQ29tcG9uZW50c30gZnJvbSBcIkBtZHgtanMvcmVhY3RcIjtcbmV4cG9ydCBjb25zdCB0b2MgPSBbXTtcbmZ1bmN0aW9uIF9jcmVhdGVNZHhDb250ZW50KHByb3BzKSB7XG4gIGNvbnN0IF9jb21wb25lbnRzID0ge1xuICAgIGE6IFwiYVwiLFxuICAgIHA6IFwicFwiLFxuICAgIC4uLl9wcm92aWRlQ29tcG9uZW50cygpLFxuICAgIC4uLnByb3BzLmNvbXBvbmVudHNcbiAgfTtcbiAgcmV0dXJuIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICBjaGlsZHJlbjogW1wiUmFiYml0TVEgU3RyZWFtcyB3YXMgaW50cm9kdWNlZCBpbiBSYWJiaXRNUSAzLjkuXFxyXFxuTW9yZSBpbmZvcm1hdGlvbiBpcyBhdmFpbGFibGUgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgaHJlZjogXCIvZG9jcy9zdHJlYW1zXCIsXG4gICAgICBjaGlsZHJlbjogXCJoZXJlXCJcbiAgICB9KSwgXCIuXCJdXG4gIH0pO1xufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudChwcm9wcyA9IHt9KSB7XG4gIGNvbnN0IHt3cmFwcGVyOiBNRFhMYXlvdXR9ID0ge1xuICAgIC4uLl9wcm92aWRlQ29tcG9uZW50cygpLFxuICAgIC4uLnByb3BzLmNvbXBvbmVudHNcbiAgfTtcbiAgcmV0dXJuIE1EWExheW91dCA/IF9qc3goTURYTGF5b3V0LCB7XG4gICAgLi4ucHJvcHMsXG4gICAgY2hpbGRyZW46IF9qc3goX2NyZWF0ZU1keENvbnRlbnQsIHtcbiAgICAgIC4uLnByb3BzXG4gICAgfSlcbiAgfSkgOiBfY3JlYXRlTWR4Q29udGVudChwcm9wcyk7XG59XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/Tutorials/TutorialsStreamIntro.md\n");

/***/ }),

/***/ "./tutorials/tutorial-two-python-stream.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assets: () => (/* binding */ assets),\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   metadata: () => (/* reexport default export from named module */ _site_docusaurus_docusaurus_plugin_content_docs_tutorials_site_tutorials_tutorial_two_python_stream_md_56f_json__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var _site_docusaurus_docusaurus_plugin_content_docs_tutorials_site_tutorials_tutorial_two_python_stream_md_56f_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.docusaurus/docusaurus-plugin-content-docs/tutorials/site-tutorials-tutorial-two-python-stream-md-56f.json\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n/* harmony import */ var _site_src_components_Tutorials_TutorialsStreamHelp_md__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./src/components/Tutorials/TutorialsStreamHelp.md\");\n/* harmony import */ var _site_src_components_Tutorials_TutorialsStreamIntro_md__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./src/components/Tutorials/TutorialsStreamIntro.md\");\n\n\nconst frontMatter = {\n\ttitle: 'RabbitMQ tutorial - Offset Tracking'\n};\nconst contentTitle = 'RabbitMQ Stream tutorial - Offset Tracking';\n\nconst assets = {\n\n};\n\n\n\n\n\nconst toc = [{\n  \"value\": \"Introduction\",\n  \"id\": \"introduction\",\n  \"level\": 2\n}, ..._site_src_components_Tutorials_TutorialsStreamHelp_md__WEBPACK_IMPORTED_MODULE_2__.toc, ..._site_src_components_Tutorials_TutorialsStreamIntro_md__WEBPACK_IMPORTED_MODULE_3__.toc, {\n  \"value\": \"Offset Tracking\",\n  \"id\": \"offset-tracking\",\n  \"level\": 2\n}, {\n  \"value\": \"Setup\",\n  \"id\": \"setup\",\n  \"level\": 3\n}, {\n  \"value\": \"Sending\",\n  \"id\": \"sending\",\n  \"level\": 3\n}, {\n  \"value\": \"Receiving\",\n  \"id\": \"receiving\",\n  \"level\": 3\n}, {\n  \"value\": \"Exploring the Stream\",\n  \"id\": \"exploring-the-stream\",\n  \"level\": 3\n}, {\n  \"value\": \"Server-Side Offset Tracking\",\n  \"id\": \"server-side-offset-tracking\",\n  \"level\": 3\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    admonition: \"admonition\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.header, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1, {\n        id: \"rabbitmq-stream-tutorial---offset-tracking\",\n        children: \"RabbitMQ Stream tutorial - Offset Tracking\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"introduction\",\n      children: \"Introduction\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_site_src_components_Tutorials_TutorialsStreamHelp_md__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {}), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_site_src_components_Tutorials_TutorialsStreamIntro_md__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {}), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"offset-tracking\",\n      children: \"Offset Tracking\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"setup\",\n      children: \"Setup\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This part of the tutorial consists in writing two programs in Python; a producer that sends a wave of messages with a marker message at the end, and a consumer that receives messages and stops when it gets the marker message.\\r\\nIt shows how a consumer can navigate through a stream and can even restart where it left off in a previous execution.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This tutorial uses the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/qweeze/rstream\",\n        children: \"rstream Python client\"\n      }), \".\\r\\nMake sure to follow \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/tutorials/tutorial-one-python-stream#setup\",\n        children: \"the setup steps\"\n      }), \" from the first tutorial.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"An executable version of this tutorial can be found in the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/rabbitmq-tutorials/blob/main/python-stream/\",\n        children: \"RabbitMQ tutorials repository\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Please note that the executable version is already implementing the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#server-side-offset-tracking\",\n        children: \"Server-Side Offset Tracking\"\n      }), \" feature explained at the end of this tutorial, and this needs to be take in account when testing this scenario.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The sending program is called \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"offset_tracking_send.py\"\n      }), \" and the receiving program is called \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"offset_tracking_receive.py\"\n      }), \".\\r\\nThe tutorial focuses on the usage of the client library, so the final code in the repository should be used to create the scaffolding of the files (e.g. imports, main functions, etc).\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"sending\",\n      children: \"Sending\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The sending program creates a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Producer\"\n      }), \" instance and publishes 100 messages.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The body value of the last message is set to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"marker\"\n      }), \"; this is a marker for the consumer to stop consuming.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The program deals with message confirmations thanks to the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"_on_publish_confirm_client\"\n      }), \" callback.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Note the use of a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"asyncio.Condition\"\n      }), \": The main routine is waiting on it until all the messages get confirmed in the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"_on_publish_confirm_client\"\n      }), \" callback which then notifies the main routine.\\r\\nThis ensures the broker received all the messages before closing the program.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-python\",\n        children: \"STREAM = \\\"stream-offset-tracking-python\\\"\\r\\nMESSAGES = 100\\r\\n# 2GB\\r\\nSTREAM_RETENTION = 2000000000\\r\\nconfirmed_messages = 0\\r\\nall_confirmed_messages_cond = asyncio.Condition()\\r\\n\\r\\nasync def _on_publish_confirm_client(confirmation: ConfirmationStatus) -> None:\\r\\n    global confirmed_messages\\r\\n    if confirmation.is_confirmed:\\r\\n        confirmed_messages = confirmed_messages + 1\\r\\n        if confirmed_messages == 100:\\r\\n            async with all_confirmed_messages_cond:\\r\\n                all_confirmed_messages_cond.notify()\\r\\n\\r\\nasync def publish():\\r\\n    async with Producer(\\\"localhost\\\", username=\\\"guest\\\", password=\\\"guest\\\") as producer:\\r\\n        # create a stream if it doesn't already exist\\r\\n        await producer.create_stream(\\r\\n            STREAM, exists_ok=True, arguments={\\\"max-length-bytes\\\": STREAM_RETENTION}\\r\\n        )\\r\\n\\r\\n        print(\\\"Publishing {} messages\\\".format(MESSAGES))\\r\\n        # Send 99 hello message\\r\\n        for i in range(MESSAGES - 1):\\r\\n            amqp_message = AMQPMessage(\\r\\n                body=bytes(\\\"hello: {}\\\".format(i), \\\"utf-8\\\"),\\r\\n            )\\r\\n\\r\\n            await producer.send(\\r\\n                stream=STREAM,\\r\\n                message=amqp_message,\\r\\n                on_publish_confirm=_on_publish_confirm_client,\\r\\n            )\\r\\n        # Send a final marker message\\r\\n        amqp_message = AMQPMessage(\\r\\n            body=bytes(\\\"marker: {}\\\".format(i + 1), \\\"utf-8\\\"),\\r\\n        )\\r\\n\\r\\n        await producer.send(\\r\\n            stream=STREAM,\\r\\n            message=amqp_message,\\r\\n            on_publish_confirm=_on_publish_confirm_client,\\r\\n        )\\r\\n\\r\\n        async with all_confirmed_messages_cond:\\r\\n            await all_confirmed_messages_cond.wait()\\r\\n\\r\\n        print(\\\"Messages confirmed.\\\")\\r\\n\\r\\n\\r\\nasyncio.run(publish())\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Let's now create the receiving program.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"receiving\",\n      children: \"Receiving\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The receiving program starts a consumer that attaches at the beginning of the stream \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"ConsumerOffsetSpecification(OffsetType.FIRST)\"\n      }), \".\\r\\nIt uses two variables: \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"first_offset\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"last_offset\"\n      }), \" to output the offsets of the first and last received messages at the end of the program.\\r\\nThe \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"on_message\"\n      }), \" callback handles incoming messages.\\r\\nThe consumer stops when it receives the marker message: it assigns the message offset to a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"last_offset\"\n      }), \" variable and closes the consumer.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-python\",\n        children: \"message_count = -1\\r\\nfirst_offset = -1\\r\\nlast_offset = -1\\r\\nSTREAM_NAME = \\\"stream-offset-tracking-python\\\"\\r\\n# 2GB\\r\\nSTREAM_RETENTION = 2000000000\\r\\n\\r\\nasync def on_message(msg: AMQPMessage, message_context: MessageContext):\\r\\n    global first_offset\\r\\n    global last_offset\\r\\n\\r\\n    offset = message_context.offset\\r\\n    if first_offset == -1:\\r\\n        print(\\\"First message received\\\")\\r\\n        first_offset = offset\\r\\n\\r\\n    consumer = message_context.consumer\\r\\n    stream = message_context.consumer.get_stream(message_context.subscriber_name)\\r\\n\\r\\n    if \\\"marker\\\" in str(msg):\\r\\n        last_offset = offset\\r\\n        await consumer.close()\\r\\n\\r\\nasync def consume():\\r\\n\\r\\n    global first_offset\\r\\n    global last_offset\\r\\n\\r\\n    consumer = Consumer(\\r\\n        host=\\\"localhost\\\",\\r\\n        port=5552,\\r\\n        username=\\\"guest\\\",\\r\\n        password=\\\"guest\\\",\\r\\n    )\\r\\n\\r\\n    await consumer.create_stream(\\r\\n        STREAM_NAME, exists_ok=True, arguments={\\\"max-length-bytes\\\": STREAM_RETENTION}\\r\\n    )\\r\\n\\r\\n    try:\\r\\n        await consumer.start()\\r\\n        print(\\\"Starting consuming Press control +C to close\\\")\\r\\n\\r\\n        await consumer.subscribe(\\r\\n            stream=STREAM_NAME,\\r\\n            callback=on_message,\\r\\n            decoder=amqp_decoder,\\r\\n            offset_specification=ConsumerOffsetSpecification(\\r\\n                OffsetType.FIRST\\r\\n            ),\\r\\n        )\\r\\n        await consumer.run()\\r\\n\\r\\n    except (KeyboardInterrupt, asyncio.exceptions.CancelledError):\\r\\n        await consumer.close()\\r\\n\\r\\n    # give time to the consumer task to close the consumer\\r\\n    await asyncio.sleep(1)\\r\\n\\r\\n    if first_offset != -1:\\r\\n        print(\\r\\n            \\\"Done consuming first_offset: {} last_offset {} \\\".format(\\r\\n                first_offset, last_offset\\r\\n            )\\r\\n        )\\r\\n\\r\\n\\r\\nwith asyncio.Runner() as runner:\\r\\n    runner.run(consume())\\r\\n\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"exploring-the-stream\",\n      children: \"Exploring the Stream\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"In order to run both examples, open two terminal (shell) tabs.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"In the first tab, run the sender to publish a wave of messages:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-shell\",\n        children: \" python3 offset_tracking_send.py\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The output is the following:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-shell\",\n        children: \"Publishing 100 messages...\\r\\nMessages confirmed: true.\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Let's run now the receiver.\\r\\nOpen a new tab.\\r\\nRemember it should start from the beginning of the stream because of the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"FIRST\"\n      }), \" offset specification.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-shell\",\n        children: \" python3 offset_tracking_receive.py\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Here is the output:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-shell\",\n        children: \"Started consuming: Press control +C to close\\r\\nFirst message received.\\r\\nDone consuming, first offset 0, last offset 99.\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.admonition, {\n      title: \"What is an offset?\",\n      type: \"note\",\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: \"A stream can be seen as an array where elements are messages.\\r\\nThe offset is the index of a given message in the array.\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"A stream is different from a queue: consumers can read and re-read the same messages and the messages stay in the stream.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Let's try this feature by using the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"ConsumerOffsetSpecification(OffsetType.OFFSET, long)\"\n      }), \" specification to attach at a given offset different from 0.\\r\\nSet the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"ConsumerOffsetSpecification\"\n      }), \" variable in the subscribe method of the consumer from:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-python\",\n        children: \"offset_specification=ConsumerOffsetSpecification(\\r\\n    OffsetType.FIRST\\r\\n),\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"to:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-python\",\n        children: \"offset_specification = ConsumerOffsetSpecification(\\r\\n    OffsetType.OFFSET, 42\\r\\n)\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Offset 42 is arbitrary, it could have been any number between 0 and 99.\\r\\nRun the receiver again:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-shell\",\n        children: \" python3 offset_tracking_receive.py\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The output is the following:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-shell\",\n        children: \"Started consuming: Press control +C to close\\r\\nFirst message received.\\r\\nDone consuming, first offset 42, last offset 99.\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"There is also a way to attach at the very end of stream to see only new messages at the time of the consumer creation.\\r\\nThis is the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"ConsumerOffsetSpecification(OffsetType.NEXT)\"\n      }), \" offset specification.\\r\\nLet's try it:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-python\",\n        children: \"offset_specification = ConsumerOffsetSpecification(\\r\\n    OffsetType.NEXT)\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Run the receiver:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-shell\",\n        children: \" python3 offset_tracking_receive.py\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This time the consumer does not get any messages:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-shell\",\n        children: \"Started consuming: Press control +C to close\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"It is waiting for new messages in the stream.\\r\\nLet's publish some by running the sender again.\\r\\nBack to the first tab:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-shell\",\n        children: \" python3 offset_tracking_send.py\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Wait for the program to exit and switch back to the receiver tab.\\r\\nThe consumer received the new messages:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-shell\",\n        children: \"Started consuming: Press control +C to close\\r\\nFirst message received.\\r\\nDone consuming, first offset 100, last offset 199.\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The receiver stopped because of the new marker message the sender put at the end of the stream.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This section showed how to \\\"browse\\\" a stream: from the beginning, from any offset, even for new messages.\\r\\nThe next section covers how to leverage server-side offset tracking to resume where a consumer left off in a previous execution.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"server-side-offset-tracking\",\n      children: \"Server-Side Offset Tracking\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"RabbitMQ Streams provide server-side offset tracking to store the progress of a given consumer in a stream.\\r\\nIf the consumer were to stop for any reason (crash, upgrade, etc), it would be able to re-attach where it stopped previously to avoid processing the same messages.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"RabbitMQ Streams provides an API for offset tracking, but it is possible to use other solutions to store the progress of consuming applications.\\r\\nIt may depend on the use case, but a relational database can be a good solution as well.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Let's modify the receiver to store the offset of processed messages.\\r\\nThe updated lines are outlined with comments:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-python\",\n        children: \"async def on_message(msg: AMQPMessage, message_context: MessageContext):\\r\\n    # variable to keep track of the number of received messages\\r\\n    global message_count\\r\\n    global first_offset\\r\\n    global last_offset\\r\\n\\r\\n    offset = message_context.offset\\r\\n    if first_offset == -1:\\r\\n        print(\\\"First message received\\\")\\r\\n        first_offset = offset\\r\\n\\r\\n    consumer = message_context.consumer\\r\\n    stream = message_context.consumer.get_stream(message_context.subscriber_name)\\r\\n\\r\\n    # store the offset after every 10 messages received\\r\\n    message_count = message_count + 1\\r\\n\\r\\n    if message_count % 10 == 0:\\r\\n        # store_message needs to take a subscriber_name parameter\\r\\n        await consumer.store_offset(\\r\\n            stream=stream,\\r\\n            offset=offset,\\r\\n            subscriber_name=message_context.subscriber_name,\\r\\n        )\\r\\n\\r\\n    # store the offset after receiving the marker message\\r\\n    if \\\"marker\\\" in str(msg):\\r\\n        await consumer.store_offset(\\r\\n            stream=stream,\\r\\n            offset=offset,\\r\\n            subscriber_name=message_context.subscriber_name,\\r\\n        )\\r\\n        last_offset = offset\\r\\n        await consumer.close()\\r\\n\\r\\nasync def consume():\\r\\n    # the offset to start consuming from\\r\\n    stored_offset = -1\\r\\n    global first_offset\\r\\n    global last_offset\\r\\n\\r\\n    # start a consumer and creates the stream is not exist (same as before...)\\r\\n\\r\\n    try:\\r\\n        await consumer.start()\\r\\n        print(\\\"Started consuming: Press control +C to close\\\")\\r\\n        try:\\r\\n            # query_offset must take a subscriber_name as parameter\\r\\n            stored_offset = await consumer.query_offset(\\r\\n                stream=STREAM_NAME, subscriber_name=\\\"subscriber_1\\\"\\r\\n            )\\r\\n        except OffsetNotFound as offset_exception:\\r\\n            print(f\\\"Offset not previously stored. {offset_exception}\\\")\\r\\n\\r\\n        except ServerError as server_error:\\r\\n            print(f\\\"Server error: {server_error}\\\")\\r\\n            exit(1)\\r\\n\\r\\n        # if no offset was previously stored start from the first offset\\r\\n        stored_offset = stored_offset + 1\\r\\n        await consumer.subscribe(\\r\\n            stream=STREAM_NAME,\\r\\n             # We explicitely need to assign a name to the consumer\\r\\n            subscriber_name=\\\"subscriber_1\\\",       \\r\\n            callback=on_message,\\r\\n            decoder=amqp_decoder,\\r\\n            offset_specification=ConsumerOffsetSpecification(\\r\\n                OffsetType.OFFSET, stored_offset\\r\\n            ),\\r\\n        )\\r\\n        await consumer.run()\\r\\n\\r\\n    except (KeyboardInterrupt, asyncio.exceptions.CancelledError):\\r\\n        await consumer.close()\\r\\n\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The most relevant changes are:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"The consumer must have a name.\\r\\nIt is the key to store and retrieve the last stored offset value.\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"The offset is stored every 10 messages.\\r\\nThis is an unusually low value for offset storage frequency, but this is OK for this tutorial.\\r\\nValues in the real world are rather in the hundreds or in the thousands.\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"The offset is stored before closing the consumer, just after getting the marker message.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Let's run the receiver:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-shell\",\n        children: \" python3 offset_tracking_receive.py\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Here is the output:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-shell\",\n        children: \"Started consuming: Press control +C to close\\r\\nFirst message received.\\r\\nDone consuming, first offset 0, last offset 99.\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"There is nothing surprising there: the consumer got the messages from the beginning of the stream and stopped when it reached the marker message.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Let's start it another time:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-shell\",\n        children: \" python3 offset_tracking_receive.py\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Here is the output:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-shell\",\n        children: \"Started consuming...\\r\\nFirst message received.\\r\\nDone consuming, first offset 100, last offset 199.\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The consumer restarted exactly where it left off: the last offset in the first run was 99 and the first offset in this second run is 100.\\r\\nThe consumer stored offset tracking information in the first run, so the client library uses it to resume consuming at the right position in the second run.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This concludes this tutorial on consuming semantics in RabbitMQ Streams.\\r\\nIt covered how a consumer can attach anywhere in a stream.\\r\\nConsuming applications are likely to keep track of the point they reached in a stream.\\r\\nThey can use the built-in server-side offset tracking feature as demonstrated in this tutorial.\\r\\nThey are also free to use any other data store solution for this task.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"See the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://www.rabbitmq.com/blog/2021/09/13/rabbitmq-streams-offset-tracking\",\n        children: \"RabbitMQ blog\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/qweeze/rstream?tab=readme-ov-file#server-side-offset-tracking\",\n        children: \"rstream documentation\"\n      }), \" for more information on offset tracking.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./tutorials/tutorial-two-python-stream.md\n");

/***/ })

}]);