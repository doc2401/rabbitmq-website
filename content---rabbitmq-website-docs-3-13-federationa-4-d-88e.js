"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkrabbitmq_website"] = globalThis["webpackChunkrabbitmq_website"] || []).push([["content---rabbitmq-website-docs-3-13-federationa-4-d-88e"],{

/***/ "./.docusaurus/docusaurus-plugin-content-docs/default/site-versioned-docs-version-3-13-federation-md-a4d.json":
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"id":"federation","title":"Federation Plugin","description":"<!--","source":"@site/versioned_docs/version-3.13/federation.md","sourceDirName":".","slug":"/federation","permalink":"/rabbitmq-website/docs/3.13/federation","draft":false,"unlisted":false,"editUrl":"https://github.com/rabbitmq/rabbitmq-website/tree/main/versioned_docs/version-3.13/federation.md","tags":[],"version":"3.13","frontMatter":{"title":"Federation Plugin"},"sidebar":"docsSidebar","previous":{"title":"Management Plugin","permalink":"/rabbitmq-website/docs/3.13/management/"},"next":{"title":"Federated Exchanges","permalink":"/rabbitmq-website/docs/3.13/federated-exchanges/"}}');

/***/ }),

/***/ "./versioned_docs/version-3.13/federation.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assets: () => (/* binding */ assets),\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   metadata: () => (/* reexport default export from named module */ _site_docusaurus_docusaurus_plugin_content_docs_default_site_versioned_docs_version_3_13_federation_md_a4d_json__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var _site_docusaurus_docusaurus_plugin_content_docs_default_site_versioned_docs_version_3_13_federation_md_a4d_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.docusaurus/docusaurus-plugin-content-docs/default/site-versioned-docs-version-3-13-federation-md-a4d.json\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n/* harmony import */ var _theme_Tabs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n/* harmony import */ var _theme_TabItem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n\n\nconst frontMatter = {\n\ttitle: 'Federation Plugin'\n};\nconst contentTitle = 'Exchange and Queue Federation';\n\nconst assets = {\n\n};\n\n\n\n\n\nconst toc = [{\n  \"value\": \"Overview\",\n  \"id\": \"overview\",\n  \"level\": 2\n}, {\n  \"value\": \"Loose Coupling of Nodes or Clusters\",\n  \"id\": \"loose-coupling-of-nodes-or-clusters\",\n  \"level\": 3\n}, {\n  \"value\": \"WAN friendliness\",\n  \"id\": \"wan-friendliness\",\n  \"level\": 3\n}, {\n  \"value\": \"Specificity\",\n  \"id\": \"specificity\",\n  \"level\": 3\n}, {\n  \"value\": \"Scalability with Growing Connected Node Count\",\n  \"id\": \"scalability-with-growing-connected-node-count\",\n  \"level\": 3\n}, {\n  \"value\": \"What Does It Do?\",\n  \"id\": \"what-does-it-do\",\n  \"level\": 2\n}, {\n  \"value\": \"How is Federation Set Up?\",\n  \"id\": \"how-is-it-configured\",\n  \"level\": 2\n}, {\n  \"value\": \"Getting Started\",\n  \"id\": \"getting-started\",\n  \"level\": 2\n}, {\n  \"value\": \"A Basic Example\",\n  \"id\": \"tutorial\",\n  \"level\": 2\n}, {\n  \"value\": \"Federation Connection (Link) Failures\",\n  \"id\": \"link-failures\",\n  \"level\": 2\n}, {\n  \"value\": \"Federating Clusters\",\n  \"id\": \"clustering\",\n  \"level\": 2\n}, {\n  \"value\": \"Securing Federation Connections with TLS\",\n  \"id\": \"tls-connections\",\n  \"level\": 2\n}, {\n  \"value\": \"Federation Link Monitoring\",\n  \"id\": \"status\",\n  \"level\": 2\n}, {\n  \"value\": \"Using CLI Tools\",\n  \"id\": \"using-cli-tools\",\n  \"level\": 3\n}, {\n  \"value\": \"Using the Management UI\",\n  \"id\": \"using-the-management-ui\",\n  \"level\": 3\n}, {\n  \"value\": \"Troubleshooting\",\n  \"id\": \"troubleshooting\",\n  \"level\": 2\n}, {\n  \"value\": \"Federation Links Do Not Start\",\n  \"id\": \"federation-links-do-not-start\",\n  \"level\": 3\n}, {\n  \"value\": \"Inspect Federation Upstreams\",\n  \"id\": \"inspect-federation-upstreams\",\n  \"level\": 4\n}, {\n  \"value\": \"Inspect Policies\",\n  \"id\": \"inspect-policies\",\n  \"level\": 4\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    admonition: \"admonition\",\n    code: \"code\",\n    em: \"em\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.header, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1, {\n        id: \"exchange-and-queue-federation\",\n        children: \"Exchange and Queue Federation\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This guide covers various topics related to cluster federation, both\\r\\nof exchanges and queues:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#overview\",\n          children: \"Federation overview\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#what-does-it-do\",\n          children: \"What does federation do?\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#getting-started\",\n          children: \"Getting started\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#tutorial\",\n          children: \"A basic example\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#link-failures\",\n          children: \"Federation connections\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#clustering\",\n          children: \"Federating clusters\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Federation \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#tls-connections\",\n          children: \"support for TLS\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Monitoring federation \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#status\",\n          children: \"link status\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#troubleshooting\",\n          children: \"Troubleshooting\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"overview\",\n      children: \"Overview\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The high-level goal of the Federation plugin is to replicate or move messages between brokers that have\\r\\nthe plugin enabled but do not belong to the same cluster. This is useful for a number of reasons.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"loose-coupling-of-nodes-or-clusters\",\n      children: \"Loose Coupling of Nodes or Clusters\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The federation plugin can transmit messages between brokers\\r\\n(or clusters) in different administrative domains:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"they may be hosted in different data centers, potentially on different continents\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"they may have different users, virtual hosts, permissions and purpose\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"they may run on different versions of RabbitMQ and Erlang\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"they may be of different sizes\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"wan-friendliness\",\n      children: \"WAN friendliness\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The federation plugin communication is entirely asynchronous and assumes that connections between\\r\\nclusters will fail from time to time. So it tolerates intermittent connectivity\\r\\nwell and does not create coupling between remote clusters (in terms of availability).\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"specificity\",\n      children: \"Specificity\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"A broker can contain federated \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"and\"\n      }), \" local-only components to best\\r\\nfit the desired architecture of the system.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"scalability-with-growing-connected-node-count\",\n      children: \"Scalability with Growing Connected Node Count\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Federation does not require O(n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"sup\", {\n        children: \"2\"\n      }), \") connections between\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"N\"\n      }), \" brokers (although this is the easiest way to set things up).\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"what-does-it-do\",\n      children: \"What Does It Do?\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The federation plugin make it possible to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"federate\"\n      }), \" exchanges and queues.\\r\\nA federated exchange or queue can receive\\r\\nmessages from one or more remote clusters called \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"upstreams\"\n      }), \" (to be more precise: exchanges\\r\\nand queues that exist in remote clusters).\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"A federated exchange will \\\"replay\\\" a stream of messages published to its upstream counterpart, and publish them to a local queue or stream.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"A federated queue lets a local consumer receive messages from an upstream queue when the remote queue\\r\\nitself does not have any local consumers online.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Federation links connect to upstreams largely the same way an application would. Therefore\\r\\nthey can connect to a specific vhost, use TLS, use multiple\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./authentication\",\n        children: \"authentication mechanisms\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Typically, federation is used to connect remote clusters. However, it can also be used\\r\\nto move data between \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./vhosts\",\n        children: \"virtual hosts\"\n      }), \" within the same cluster.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Federation documentation is organized as a number of more focussed guides:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./federated-exchanges\",\n          children: \"Exchange federation\"\n        }), \": for replicating a flow of messages through an exchange to a remote cluster\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./federated-queues\",\n          children: \"Queue federation\"\n        }), \": to create a \\\"logical queue\\\" across N clusters that will move messages where consumers are (if there are no local consumers)\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./federation-reference\",\n          children: \"Federation settings reference\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"how-is-it-configured\",\n      children: \"How is Federation Set Up?\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Two steps are involved in setting up federation:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"First, one or more upstreams must be defined. They provide federation with information about how to connect\\r\\nto other nodes. This can be done via \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./parameters\",\n          children: \"runtime parameters\"\n        }), \"\\r\\nor the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"https://github.com/rabbitmq/rabbitmq-federation-management\",\n          children: \"federation management plugin\"\n        }), \" which\\r\\nadds a federation management tab to the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./management\",\n          children: \"management UI\"\n        }), \".\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"To enable federation, one or more \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./policies\",\n          children: \"policies\"\n        }), \" that match exchanges or queues must be declared.\\r\\nThe policy will make the matched objects (e.g. exchanges) federated, and one federation link\\r\\n(connection to other nodes) will be started for every match\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"getting-started\",\n      children: \"Getting Started\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The federation plugin is included in the RabbitMQ distribution. To\\r\\nenable it, use \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./cli\",\n        children: \"rabbitmq-plugins\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmq-plugins enable rabbitmq_federation\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"If \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./management\",\n        children: \"management UI\"\n      }), \" is used, it is recommended that\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq_federation_management\"\n      }), \" is also enabled:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmq-plugins enable rabbitmq_federation_management\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"When using a federation in a cluster, all the nodes of the\\r\\ncluster should have the federation plugin enabled.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Information about federation upstreams is stored in the RabbitMQ\\r\\ndatabase, along with users, permissions, queues, etc. There\\r\\nare three levels of configuration involved in federation:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n          children: \"Upstreams\"\n        }), \": each \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./federation-reference#upstreams\",\n          children: \"upstream\"\n        }), \" defines a remote connection endpoint.\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n          children: \"Upstream sets\"\n        }), \": each \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./federation-reference#upstream-sets\",\n          children: \"upstream set groups\"\n        }), \" together a set of upstreams to use for federation.\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n          children: \"Policies\"\n        }), \": each \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./policies\",\n          children: \"policy\"\n        }), \" selects a set of exchanges,\\r\\nqueues or both, and applies a single upstream or an upstream\\r\\nset to those objects.\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In practice, for simple use cases you can almost ignore the\\r\\nexistence of upstream sets, since there is an implicitly-defined upstream set called \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"all\"\n      }), \"\\r\\nto which all upstreams are added.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Upstreams and upstream sets are both defined using \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./parameters\",\n        children: \"runtime parameters\"\n      }), \".\\r\\nLike exchanges and queues, each virtual host has its own distinct set of parameters and policies. For more\\r\\ngeneric information on parameters and policies, see the guide on\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./parameters\",\n        children: \"parameters and policies\"\n      }), \".\\r\\nFor full details on the parameters used by federation, see the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./federation-reference\",\n        children: \"federation reference\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Parameters and policies can be set in three ways:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Using \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./cli\",\n          children: \"CLI tools\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"In the management UI if an extension plugin (\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"rabbitmq_federation_management\"\n        }), \") is enabled\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Using the HTTP API\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The HTTP API has a limitation: it does not support management of upstream sets.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"tutorial\",\n      children: \"A Basic Example\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Here we will federate all the built-in exchanges except for\\r\\nthe default exchange, with a single upstream. The upstream\\r\\nwill be defined to buffer messages when disconnected for up\\r\\nto one hour (3600000ms).\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"To define an upstream, use one of the following examples,\\r\\none per tab:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"examples\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"bash\",\n        label: \"bash\",\n        default: true,\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-bash\",\n            children: \"# target.hostname is just an example, replace it with a URI\\r\\n# of the target node (usually a member of a remote node/cluster,\\r\\n# or a URI that connects to a different virtual host within the same cluster)\\r\\nrabbitmqctl set_parameter federation-upstream my-upstream \\\\\\r\\n    '{\\\"uri\\\":\\\"amqp://target.hostname\\\",\\\"expires\\\":3600000}'\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"PowerShell\",\n        label: \"PowerShell\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-PowerShell\",\n            children: \"# target.hostname is just an example, replace it with a URI\\r\\n# of the target node (usually a member of a remote node/cluster,\\r\\n# or a URI that connects to a different virtual host within the same cluster)\\r\\nrabbitmqctl.bat set_parameter federation-upstream my-upstream `\\r\\n    '\\\"{\\\"\\\"uri\\\"\\\":\\\"\\\"amqp://target.hostname\\\"\\\",\\\"\\\"expires\\\"\\\":3600000}\\\"'\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Management UI\",\n        label: \"Management UI\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n          children: [\"Navigate to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"Admin\"\n          }), \" > \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"Federation Upstreams\"\n          }), \" >\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"Add a new upstream\"\n          }), \". Enter \\\"my-upstream\\\" next to Name,\\r\\n\\\"amqp://target.hostname\\\" next to URI, and 36000000 next to\\r\\nExpiry. Click Add upstream.\"]\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"HTTP API\",\n        label: \"HTTP API\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-bash\",\n            children: \"PUT /api/parameters/federation-upstream/%2f/my-upstream\\r\\n{\\\"value\\\":{\\\"uri\\\":\\\"amqp://target.hostname\\\",\\\"expires\\\":3600000}}\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Then define a policy that will match built-in exchanges and use this upstream:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"examples\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"bash\",\n        label: \"bash\",\n        default: true,\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-bash\",\n            children: \"rabbitmqctl set_policy --apply-to exchanges federate-me \\\"^amq\\\\.\\\" \\\\\\r\\n    '{\\\"federation-upstream-set\\\":\\\"all\\\"}'\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"PowerShell\",\n        label: \"PowerShell\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-PowerShell\",\n            children: \"rabbitmqctl.bat set_policy --apply-to exchanges federate-me \\\"^amq\\\\.\\\" `\\r\\n    '\\\"{\\\"\\\"federation-upstream-set\\\"\\\":\\\"\\\"all\\\"\\\"}\\\"'\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Management UI\",\n        label: \"Management UI\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n          children: [\"Navigate to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"Admin\"\n          }), \" > \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"Policies\"\n          }), \" > \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"Add / update a policy\"\n          }), \".\\r\\nEnter \\\"federate-me\\\" next to \\\"Name\\\", \\\"^amq.\\\" next to\\r\\n\\\"Pattern\\\", choose \\\"Exchanges\\\" from the \\\"Apply to\\\" drop down list\\r\\nand enter \\\"federation-upstream-set\\\" = \\\"all\\\"\\r\\nin the first line next to \\\"Policy\\\". Click \\\"Add\\\" policy.\"]\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"HTTP API\",\n        label: \"HTTP API\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-ini\",\n            children: \"PUT /api/policies/%2f/federate-me\\r\\n{\\\"pattern\\\":\\\"^amq\\\\.\\\", \\\"definition\\\":{\\\"federation-upstream-set\\\":\\\"all\\\"}, \\\"apply-to\\\":\\\"exchanges\\\"}\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The defined policy will make the exchanges _whose names\\r\\nbegin with \\\"amq.\\\" (all the built-in exchanges except\\r\\nfor the default one) with (implicit) low priority, and\\r\\nto federate them using the implicitly created upstream set\\r\\n\\\"all\\\", which includes our newly-created upstream.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Any other \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./policies\",\n        children: \"matching policy\"\n      }), \" with a priority greater than 0 will take\\r\\nprecedence over this policy. Keep in mind that \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"federate-me\"\n      }), \"\\r\\nis just a name we used for this example, you can use any\\r\\nstring you want there.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The built in exchanges should now be federated because they are\\r\\nmatched by the policy. You can\\r\\ncheck that the policy has applied to the exchanges by\\r\\nchecking the exchanges list in management or with:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmqctl list_exchanges name policy | grep federate-me\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"And you can check that federation links for each exchange have come up with \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Admin\"\n      }), \" > \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Federation Status\"\n      }), \" > \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Running Links\"\n      }), \" or with:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"# This command will be available only if federation plugin is enabled\\r\\nrabbitmqctl federation_status\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"In general there will be one federation link for each\\r\\nupstream that is applied to an exchange. So for example with\\r\\nthree exchanges and two upstreams for each there will be six\\r\\nlinks.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"For simple use this should be all you need - you will probably\\r\\nwant to look at the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"a\", {\n        href: \"./uri-spec\",\n        children: \"AMQP URI\\r\\nreference\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"a\", {\n        href: \"./federation-reference\",\n        children: \"federation reference\"\n      }), \" contains\\r\\nmore details on upstream parameters and upstream sets.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"link-failures\",\n      children: \"Federation Connection (Link) Failures\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Inter-node connections used by Federation are based on AMQP 0-9-1\\r\\nconnections. Federation links can be treated as special kind of clients\\r\\nby operators.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Should a link fail, e.g. due to a network interruption, it will\\r\\nattempt to re-connect. Reconnection period is a configurable value\\r\\nthat's defined in upstream definition. See\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"a\", {\n        href: \"./federation-reference\",\n        children: \"federation\\r\\nreference\"\n      }), \" for more details on setting up upstreams and\\r\\nupstream sets.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Links generally try to recover ad infinitum but there are scenarios\\r\\nwhen they give up:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Failure rate is too high (max tolerated rate depends on\\r\\nupstream's \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"reconnect-delay\"\n        }), \" but is generally a failure\\r\\nevery few seconds by default).\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Link no longer can locate its \\\"source\\\" queue or exchange.\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Policy changes in such a way that a link considers itself no longer necessary.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"By increasing \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"reconnect-delay\"\n      }), \" for upstreams it is possible\\r\\nto tolerate higher link failure rates. This is primarily relevant\\r\\nfor RabbitMQ installations where a moderate or large number of active links.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"clustering\",\n      children: \"Federating Clusters\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Clusters can be linked together with federation just as single brokers\\r\\ncan. To summarise how clustering and federation interact:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"You can define policies and parameters on any node in the downstream\\r\\ncluster; once defined on one node they will apply on all nodes.\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Exchange federation links will start on any node in the\\r\\ndownstream cluster. They will fail over to other nodes if\\r\\nthe node they are running on crashes or stops.\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Queue federation links will start on the same node as the\\r\\ndownstream queue. If the downstream queue is a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./quorum-queues\",\n          children: \"replicated one\"\n        }), \", they\\r\\nwill start on the same node as the leader, and will be\\r\\nrecreated on the same node as the new leader after any future leader elections.\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"To connect to an upstream cluster, you can specify multiple URIs in\\r\\na single upstream. The federation link process will choose one of\\r\\nthese URIs at random each time it attempts to connect.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"tls-connections\",\n      children: \"Securing Federation Connections with TLS\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.admonition, {\n      type: \"important\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n        children: [\"Starting with Erlang 26, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./ssl#peer-verification\",\n          children: \"TLS client peer verification\"\n        }), \" is enabled by default by the TLS implementation.\"]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: \"If client TLS certificate and key pair is not configured, TLS-enabled Federation links\\r\\nwill fail to connect. A certificate (public key) and private key\\r\\npair must be configured for TLS-enabled Federation links that need to use peer verification.\"\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: \"If peer verification is not necessary, it can be disabled.\"\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Federation connections (links) can be secured with TLS. Because Federation uses\\r\\na RabbitMQ client under the hood, it is necessary to both configure\\r\\nthe target broker to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./ssl\",\n        children: \"listen for TLS connections\"\n      }), \"\\r\\nand Federation to use TLS.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"To configure Federation to use TLS, one needs to\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"In upstream URI, use the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"amqps\"\n        }), \" for scheme instead of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"amqp\"\n        }), \" and port \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"5671\"\n        }), \" instead of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"5672\"\n        }), \" (assuming the default port is used but the port specified explicitly)\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"In the same upstream URI, specify CA certificate and client certificate/key pair, as well as other parameters (namely \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./ssl#peer-verification\",\n          children: \"enable or disable peer verification\"\n        }), \", \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./ssl#peer-verification-depth\",\n          children: \"peer verification depth\"\n        }), \") via \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./uri-query-parameters\",\n          children: \"URI query parameters\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Optionally, configure \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./ssl/\",\n          children: \"TLS-related\"\n        }), \" settings or defaults common for all links (plus, optionally, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./shovel\",\n          children: \"Shovel\"\n        }), \") via the Erlang client settings\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"In the following example the upstream URI is modified to use TLS with a client certificate (public key)\\r\\nand private key pair but with peer verification disabled (for simplicity, it is encouraged for production use):\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"examples\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"bash\",\n        label: \"bash\",\n        default: true,\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-bash\",\n            children: \"# Note the TLS-related settings in the upstream URI field\\r\\nrabbitmqctl set_parameter federation-upstream my-upstream \\\\\\r\\n    '{\\\"uri\\\":\\\"amqps://target.hostname:5671?cacertfile=/path/to/ca_bundle.pem&certfile=/path/to/client_certificate.pem&keyfile=/path/to/client_key.pem&verify=verify_none\\\",\\\"expires\\\":3600000}'\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"PowerShell\",\n        label: \"PowerShell\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-PowerShell\",\n            children: \"#\\r\\nrabbitmqctl.bat set_parameter federation-upstream my-upstream `\\r\\n    '\\\"{\\\"\\\"uri\\\"\\\":\\\"\\\"amqps://target.hostname:5671?cacertfile=drive:\\\\path\\\\to\\\\ca_bundle.pem&certfile=drive:\\\\path\\\\to\\\\client_certificate.pem&keyfile=drive:\\\\path\\\\to\\\\client_key.pem&verify=verify_none\\\"\\\",\\\"\\\"expires\\\"\\\":3600000}\\\"'\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Management UI\",\n        label: \"Management UI\",\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n          children: [\"Navigate to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"Admin\"\n          }), \" > \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"Federation Upstreams\"\n          }), \" >\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"Add a new upstream\"\n          }), \". Enter \\\"my-upstream\\\" next to Name, paste\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"\\\"amqps://target.hostname:5671?cacertfile=/path/to/ca_bundle.pem&certfile=/path/to/client_certificate.pem&keyfile=/path/to/client_key.pem&verify=verify_none\\\"\"\n          }), \" for URI,\\r\\nthen enter 36000000 next to Expiry.\"]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n          children: \"Click Add upstream.\"\n        })]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"HTTP API\",\n        label: \"HTTP API\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-bash\",\n            children: \"PUT /api/parameters/federation-upstream/%2f/my-upstream\\r\\n{\\\"value\\\":{\\\"uri\\\":\\\"amqps://target.hostname:5671?cacertfile=/path/to/ca_bundle.pem&certfile=/path/to/client_certificate.pem&keyfile=/path/to/client_key.pem&verify=verify_none\\\",\\\"expires\\\":3600000}}\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"These examples use a URI with four additional \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./uri-query-parameters\",\n        children: \"URI query parameters\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"cacertfile\"\n        }), \": the CA certificate bundle file that includes one or more CA certificates that were used to sign the client certificate and private key pair\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"certfile\"\n        }), \": the client certificate (public key)\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"keyfile\"\n        }), \": the client private key\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"verify\"\n        }), \": \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./ssl#peer-verification\",\n          children: \"controls peer verification\"\n        }), \" (in this specific example, disables it)\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Just like with \\\"regular\\\" client connections, if TLS-enabled federation links need to perform peer verification then server's CA must be\\r\\ntrusted on the node where federation link(s) runs, and vice versa.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"status\",\n      children: \"Federation Link Monitoring\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Each combination of federated exchange or queue and upstream needs a\\r\\nlink to run. This is the process that retrieves messages from upstream\\r\\nand republishes them downstream. You can monitor the status of\\r\\nfederation links using \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl\"\n      }), \" and the management\\r\\nplugin.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"using-cli-tools\",\n      children: \"Using CLI Tools\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Federation link status can be inspected using \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./cli\",\n        children: \"RabbitMQ CLI tools\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Invoke:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"# This command will be available only if federation plugin is enabled\\r\\nrabbitmqctl federation_status\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This will output a list of federation links running on the target node (not cluster-wide).\\r\\nIt contains the following keys:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"table\", {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"thead\", {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"Parameter Name\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"Description\"\n          })]\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tbody\", {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n              children: \"type\"\n            })\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n              children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n                children: \"exchange\"\n              }), \" or \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n                children: \"queue\"\n              }), \" depending on\\r\\nwhat type of federated resource this link relates to\"]\n            })\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n              children: \"name\"\n            })\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n              children: \"the name of the federated exchange or queue\"\n            })\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n              children: \"vhost\"\n            })\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n              children: \"the virtual host containing the federated exchange or queue\"\n            })\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n              children: \"upstream_name\"\n            })\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n              children: \"the name of the upstream this link is connected to\"\n            })\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n              children: \"status\"\n            })\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"td\", {\n            children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n              children: \"status of the link:\"\n            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"ul\", {\n              children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n                children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n                  children: \"starting\"\n                })\n              }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n                children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n                  children: \"{running, LocalConnectionName}\"\n                })\n              }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n                children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n                  children: \"{shutdown, Error}\"\n                })\n              })]\n            })]\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n              children: \"connection\"\n            })\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n              children: \"the name of the connection for this link (from config)\"\n            })\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n              children: \"timestamp\"\n            })\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n              children: \"time stamp of the last status update\"\n            })\n          })]\n        })]\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Here's an example:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"# This command will be available only if federation plugin is enabled\\r\\nrabbitmqctl federation_status\\r\\n# => [[{type,<<\\\"exchange\\\">>},\\r\\n# =>   {name,<<\\\"my-exchange\\\">>},\\r\\n# =>   {vhost,<<\\\"/\\\">>},\\r\\n# =>   {connection,<<\\\"upstream-server\\\">>},\\r\\n# =>   {upstream_name,<<\\\"my-upstream-x\\\">>},\\r\\n# =>   {status,{running,<<\\\"<rabbit@my-server.1.281.0>\\\">>}},\\r\\n# =>   {timestamp,{{2020,3,1},{12,3,28}}}]]\\r\\n# => ...done.\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"using-the-management-ui\",\n      children: \"Using the Management UI\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Enable the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq_federation_management\"\n      }), \" \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./plugins\",\n        children: \"plugin\"\n      }), \" that extends\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./management\",\n        children: \"management UI\"\n      }), \" with a new page that displays federation links in the cluster.\\r\\nIt can be found under \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Admin\"\n      }), \" > \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Federation Status\"\n      }), \", or by using the\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"GET /api/federation-links\"\n      }), \" HTTP API endpoint.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"troubleshooting\",\n      children: \"Troubleshooting\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"federation-links-do-not-start\",\n      children: \"Federation Links Do Not Start\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Federation links are started when\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"There is a configured upstream (or a set of upstreams)\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"There is a policy that matches some exchanges or queues\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Federation can connect to the target upstream\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Therefore, in order to narrow down the problem, the recommended steps are:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Inspect federation upstreams\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Inspect \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./policies\",\n          children: \"policies\"\n        }), \", in particular looking for policies with conflicting \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./policies#priorities\",\n          children: \"priorities\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Inspect \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./logging\",\n          children: \"node logs\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"inspect-federation-upstreams\",\n      children: \"Inspect Federation Upstreams\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"examples\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"bash\",\n        label: \"bash\",\n        default: true,\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-bash\",\n            children: \"rabbitmq-diagnostics list_parameters --formatter=pretty_table\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"PowerShell\",\n        label: \"PowerShell\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-PowerShell\",\n            children: \"rabbitmq-diagnostics.bat list_parameters --formatter=pretty_table\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Management UI\",\n        label: \"Management UI\",\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n          children: [\"Make sure that the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"rabbitmq_federation_management\"\n          }), \" \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n            href: \"./plugins\",\n            children: \"plugin\"\n          }), \" is enabled.\"]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n          children: [\"Navigate to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"Admin\"\n          }), \" > \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"Federation Upstreams\"\n          }), \".\"]\n        })]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"HTTP API\",\n        label: \"HTTP API\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-ini\",\n            children: \"GET /api/parameters\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"inspect-policies\",\n      children: \"Inspect Policies\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Only one policy in RabbitMQ can be applied at a time, and that out of N policies\\r\\nwith equal priorities a random one will be selected.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"In other words, when there are conflicting policies that match the exchanges or queues\\r\\nthat are meant to be federated, the policy that enables federation is not guaranteed\\r\\nto be the effective one.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Using explicit different policies and avoiding policies that \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"--apply-to all\"\n      }), \" will reduce\\r\\nthe risk of running into this problem.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./versioned_docs/version-3.13/federation.md\n");

/***/ })

}]);