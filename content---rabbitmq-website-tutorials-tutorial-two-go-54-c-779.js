"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkrabbitmq_website"] = globalThis["webpackChunkrabbitmq_website"] || []).push([["content---rabbitmq-website-tutorials-tutorial-two-go-54-c-779"],{

/***/ "./.docusaurus/docusaurus-plugin-content-docs/tutorials/site-tutorials-tutorial-two-go-md-54c.json":
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"id":"tutorial-two-go","title":"RabbitMQ tutorial - Work Queues","description":"<!--","source":"@site/tutorials/tutorial-two-go.md","sourceDirName":".","slug":"/tutorial-two-go","permalink":"/rabbitmq-website/tutorials/tutorial-two-go","draft":false,"unlisted":false,"editUrl":"https://github.com/rabbitmq/rabbitmq-website/tree/main/tutorials/tutorial-two-go.md","tags":[],"version":"current","frontMatter":{"title":"RabbitMQ tutorial - Work Queues"},"sidebar":"tutorialsSidebar","previous":{"title":"Hello World","permalink":"/rabbitmq-website/tutorials/tutorial-one-go"},"next":{"title":"Publish/Subscribe","permalink":"/rabbitmq-website/tutorials/tutorial-three-go"}}');

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanM/MjA0NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbXBvcnQge01EWENvbXBvbmVudHN9IGZyb20gJ21keC90eXBlcy5qcydcbiAqIEBpbXBvcnQge0NvbXBvbmVudCwgUmVhY3RFbGVtZW50LCBSZWFjdE5vZGV9IGZyb20gJ3JlYWN0J1xuICovXG5cbi8qKlxuICogQGNhbGxiYWNrIE1lcmdlQ29tcG9uZW50c1xuICogICBDdXN0b20gbWVyZ2UgZnVuY3Rpb24uXG4gKiBAcGFyYW0ge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSBjdXJyZW50Q29tcG9uZW50c1xuICogICBDdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgY29udGV4dC5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMuXG4gKlxuICogQHR5cGVkZWYgUHJvcHNcbiAqICAgQ29uZmlndXJhdGlvbiBmb3IgYE1EWFByb3ZpZGVyYC5cbiAqIEBwcm9wZXJ0eSB7UmVhY3ROb2RlIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NoaWxkcmVuXVxuICogICBDaGlsZHJlbiAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbiB8IG51bGwgfCB1bmRlZmluZWR9IFtkaXNhYmxlUGFyZW50Q29udGV4dD1mYWxzZV1cbiAqICAgVHVybiBvZmYgb3V0ZXIgY29tcG9uZW50IGNvbnRleHQgKGRlZmF1bHQ6IGBmYWxzZWApLlxuICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuLyoqIEB0eXBlIHtSZWFkb25seTxNRFhDb21wb25lbnRzPn0gKi9cbmNvbnN0IGVtcHR5Q29tcG9uZW50cyA9IHt9XG5cbmNvbnN0IE1EWENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KGVtcHR5Q29tcG9uZW50cylcblxuLyoqXG4gKiBHZXQgY3VycmVudCBjb21wb25lbnRzIGZyb20gdGhlIE1EWCBDb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz4gfCBNZXJnZUNvbXBvbmVudHMgfCBudWxsIHwgdW5kZWZpbmVkfSBbY29tcG9uZW50c11cbiAqICAgQWRkaXRpb25hbCBjb21wb25lbnRzIHRvIHVzZSBvciBhIGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyB0aGVtIChvcHRpb25hbCkuXG4gKiBAcmV0dXJucyB7TURYQ29tcG9uZW50c31cbiAqICAgQ3VycmVudCBjb21wb25lbnRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlTURYQ29tcG9uZW50cyhjb21wb25lbnRzKSB7XG4gIGNvbnN0IGNvbnRleHRDb21wb25lbnRzID0gUmVhY3QudXNlQ29udGV4dChNRFhDb250ZXh0KVxuXG4gIC8vIE1lbW9pemUgdG8gYXZvaWQgdW5uZWNlc3NhcnkgdG9wLWxldmVsIGNvbnRleHQgY2hhbmdlc1xuICByZXR1cm4gUmVhY3QudXNlTWVtbyhcbiAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBDdXN0b20gbWVyZ2UgdmlhIGEgZnVuY3Rpb24gcHJvcFxuICAgICAgaWYgKHR5cGVvZiBjb21wb25lbnRzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBjb21wb25lbnRzKGNvbnRleHRDb21wb25lbnRzKVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gey4uLmNvbnRleHRDb21wb25lbnRzLCAuLi5jb21wb25lbnRzfVxuICAgIH0sXG4gICAgW2NvbnRleHRDb21wb25lbnRzLCBjb21wb25lbnRzXVxuICApXG59XG5cbi8qKlxuICogUHJvdmlkZXIgZm9yIE1EWCBjb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8UHJvcHM+fSBwcm9wZXJ0aWVzXG4gKiAgIFByb3BlcnRpZXMuXG4gKiBAcmV0dXJucyB7UmVhY3RFbGVtZW50fVxuICogICBFbGVtZW50LlxuICogQHNhdGlzZmllcyB7Q29tcG9uZW50fVxuICovXG5leHBvcnQgZnVuY3Rpb24gTURYUHJvdmlkZXIocHJvcGVydGllcykge1xuICAvKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuICBsZXQgYWxsQ29tcG9uZW50c1xuXG4gIGlmIChwcm9wZXJ0aWVzLmRpc2FibGVQYXJlbnRDb250ZXh0KSB7XG4gICAgYWxsQ29tcG9uZW50cyA9XG4gICAgICB0eXBlb2YgcHJvcGVydGllcy5jb21wb25lbnRzID09PSAnZnVuY3Rpb24nXG4gICAgICAgID8gcHJvcGVydGllcy5jb21wb25lbnRzKGVtcHR5Q29tcG9uZW50cylcbiAgICAgICAgOiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgfHwgZW1wdHlDb21wb25lbnRzXG4gIH0gZWxzZSB7XG4gICAgYWxsQ29tcG9uZW50cyA9IHVzZU1EWENvbXBvbmVudHMocHJvcGVydGllcy5jb21wb25lbnRzKVxuICB9XG5cbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgTURYQ29udGV4dC5Qcm92aWRlcixcbiAgICB7dmFsdWU6IGFsbENvbXBvbmVudHN9LFxuICAgIHByb3BlcnRpZXMuY2hpbGRyZW5cbiAgKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ }),

/***/ "./src/components/Tutorials/T2DiagramPrefetch.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    mermaid: \"mermaid\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.mermaid, {\n    value: \"flowchart LR\\r\\n    P((P)) --> Q[[hello]]\\r\\n    Q -- prefetch=1 --> C1((C1))\\r\\n    Q -- prefetch=1 --> C2((C2))\\r\\n\\r\\n    class P mermaid-producer\\r\\n    class Q mermaid-queue\\r\\n    class C1 mermaid-consumer\\r\\n    class C2 mermaid-consumer\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9UdXRvcmlhbHMvVDJEaWFncmFtUHJlZmV0Y2gubWQiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFiYml0bXEtd2Vic2l0ZS8uL3NyYy9jb21wb25lbnRzL1R1dG9yaWFscy9UMkRpYWdyYW1QcmVmZXRjaC5tZD84M2VlIl0sInNvdXJjZXNDb250ZW50IjpbIlxuXG5leHBvcnQgY29uc3QgZnJvbnRNYXR0ZXIgPSB7fTtcbmV4cG9ydCBjb25zdCBjb250ZW50VGl0bGUgPSB1bmRlZmluZWQ7XG5cblxuXG5pbXBvcnQge2pzeCBhcyBfanN4fSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCB7dXNlTURYQ29tcG9uZW50cyBhcyBfcHJvdmlkZUNvbXBvbmVudHN9IGZyb20gXCJAbWR4LWpzL3JlYWN0XCI7XG5leHBvcnQgY29uc3QgdG9jID0gW107XG5mdW5jdGlvbiBfY3JlYXRlTWR4Q29udGVudChwcm9wcykge1xuICBjb25zdCBfY29tcG9uZW50cyA9IHtcbiAgICBtZXJtYWlkOiBcIm1lcm1haWRcIixcbiAgICAuLi5fcHJvdmlkZUNvbXBvbmVudHMoKSxcbiAgICAuLi5wcm9wcy5jb21wb25lbnRzXG4gIH07XG4gIHJldHVybiBfanN4KF9jb21wb25lbnRzLm1lcm1haWQsIHtcbiAgICB2YWx1ZTogXCJmbG93Y2hhcnQgTFJcXHJcXG4gICAgUCgoUCkpIC0tPiBRW1toZWxsb11dXFxyXFxuICAgIFEgLS0gcHJlZmV0Y2g9MSAtLT4gQzEoKEMxKSlcXHJcXG4gICAgUSAtLSBwcmVmZXRjaD0xIC0tPiBDMigoQzIpKVxcclxcblxcclxcbiAgICBjbGFzcyBQIG1lcm1haWQtcHJvZHVjZXJcXHJcXG4gICAgY2xhc3MgUSBtZXJtYWlkLXF1ZXVlXFxyXFxuICAgIGNsYXNzIEMxIG1lcm1haWQtY29uc3VtZXJcXHJcXG4gICAgY2xhc3MgQzIgbWVybWFpZC1jb25zdW1lclwiXG4gIH0pO1xufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudChwcm9wcyA9IHt9KSB7XG4gIGNvbnN0IHt3cmFwcGVyOiBNRFhMYXlvdXR9ID0ge1xuICAgIC4uLl9wcm92aWRlQ29tcG9uZW50cygpLFxuICAgIC4uLnByb3BzLmNvbXBvbmVudHNcbiAgfTtcbiAgcmV0dXJuIE1EWExheW91dCA/IF9qc3goTURYTGF5b3V0LCB7XG4gICAgLi4ucHJvcHMsXG4gICAgY2hpbGRyZW46IF9qc3goX2NyZWF0ZU1keENvbnRlbnQsIHtcbiAgICAgIC4uLnByb3BzXG4gICAgfSlcbiAgfSkgOiBfY3JlYXRlTWR4Q29udGVudChwcm9wcyk7XG59XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/Tutorials/T2DiagramPrefetch.md\n");

/***/ }),

/***/ "./src/components/Tutorials/T2DiagramToC.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    mermaid: \"mermaid\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.mermaid, {\n    value: \"flowchart LR\\r\\n    P((P))\\r\\n    Q[[Queue]]\\r\\n    C1((C₁))\\r\\n    C2((C₂))\\r\\n\\r\\n    P --> Q --> C1 & C2\\r\\n\\r\\n    class P mermaid-producer\\r\\n    class Q mermaid-queue\\r\\n    class C1 mermaid-consumer\\r\\n    class C2 mermaid-consumer\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9UdXRvcmlhbHMvVDJEaWFncmFtVG9DLm1kIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9zcmMvY29tcG9uZW50cy9UdXRvcmlhbHMvVDJEaWFncmFtVG9DLm1kPzU4OGUiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cbmV4cG9ydCBjb25zdCBmcm9udE1hdHRlciA9IHt9O1xuZXhwb3J0IGNvbnN0IGNvbnRlbnRUaXRsZSA9IHVuZGVmaW5lZDtcblxuXG5cbmltcG9ydCB7anN4IGFzIF9qc3h9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuaW1wb3J0IHt1c2VNRFhDb21wb25lbnRzIGFzIF9wcm92aWRlQ29tcG9uZW50c30gZnJvbSBcIkBtZHgtanMvcmVhY3RcIjtcbmV4cG9ydCBjb25zdCB0b2MgPSBbXTtcbmZ1bmN0aW9uIF9jcmVhdGVNZHhDb250ZW50KHByb3BzKSB7XG4gIGNvbnN0IF9jb21wb25lbnRzID0ge1xuICAgIG1lcm1haWQ6IFwibWVybWFpZFwiLFxuICAgIC4uLl9wcm92aWRlQ29tcG9uZW50cygpLFxuICAgIC4uLnByb3BzLmNvbXBvbmVudHNcbiAgfTtcbiAgcmV0dXJuIF9qc3goX2NvbXBvbmVudHMubWVybWFpZCwge1xuICAgIHZhbHVlOiBcImZsb3djaGFydCBMUlxcclxcbiAgICBQKChQKSlcXHJcXG4gICAgUVtbUXVldWVdXVxcclxcbiAgICBDMSgoQ+KCgSkpXFxyXFxuICAgIEMyKChD4oKCKSlcXHJcXG5cXHJcXG4gICAgUCAtLT4gUSAtLT4gQzEgJiBDMlxcclxcblxcclxcbiAgICBjbGFzcyBQIG1lcm1haWQtcHJvZHVjZXJcXHJcXG4gICAgY2xhc3MgUSBtZXJtYWlkLXF1ZXVlXFxyXFxuICAgIGNsYXNzIEMxIG1lcm1haWQtY29uc3VtZXJcXHJcXG4gICAgY2xhc3MgQzIgbWVybWFpZC1jb25zdW1lclwiXG4gIH0pO1xufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudChwcm9wcyA9IHt9KSB7XG4gIGNvbnN0IHt3cmFwcGVyOiBNRFhMYXlvdXR9ID0ge1xuICAgIC4uLl9wcm92aWRlQ29tcG9uZW50cygpLFxuICAgIC4uLnByb3BzLmNvbXBvbmVudHNcbiAgfTtcbiAgcmV0dXJuIE1EWExheW91dCA/IF9qc3goTURYTGF5b3V0LCB7XG4gICAgLi4ucHJvcHMsXG4gICAgY2hpbGRyZW46IF9qc3goX2NyZWF0ZU1keENvbnRlbnQsIHtcbiAgICAgIC4uLnByb3BzXG4gICAgfSlcbiAgfSkgOiBfY3JlYXRlTWR4Q29udGVudChwcm9wcyk7XG59XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/Tutorials/T2DiagramToC.md\n");

/***/ }),

/***/ "./src/components/Tutorials/TutorialsHelp.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n\n\nconst frontMatter = {};\nconst contentTitle = undefined;\n\n\n\n\n\nconst toc = [{\n  \"value\": \"Prerequisites\",\n  \"id\": \"prerequisites\",\n  \"level\": 3\n}, {\n  \"value\": \"Where to get help\",\n  \"id\": \"where-to-get-help\",\n  \"level\": 3\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    admonition: \"admonition\",\n    code: \"code\",\n    h3: \"h3\",\n    p: \"p\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_components.admonition, {\n    type: \"info\",\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.h3, {\n      id: \"prerequisites\",\n      children: \"Prerequisites\"\n    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_components.p, {\n      children: [\"This tutorial assumes RabbitMQ is \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.a, {\n        href: \"/docs/download\",\n        children: \"installed\"\n      }), \" and running on\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.code, {\n        children: \"localhost\"\n      }), \" on the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.a, {\n        href: \"/docs/networking#ports\",\n        children: \"standard port\"\n      }), \" (5672). In case you\\r\\nuse a different host, port or credentials, connections settings would require\\r\\nadjusting.\"]\n    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.h3, {\n      id: \"where-to-get-help\",\n      children: \"Where to get help\"\n    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_components.p, {\n      children: [\"If you're having trouble going through this tutorial you can contact us\\r\\nthrough \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/rabbitmq-server/discussions\",\n        children: \"GitHub Discussions\"\n      }), \" or \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components.a, {\n        href: \"https://www.rabbitmq.com/discord\",\n        children: \"RabbitMQ community Discord\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9UdXRvcmlhbHMvVHV0b3JpYWxzSGVscC5tZCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9zcmMvY29tcG9uZW50cy9UdXRvcmlhbHMvVHV0b3JpYWxzSGVscC5tZD9lMTQ5Il0sInNvdXJjZXNDb250ZW50IjpbIlxuXG5leHBvcnQgY29uc3QgZnJvbnRNYXR0ZXIgPSB7fTtcbmV4cG9ydCBjb25zdCBjb250ZW50VGl0bGUgPSB1bmRlZmluZWQ7XG5cblxuXG5pbXBvcnQge2pzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCB7dXNlTURYQ29tcG9uZW50cyBhcyBfcHJvdmlkZUNvbXBvbmVudHN9IGZyb20gXCJAbWR4LWpzL3JlYWN0XCI7XG5leHBvcnQgY29uc3QgdG9jID0gW3tcbiAgXCJ2YWx1ZVwiOiBcIlByZXJlcXVpc2l0ZXNcIixcbiAgXCJpZFwiOiBcInByZXJlcXVpc2l0ZXNcIixcbiAgXCJsZXZlbFwiOiAzXG59LCB7XG4gIFwidmFsdWVcIjogXCJXaGVyZSB0byBnZXQgaGVscFwiLFxuICBcImlkXCI6IFwid2hlcmUtdG8tZ2V0LWhlbHBcIixcbiAgXCJsZXZlbFwiOiAzXG59XTtcbmZ1bmN0aW9uIF9jcmVhdGVNZHhDb250ZW50KHByb3BzKSB7XG4gIGNvbnN0IF9jb21wb25lbnRzID0ge1xuICAgIGE6IFwiYVwiLFxuICAgIGFkbW9uaXRpb246IFwiYWRtb25pdGlvblwiLFxuICAgIGNvZGU6IFwiY29kZVwiLFxuICAgIGgzOiBcImgzXCIsXG4gICAgcDogXCJwXCIsXG4gICAgLi4uX3Byb3ZpZGVDb21wb25lbnRzKCksXG4gICAgLi4ucHJvcHMuY29tcG9uZW50c1xuICB9O1xuICByZXR1cm4gX2pzeHMoX2NvbXBvbmVudHMuYWRtb25pdGlvbiwge1xuICAgIHR5cGU6IFwiaW5mb1wiLFxuICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwicHJlcmVxdWlzaXRlc1wiLFxuICAgICAgY2hpbGRyZW46IFwiUHJlcmVxdWlzaXRlc1wiXG4gICAgfSksIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJUaGlzIHR1dG9yaWFsIGFzc3VtZXMgUmFiYml0TVEgaXMgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi9kb2NzL2Rvd25sb2FkXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImluc3RhbGxlZFwiXG4gICAgICB9KSwgXCIgYW5kIHJ1bm5pbmcgb25cXHJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcImxvY2FsaG9zdFwiXG4gICAgICB9KSwgXCIgb24gdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIvZG9jcy9uZXR3b3JraW5nI3BvcnRzXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInN0YW5kYXJkIHBvcnRcIlxuICAgICAgfSksIFwiICg1NjcyKS4gSW4gY2FzZSB5b3VcXHJcXG51c2UgYSBkaWZmZXJlbnQgaG9zdCwgcG9ydCBvciBjcmVkZW50aWFscywgY29ubmVjdGlvbnMgc2V0dGluZ3Mgd291bGQgcmVxdWlyZVxcclxcbmFkanVzdGluZy5cIl1cbiAgICB9KSwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwid2hlcmUtdG8tZ2V0LWhlbHBcIixcbiAgICAgIGNoaWxkcmVuOiBcIldoZXJlIHRvIGdldCBoZWxwXCJcbiAgICB9KSwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIklmIHlvdSdyZSBoYXZpbmcgdHJvdWJsZSBnb2luZyB0aHJvdWdoIHRoaXMgdHV0b3JpYWwgeW91IGNhbiBjb250YWN0IHVzXFxyXFxudGhyb3VnaCBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiaHR0cHM6Ly9naXRodWIuY29tL3JhYmJpdG1xL3JhYmJpdG1xLXNlcnZlci9kaXNjdXNzaW9uc1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJHaXRIdWIgRGlzY3Vzc2lvbnNcIlxuICAgICAgfSksIFwiIG9yIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCJodHRwczovL3d3dy5yYWJiaXRtcS5jb20vZGlzY29yZFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJSYWJiaXRNUSBjb21tdW5pdHkgRGlzY29yZFwiXG4gICAgICB9KSwgXCIuXCJdXG4gICAgfSldXG4gIH0pO1xufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudChwcm9wcyA9IHt9KSB7XG4gIGNvbnN0IHt3cmFwcGVyOiBNRFhMYXlvdXR9ID0ge1xuICAgIC4uLl9wcm92aWRlQ29tcG9uZW50cygpLFxuICAgIC4uLnByb3BzLmNvbXBvbmVudHNcbiAgfTtcbiAgcmV0dXJuIE1EWExheW91dCA/IF9qc3goTURYTGF5b3V0LCB7XG4gICAgLi4ucHJvcHMsXG4gICAgY2hpbGRyZW46IF9qc3goX2NyZWF0ZU1keENvbnRlbnQsIHtcbiAgICAgIC4uLnByb3BzXG4gICAgfSlcbiAgfSkgOiBfY3JlYXRlTWR4Q29udGVudChwcm9wcyk7XG59XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/Tutorials/TutorialsHelp.md\n");

/***/ }),

/***/ "./tutorials/tutorial-two-go.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assets: () => (/* binding */ assets),\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   metadata: () => (/* reexport default export from named module */ _site_docusaurus_docusaurus_plugin_content_docs_tutorials_site_tutorials_tutorial_two_go_md_54c_json__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var _site_docusaurus_docusaurus_plugin_content_docs_tutorials_site_tutorials_tutorial_two_go_md_54c_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.docusaurus/docusaurus-plugin-content-docs/tutorials/site-tutorials-tutorial-two-go-md-54c.json\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n/* harmony import */ var _site_src_components_Tutorials_TutorialsHelp_md__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./src/components/Tutorials/TutorialsHelp.md\");\n/* harmony import */ var _site_src_components_Tutorials_T2DiagramToC_md__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./src/components/Tutorials/T2DiagramToC.md\");\n/* harmony import */ var _site_src_components_Tutorials_T2DiagramPrefetch_md__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./src/components/Tutorials/T2DiagramPrefetch.md\");\n\n\nconst frontMatter = {\n\ttitle: 'RabbitMQ tutorial - Work Queues'\n};\nconst contentTitle = 'RabbitMQ tutorial - Work Queues';\n\nconst assets = {\n\n};\n\n\n\n\n\n\nconst toc = [{\n  \"value\": \"Work Queues\",\n  \"id\": \"work-queues\",\n  \"level\": 2\n}, {\n  \"value\": \"(using the Go RabbitMQ client)\",\n  \"id\": \"using-the-go-rabbitmq-client\",\n  \"level\": 3\n}, ..._site_src_components_Tutorials_TutorialsHelp_md__WEBPACK_IMPORTED_MODULE_2__.toc, ..._site_src_components_Tutorials_T2DiagramToC_md__WEBPACK_IMPORTED_MODULE_3__.toc, {\n  \"value\": \"Preparation\",\n  \"id\": \"preparation\",\n  \"level\": 2\n}, {\n  \"value\": \"Round-robin dispatching\",\n  \"id\": \"round-robin-dispatching\",\n  \"level\": 2\n}, {\n  \"value\": \"Message acknowledgment\",\n  \"id\": \"message-acknowledgment\",\n  \"level\": 2\n}, {\n  \"value\": \"Forgotten acknowledgment\",\n  \"id\": \"forgotten-acknowledgment\",\n  \"level\": 4\n}, {\n  \"value\": \"Message durability\",\n  \"id\": \"message-durability\",\n  \"level\": 2\n}, {\n  \"value\": \"Note on message persistence\",\n  \"id\": \"note-on-message-persistence\",\n  \"level\": 4\n}, {\n  \"value\": \"Fair dispatch\",\n  \"id\": \"fair-dispatch\",\n  \"level\": 2\n}, ..._site_src_components_Tutorials_T2DiagramPrefetch_md__WEBPACK_IMPORTED_MODULE_4__.toc, {\n  \"value\": \"Note about queue size\",\n  \"id\": \"note-about-queue-size\",\n  \"level\": 4\n}, {\n  \"value\": \"Putting it all together\",\n  \"id\": \"putting-it-all-together\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    blockquote: \"blockquote\",\n    code: \"code\",\n    em: \"em\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.header, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1, {\n        id: \"rabbitmq-tutorial---work-queues\",\n        children: \"RabbitMQ tutorial - Work Queues\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"work-queues\",\n      children: \"Work Queues\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"using-the-go-rabbitmq-client\",\n      children: \"(using the Go RabbitMQ client)\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_site_src_components_Tutorials_TutorialsHelp_md__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {}), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_site_src_components_Tutorials_T2DiagramToC_md__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {}), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./tutorial-one-go\",\n        children: \"first tutorial\"\n      }), \" we\\r\\nwrote programs to send and receive messages from a named queue. In this\\r\\none we'll create a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"Work Queue\"\n      }), \" that will be used to distribute\\r\\ntime-consuming tasks among multiple workers.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The main idea behind Work Queues (aka: \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"Task Queues\"\n      }), \") is to avoid\\r\\ndoing a resource-intensive task immediately and having to wait for\\r\\nit to complete. Instead we schedule the task to be done later. We encapsulate a\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"task\"\n      }), \" as a message and send it to a queue. A worker process running\\r\\nin the background will pop the tasks and eventually execute the\\r\\njob. When you run many workers the tasks will be shared between them.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This concept is especially useful in web applications where it's\\r\\nimpossible to handle a complex task during a short HTTP request\\r\\nwindow.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"preparation\",\n      children: \"Preparation\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In the previous part of this tutorial we sent a message containing\\r\\n\\\"Hello World!\\\". Now we'll be sending strings that stand for complex\\r\\ntasks. We don't have a real-world task, like images to be resized or\\r\\npdf files to be rendered, so let's fake it by just pretending we're\\r\\nbusy - by using the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"time.Sleep\"\n      }), \" function. We'll take the number of dots\\r\\nin the string as its complexity; every dot will account for one second\\r\\nof \\\"work\\\".  For example, a fake task described by \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Hello...\"\n      }), \"\\r\\nwill take three seconds.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"We will slightly modify the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"send.go\"\n      }), \" code from our previous example,\\r\\nto allow arbitrary messages to be sent from the command line. This\\r\\nprogram will schedule tasks to our work queue, so let's name it\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"new_task.go\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-go\",\n        children: \"ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second)\\r\\ndefer cancel()\\r\\n\\r\\nbody := bodyFrom(os.Args)\\r\\nerr = ch.PublishWithContext(ctx,\\r\\n  \\\"\\\",           // exchange\\r\\n  q.Name,       // routing key\\r\\n  false,        // mandatory\\r\\n  false,\\r\\n  amqp.Publishing {\\r\\n    DeliveryMode: amqp.Persistent,\\r\\n    ContentType:  \\\"text/plain\\\",\\r\\n    Body:         []byte(body),\\r\\n  })\\r\\nfailOnError(err, \\\"Failed to publish a message\\\")\\r\\nlog.Printf(\\\" [x] Sent %s\\\", body)\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Here is the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"bodyFrom\"\n      }), \" function:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-go\",\n        children: \"func bodyFrom(args []string) string {\\r\\n\\tvar s string\\r\\n\\tif (len(args) < 2) || os.Args[1] == \\\"\\\" {\\r\\n\\t\\ts = \\\"hello\\\"\\r\\n\\t} else {\\r\\n\\t\\ts = strings.Join(args[1:], \\\" \\\")\\r\\n\\t}\\r\\n\\treturn s\\r\\n}\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Our old \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"receive.go\"\n      }), \" script also requires some changes: it needs to\\r\\nfake a second of work for every dot in the message body. It will pop\\r\\nmessages from the queue and perform the task, so let's call it \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"worker.go\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-go\",\n        children: \"msgs, err := ch.Consume(\\r\\n  q.Name, // queue\\r\\n  \\\"\\\",     // consumer\\r\\n  true,   // auto-ack\\r\\n  false,  // exclusive\\r\\n  false,  // no-local\\r\\n  false,  // no-wait\\r\\n  nil,    // args\\r\\n)\\r\\nfailOnError(err, \\\"Failed to register a consumer\\\")\\r\\n\\r\\nvar forever chan struct{}\\r\\n\\r\\ngo func() {\\r\\n  for d := range msgs {\\r\\n    log.Printf(\\\"Received a message: %s\\\", d.Body)\\r\\n    dotCount := bytes.Count(d.Body, []byte(\\\".\\\"))\\r\\n    t := time.Duration(dotCount)\\r\\n    time.Sleep(t * time.Second)\\r\\n    log.Printf(\\\"Done\\\")\\r\\n  }\\r\\n}()\\r\\n\\r\\nlog.Printf(\\\" [*] Waiting for messages. To exit press CTRL+C\\\")\\r\\n<-forever\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Note that our fake task simulates execution time.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Run them as in tutorial one:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"# shell 1\\r\\ngo run worker.go\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"# shell 2\\r\\ngo run new_task.go\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"round-robin-dispatching\",\n      children: \"Round-robin dispatching\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"One of the advantages of using a Task Queue is the ability to easily\\r\\nparallelise work. If we are building up a backlog of work, we can just\\r\\nadd more workers and that way, scale easily.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"First, let's try to run two \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"worker.go\"\n      }), \" scripts at the same time. They\\r\\nwill both get messages from the queue, but how exactly? Let's see.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"You need three consoles open. Two will run the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"worker.go\"\n      }), \"\\r\\nscript. These consoles will be our two consumers - C1 and C2.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"# shell 1\\r\\ngo run worker.go\\r\\n# => [*] Waiting for messages. To exit press CTRL+C\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"# shell 2\\r\\ngo run worker.go\\r\\n# => [*] Waiting for messages. To exit press CTRL+C\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"In the third one we'll publish new tasks. Once you've started\\r\\nthe consumers you can publish a few messages:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"# shell 3\\r\\ngo run new_task.go First message.\\r\\ngo run new_task.go Second message..\\r\\ngo run new_task.go Third message...\\r\\ngo run new_task.go Fourth message....\\r\\ngo run new_task.go Fifth message.....\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Let's see what is delivered to our workers:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"# shell 1\\r\\ngo run worker.go\\r\\n# => [*] Waiting for messages. To exit press CTRL+C\\r\\n# => [x] Received 'First message.'\\r\\n# => [x] Received 'Third message...'\\r\\n# => [x] Received 'Fifth message.....'\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"# shell 2\\r\\ngo run worker.go\\r\\n# => [*] Waiting for messages. To exit press CTRL+C\\r\\n# => [x] Received 'Second message..'\\r\\n# => [x] Received 'Fourth message....'\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"By default, RabbitMQ will send each message to the next consumer,\\r\\nin sequence. On average every consumer will get the same number of\\r\\nmessages. This way of distributing messages is called round-robin. Try\\r\\nthis out with three or more workers.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"message-acknowledgment\",\n      children: \"Message acknowledgment\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Doing a task can take a few seconds, you may wonder what happens if\\r\\na consumer starts a long task and it terminates before it completes.\\r\\nWith our current code, once RabbitMQ delivers a message to the consumer, it\\r\\nimmediately marks it for deletion. In this case, if you terminate a worker,\\r\\nthe message it was just processing is lost. The messages that were dispatched\\r\\nto this particular worker but were not yet handled are also lost.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"But we don't want to lose any tasks. If a worker dies, we'd like the\\r\\ntask to be delivered to another worker.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In order to make sure a message is never lost, RabbitMQ supports\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.a, {\n        href: \"/docs/confirms\",\n        children: [\"message \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n          children: \"acknowledgments\"\n        })]\n      }), \". An ack(nowledgement) is sent back by the\\r\\nconsumer to tell RabbitMQ that a particular message has been received,\\r\\nprocessed and that RabbitMQ is free to delete it.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"If a consumer dies (its channel is closed, connection is closed, or\\r\\nTCP connection is lost) without sending an ack, RabbitMQ will\\r\\nunderstand that a message wasn't processed fully and will re-queue it.\\r\\nIf there are other consumers online at the same time, it will then quickly redeliver it\\r\\nto another consumer. That way you can be sure that no message is lost,\\r\\neven if the workers occasionally die.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"A timeout (30 minutes by default) is enforced on consumer delivery acknowledgement.\\r\\nThis helps detect buggy (stuck) consumers that never acknowledge deliveries.\\r\\nYou can increase this timeout as described in\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/consumers#acknowledgement-timeout\",\n        children: \"Delivery Acknowledgement Timeout\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In this tutorial we will use manual message acknowledgements by passing\\r\\na \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"false\"\n      }), \" for the \\\"auto-ack\\\" argument and then send a proper acknowledgment\\r\\nfrom the worker with \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"d.Ack(false)\"\n      }), \" (this acknowledges a single delivery),\\r\\nonce we're done with a task.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-go\",\n        children: \"msgs, err := ch.Consume(\\r\\n  q.Name, // queue\\r\\n  \\\"\\\",     // consumer\\r\\n  false,  // auto-ack\\r\\n  false,  // exclusive\\r\\n  false,  // no-local\\r\\n  false,  // no-wait\\r\\n  nil,    // args\\r\\n)\\r\\nfailOnError(err, \\\"Failed to register a consumer\\\")\\r\\n\\r\\nvar forever chan struct{}\\r\\n\\r\\ngo func() {\\r\\n  for d := range msgs {\\r\\n    log.Printf(\\\"Received a message: %s\\\", d.Body)\\r\\n    dotCount := bytes.Count(d.Body, []byte(\\\".\\\"))\\r\\n    t := time.Duration(dotCount)\\r\\n    time.Sleep(t * time.Second)\\r\\n    log.Printf(\\\"Done\\\")\\r\\n    d.Ack(false)\\r\\n  }\\r\\n}()\\r\\n\\r\\nlog.Printf(\\\" [*] Waiting for messages. To exit press CTRL+C\\\")\\r\\n<-forever\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Using this code, you can ensure that even if you terminate a worker using\\r\\nCTRL+C while it was processing a message, nothing is lost. Soon\\r\\nafter the worker terminates, all unacknowledged messages are redelivered.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Acknowledgement must be sent on the same channel that received the\\r\\ndelivery. Attempts to acknowledge using a different channel will result\\r\\nin a channel-level protocol exception. See the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/confirms\",\n        children: \"doc guide on confirmations\"\n      }), \"\\r\\nto learn more.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n        id: \"forgotten-acknowledgment\",\n        children: \"Forgotten acknowledgment\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n        children: [\"It's a common mistake to miss the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"ack\"\n        }), \". It's an easy error,\\r\\nbut the consequences are serious. Messages will be redelivered\\r\\nwhen your client quits (which may look like random redelivery), but\\r\\nRabbitMQ will eat more and more memory as it won't be able to release\\r\\nany unacked messages.\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n        children: [\"In order to debug this kind of mistake you can use \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"rabbitmqctl\"\n        }), \"\\r\\nto print the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"messages_unacknowledged\"\n        }), \" field:\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          className: \"language-bash\",\n          children: \"sudo rabbitmqctl list_queues name messages_ready messages_unacknowledged\\n\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: \"On Windows, drop the sudo:\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          className: \"language-bash\",\n          children: \"rabbitmqctl.bat list_queues name messages_ready messages_unacknowledged\\n\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"message-durability\",\n      children: \"Message durability\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"We have learned how to make sure that even if the consumer dies, the\\r\\ntask isn't lost. But our tasks will still be lost if RabbitMQ server stops.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"When RabbitMQ quits or crashes it will forget the queues and messages\\r\\nunless you tell it not to. Two things are required to make sure that\\r\\nmessages aren't lost: we need to mark both the queue and messages as\\r\\ndurable.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"First, we need to make sure that the queue will survive a RabbitMQ node restart.\\r\\nIn order to do so, we need to declare it as \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"durable\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-go\",\n        children: \"q, err := ch.QueueDeclare(\\r\\n  \\\"hello\\\",      // name\\r\\n  true,         // durable\\r\\n  false,        // delete when unused\\r\\n  false,        // exclusive\\r\\n  false,        // no-wait\\r\\n  nil,          // arguments\\r\\n)\\r\\nfailOnError(err, \\\"Failed to declare a queue\\\")\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Although this command is correct by itself, it won't work in our present\\r\\nsetup. That's because we've already defined a queue called \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"hello\"\n      }), \"\\r\\nwhich is not durable. RabbitMQ doesn't allow you to redefine an existing queue\\r\\nwith different parameters and will return an error to any program\\r\\nthat tries to do that. But there is a quick workaround - let's declare\\r\\na queue with different name, for example \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"task_queue\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-go\",\n        children: \"q, err := ch.QueueDeclare(\\r\\n  \\\"task_queue\\\", // name\\r\\n  true,         // durable\\r\\n  false,        // delete when unused\\r\\n  false,        // exclusive\\r\\n  false,        // no-wait\\r\\n  nil,          // arguments\\r\\n)\\r\\nfailOnError(err, \\\"Failed to declare a queue\\\")\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"durable\"\n      }), \" option change needs to be applied to both the producer\\r\\nand consumer code.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"At this point we're sure that the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"task_queue\"\n      }), \" queue won't be lost\\r\\neven if RabbitMQ restarts. Now we need to mark our messages as persistent\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"by using the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"amqp.Persistent\"\n        }), \" option \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"amqp.Publishing\"\n        }), \" takes.\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-go\",\n        children: \"err = ch.PublishWithContext(ctx,\\r\\n  \\\"\\\",           // exchange\\r\\n  q.Name,       // routing key\\r\\n  false,        // mandatory\\r\\n  false,\\r\\n  amqp.Publishing {\\r\\n    DeliveryMode: amqp.Persistent,\\r\\n    ContentType:  \\\"text/plain\\\",\\r\\n    Body:         []byte(body),\\r\\n})\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n        id: \"note-on-message-persistence\",\n        children: \"Note on message persistence\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n        children: [\"Marking messages as persistent doesn't fully guarantee that a message\\r\\nwon't be lost. Although it tells RabbitMQ to save the message to disk,\\r\\nthere is still a short time window when RabbitMQ has accepted a message and\\r\\nhasn't saved it yet. Also, RabbitMQ doesn't do \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"fsync(2)\"\n        }), \" for every\\r\\nmessage -- it may be just saved to cache and not really written to the\\r\\ndisk. The persistence guarantees aren't strong, but it's more than enough\\r\\nfor our simple task queue. If you need a stronger guarantee then you can use\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"/docs/confirms\",\n          children: \"publisher confirms\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"fair-dispatch\",\n      children: \"Fair dispatch\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"You might have noticed that the dispatching still doesn't work exactly\\r\\nas we want. For example in a situation with two workers, when all\\r\\nodd messages are heavy and even messages are light, one worker will be\\r\\nconstantly busy and the other one will do hardly any work. Well,\\r\\nRabbitMQ doesn't know anything about that and will still dispatch\\r\\nmessages evenly.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This happens because RabbitMQ just dispatches a message when the message\\r\\nenters the queue. It doesn't look at the number of unacknowledged\\r\\nmessages for a consumer. It just blindly dispatches every n-th message\\r\\nto the n-th consumer.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_site_src_components_Tutorials_T2DiagramPrefetch_md__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {}), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In order to defeat that we can set the prefetch count with the\\r\\nvalue of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"1\"\n      }), \". This tells RabbitMQ not to give more than\\r\\none message to a worker at a time. Or, in other words, don't dispatch\\r\\na new message to a worker until it has processed and acknowledged the\\r\\nprevious one. Instead, it will dispatch it to the next worker that is not still busy.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-go\",\n        children: \"err = ch.Qos(\\r\\n  1,     // prefetch count\\r\\n  0,     // prefetch size\\r\\n  false, // global\\r\\n)\\r\\nfailOnError(err, \\\"Failed to set QoS\\\")\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n        id: \"note-about-queue-size\",\n        children: \"Note about queue size\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: \"If all the workers are busy, your queue can fill up. You will want to keep an\\r\\neye on that, and maybe add more workers, or have some other strategy.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"putting-it-all-together\",\n      children: \"Putting it all together\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Final code of our \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"new_task.go\"\n      }), \" class:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-go\",\n        children: \"package main\\r\\n\\r\\nimport (\\r\\n        \\\"context\\\"\\r\\n        \\\"log\\\"\\r\\n        \\\"os\\\"\\r\\n        \\\"strings\\\"\\r\\n        \\\"time\\\"\\r\\n\\r\\n        amqp \\\"github.com/rabbitmq/amqp091-go\\\"\\r\\n)\\r\\n\\r\\nfunc failOnError(err error, msg string) {\\r\\n        if err != nil {\\r\\n                log.Panicf(\\\"%s: %s\\\", msg, err)\\r\\n        }\\r\\n}\\r\\n\\r\\nfunc main() {\\r\\n        conn, err := amqp.Dial(\\\"amqp://guest:guest@localhost:5672/\\\")\\r\\n        failOnError(err, \\\"Failed to connect to RabbitMQ\\\")\\r\\n        defer conn.Close()\\r\\n\\r\\n        ch, err := conn.Channel()\\r\\n        failOnError(err, \\\"Failed to open a channel\\\")\\r\\n        defer ch.Close()\\r\\n\\r\\n        q, err := ch.QueueDeclare(\\r\\n                \\\"task_queue\\\", // name\\r\\n                true,         // durable\\r\\n                false,        // delete when unused\\r\\n                false,        // exclusive\\r\\n                false,        // no-wait\\r\\n                nil,          // arguments\\r\\n        )\\r\\n        failOnError(err, \\\"Failed to declare a queue\\\")\\r\\n\\r\\n        ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second)\\r\\n        defer cancel()\\r\\n\\r\\n        body := bodyFrom(os.Args)\\r\\n        err = ch.PublishWithContext(ctx,\\r\\n                \\\"\\\",           // exchange\\r\\n                q.Name,       // routing key\\r\\n                false,        // mandatory\\r\\n                false,\\r\\n                amqp.Publishing{\\r\\n                        DeliveryMode: amqp.Persistent,\\r\\n                        ContentType:  \\\"text/plain\\\",\\r\\n                        Body:         []byte(body),\\r\\n                })\\r\\n        failOnError(err, \\\"Failed to publish a message\\\")\\r\\n        log.Printf(\\\" [x] Sent %s\\\", body)\\r\\n}\\r\\n\\r\\nfunc bodyFrom(args []string) string {\\r\\n        var s string\\r\\n        if (len(args) < 2) || os.Args[1] == \\\"\\\" {\\r\\n                s = \\\"hello\\\"\\r\\n        } else {\\r\\n                s = strings.Join(args[1:], \\\" \\\")\\r\\n        }\\r\\n        return s\\r\\n}\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"http://github.com/rabbitmq/rabbitmq-tutorials/blob/main/go/new_task.go\",\n        children: \"(new_task.go source)\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"And our \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"worker.go\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-go\",\n        children: \"package main\\r\\n\\r\\nimport (\\r\\n        \\\"bytes\\\"\\r\\n        \\\"log\\\"\\r\\n        \\\"time\\\"\\r\\n\\r\\n        amqp \\\"github.com/rabbitmq/amqp091-go\\\"\\r\\n)\\r\\n\\r\\nfunc failOnError(err error, msg string) {\\r\\n        if err != nil {\\r\\n                log.Panicf(\\\"%s: %s\\\", msg, err)\\r\\n        }\\r\\n}\\r\\n\\r\\nfunc main() {\\r\\n        conn, err := amqp.Dial(\\\"amqp://guest:guest@localhost:5672/\\\")\\r\\n        failOnError(err, \\\"Failed to connect to RabbitMQ\\\")\\r\\n        defer conn.Close()\\r\\n\\r\\n        ch, err := conn.Channel()\\r\\n        failOnError(err, \\\"Failed to open a channel\\\")\\r\\n        defer ch.Close()\\r\\n\\r\\n        q, err := ch.QueueDeclare(\\r\\n                \\\"task_queue\\\", // name\\r\\n                true,         // durable\\r\\n                false,        // delete when unused\\r\\n                false,        // exclusive\\r\\n                false,        // no-wait\\r\\n                nil,          // arguments\\r\\n        )\\r\\n        failOnError(err, \\\"Failed to declare a queue\\\")\\r\\n\\r\\n        err = ch.Qos(\\r\\n                1,     // prefetch count\\r\\n                0,     // prefetch size\\r\\n                false, // global\\r\\n        )\\r\\n        failOnError(err, \\\"Failed to set QoS\\\")\\r\\n\\r\\n        msgs, err := ch.Consume(\\r\\n                q.Name, // queue\\r\\n                \\\"\\\",     // consumer\\r\\n                false,  // auto-ack\\r\\n                false,  // exclusive\\r\\n                false,  // no-local\\r\\n                false,  // no-wait\\r\\n                nil,    // args\\r\\n        )\\r\\n        failOnError(err, \\\"Failed to register a consumer\\\")\\r\\n\\r\\n        var forever chan struct{}\\r\\n\\r\\n        go func() {\\r\\n                for d := range msgs {\\r\\n                        log.Printf(\\\"Received a message: %s\\\", d.Body)\\r\\n                        dotCount := bytes.Count(d.Body, []byte(\\\".\\\"))\\r\\n                        t := time.Duration(dotCount)\\r\\n                        time.Sleep(t * time.Second)\\r\\n                        log.Printf(\\\"Done\\\")\\r\\n                        d.Ack(false)\\r\\n                }\\r\\n        }()\\r\\n\\r\\n        log.Printf(\\\" [*] Waiting for messages. To exit press CTRL+C\\\")\\r\\n        <-forever\\r\\n}\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"http://github.com/rabbitmq/rabbitmq-tutorials/blob/main/go/worker.go\",\n        children: \"(worker.go source)\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Using message acknowledgments and prefetch count you can set up a\\r\\nwork queue. The durability options let the tasks survive even if\\r\\nRabbitMQ is restarted.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"For more information on \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"amqp.Channel\"\n      }), \" methods and message properties, you can browse the\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://pkg.go.dev/github.com/rabbitmq/amqp091-go\",\n        children: \"amqp API reference\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Now we can move on to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./tutorial-three-go\",\n        children: \"tutorial 3\"\n      }), \" and learn how\\r\\nto deliver the same message to many consumers.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./tutorials/tutorial-two-go.md\n");

/***/ })

}]);