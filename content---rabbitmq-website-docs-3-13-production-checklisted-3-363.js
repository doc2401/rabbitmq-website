"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkrabbitmq_website"] = globalThis["webpackChunkrabbitmq_website"] || []).push([["content---rabbitmq-website-docs-3-13-production-checklisted-3-363"],{

/***/ "./.docusaurus/docusaurus-plugin-content-docs/default/site-versioned-docs-version-3-13-production-checklist-md-ed3.json":
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"id":"production-checklist","title":"Production Deployment Guidelines","description":"<!--","source":"@site/versioned_docs/version-3.13/production-checklist.md","sourceDirName":".","slug":"/production-checklist","permalink":"/rabbitmq-website/docs/3.13/production-checklist","draft":false,"unlisted":false,"editUrl":"https://github.com/rabbitmq/rabbitmq-website/tree/main/versioned_docs/version-3.13/production-checklist.md","tags":[],"version":"3.13","frontMatter":{"title":"Production Deployment Guidelines"},"sidebar":"docsSidebar","previous":{"title":"Persistence Configuration","permalink":"/rabbitmq-website/docs/3.13/persistence-conf"},"next":{"title":"Troubleshooting RabbitMQ","permalink":"/rabbitmq-website/docs/3.13/troubleshooting/"}}');

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanM/MjA0NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbXBvcnQge01EWENvbXBvbmVudHN9IGZyb20gJ21keC90eXBlcy5qcydcbiAqIEBpbXBvcnQge0NvbXBvbmVudCwgUmVhY3RFbGVtZW50LCBSZWFjdE5vZGV9IGZyb20gJ3JlYWN0J1xuICovXG5cbi8qKlxuICogQGNhbGxiYWNrIE1lcmdlQ29tcG9uZW50c1xuICogICBDdXN0b20gbWVyZ2UgZnVuY3Rpb24uXG4gKiBAcGFyYW0ge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSBjdXJyZW50Q29tcG9uZW50c1xuICogICBDdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgY29udGV4dC5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMuXG4gKlxuICogQHR5cGVkZWYgUHJvcHNcbiAqICAgQ29uZmlndXJhdGlvbiBmb3IgYE1EWFByb3ZpZGVyYC5cbiAqIEBwcm9wZXJ0eSB7UmVhY3ROb2RlIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NoaWxkcmVuXVxuICogICBDaGlsZHJlbiAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbiB8IG51bGwgfCB1bmRlZmluZWR9IFtkaXNhYmxlUGFyZW50Q29udGV4dD1mYWxzZV1cbiAqICAgVHVybiBvZmYgb3V0ZXIgY29tcG9uZW50IGNvbnRleHQgKGRlZmF1bHQ6IGBmYWxzZWApLlxuICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuLyoqIEB0eXBlIHtSZWFkb25seTxNRFhDb21wb25lbnRzPn0gKi9cbmNvbnN0IGVtcHR5Q29tcG9uZW50cyA9IHt9XG5cbmNvbnN0IE1EWENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KGVtcHR5Q29tcG9uZW50cylcblxuLyoqXG4gKiBHZXQgY3VycmVudCBjb21wb25lbnRzIGZyb20gdGhlIE1EWCBDb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz4gfCBNZXJnZUNvbXBvbmVudHMgfCBudWxsIHwgdW5kZWZpbmVkfSBbY29tcG9uZW50c11cbiAqICAgQWRkaXRpb25hbCBjb21wb25lbnRzIHRvIHVzZSBvciBhIGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyB0aGVtIChvcHRpb25hbCkuXG4gKiBAcmV0dXJucyB7TURYQ29tcG9uZW50c31cbiAqICAgQ3VycmVudCBjb21wb25lbnRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlTURYQ29tcG9uZW50cyhjb21wb25lbnRzKSB7XG4gIGNvbnN0IGNvbnRleHRDb21wb25lbnRzID0gUmVhY3QudXNlQ29udGV4dChNRFhDb250ZXh0KVxuXG4gIC8vIE1lbW9pemUgdG8gYXZvaWQgdW5uZWNlc3NhcnkgdG9wLWxldmVsIGNvbnRleHQgY2hhbmdlc1xuICByZXR1cm4gUmVhY3QudXNlTWVtbyhcbiAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBDdXN0b20gbWVyZ2UgdmlhIGEgZnVuY3Rpb24gcHJvcFxuICAgICAgaWYgKHR5cGVvZiBjb21wb25lbnRzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBjb21wb25lbnRzKGNvbnRleHRDb21wb25lbnRzKVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gey4uLmNvbnRleHRDb21wb25lbnRzLCAuLi5jb21wb25lbnRzfVxuICAgIH0sXG4gICAgW2NvbnRleHRDb21wb25lbnRzLCBjb21wb25lbnRzXVxuICApXG59XG5cbi8qKlxuICogUHJvdmlkZXIgZm9yIE1EWCBjb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8UHJvcHM+fSBwcm9wZXJ0aWVzXG4gKiAgIFByb3BlcnRpZXMuXG4gKiBAcmV0dXJucyB7UmVhY3RFbGVtZW50fVxuICogICBFbGVtZW50LlxuICogQHNhdGlzZmllcyB7Q29tcG9uZW50fVxuICovXG5leHBvcnQgZnVuY3Rpb24gTURYUHJvdmlkZXIocHJvcGVydGllcykge1xuICAvKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuICBsZXQgYWxsQ29tcG9uZW50c1xuXG4gIGlmIChwcm9wZXJ0aWVzLmRpc2FibGVQYXJlbnRDb250ZXh0KSB7XG4gICAgYWxsQ29tcG9uZW50cyA9XG4gICAgICB0eXBlb2YgcHJvcGVydGllcy5jb21wb25lbnRzID09PSAnZnVuY3Rpb24nXG4gICAgICAgID8gcHJvcGVydGllcy5jb21wb25lbnRzKGVtcHR5Q29tcG9uZW50cylcbiAgICAgICAgOiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgfHwgZW1wdHlDb21wb25lbnRzXG4gIH0gZWxzZSB7XG4gICAgYWxsQ29tcG9uZW50cyA9IHVzZU1EWENvbXBvbmVudHMocHJvcGVydGllcy5jb21wb25lbnRzKVxuICB9XG5cbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgTURYQ29udGV4dC5Qcm92aWRlcixcbiAgICB7dmFsdWU6IGFsbENvbXBvbmVudHN9LFxuICAgIHByb3BlcnRpZXMuY2hpbGRyZW5cbiAgKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ }),

/***/ "./versioned_docs/version-3.13/production-checklist.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assets: () => (/* binding */ assets),\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   metadata: () => (/* reexport default export from named module */ _site_docusaurus_docusaurus_plugin_content_docs_default_site_versioned_docs_version_3_13_production_checklist_md_ed3_json__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var _site_docusaurus_docusaurus_plugin_content_docs_default_site_versioned_docs_version_3_13_production_checklist_md_ed3_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.docusaurus/docusaurus-plugin-content-docs/default/site-versioned-docs-version-3-13-production-checklist-md-ed3.json\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n\n\nconst frontMatter = {\n\ttitle: 'Production Deployment Guidelines'\n};\nconst contentTitle = 'Production Deployment Guidelines';\n\nconst assets = {\n\n};\n\n\n\nconst toc = [{\n  \"value\": \"Overview\",\n  \"id\": \"overview\",\n  \"level\": 2\n}, {\n  \"value\": \"Table of Contents\",\n  \"id\": \"toc\",\n  \"level\": 2\n}, {\n  \"value\": \"Minimum Hardware Requirements\",\n  \"id\": \"minimum-hardware\",\n  \"level\": 2\n}, {\n  \"value\": \"Storage Considerations\",\n  \"id\": \"storage\",\n  \"level\": 2\n}, {\n  \"value\": \"Use Durable Storage\",\n  \"id\": \"storage-durability\",\n  \"level\": 3\n}, {\n  \"value\": \"Overprovision Disk Space\",\n  \"id\": \"overprovision-disk-space\",\n  \"level\": 3\n}, {\n  \"value\": \"Network-attached Storage (NAS)\",\n  \"id\": \"storage-nas\",\n  \"level\": 3\n}, {\n  \"value\": \"Storage Isolation\",\n  \"id\": \"storage-isolation\",\n  \"level\": 3\n}, {\n  \"value\": \"Choice of a Filesystem\",\n  \"id\": \"storage-filesystems\",\n  \"level\": 3\n}, {\n  \"value\": \"Virtual Hosts, Users, Permissions\",\n  \"id\": \"users-and-permissions\",\n  \"level\": 2\n}, {\n  \"value\": \"Virtual Hosts\",\n  \"id\": \"virtual-hosts\",\n  \"level\": 3\n}, {\n  \"value\": \"Users\",\n  \"id\": \"users\",\n  \"level\": 3\n}, {\n  \"value\": \"Anonymous Login\",\n  \"id\": \"anonymous-login\",\n  \"level\": 3\n}, {\n  \"value\": \"Monitoring and Resource Limits\",\n  \"id\": \"monitoring-and-resource-usage\",\n  \"level\": 2\n}, {\n  \"value\": \"Monitoring\",\n  \"id\": \"monitoring\",\n  \"level\": 3\n}, {\n  \"value\": \"Memory\",\n  \"id\": \"resource-limits-ram\",\n  \"level\": 3\n}, {\n  \"value\": \"Disk Space\",\n  \"id\": \"resource-limits-disk-space\",\n  \"level\": 3\n}, {\n  \"value\": \"Open File Handles Limit\",\n  \"id\": \"resource-limits-file-handle-limit\",\n  \"level\": 3\n}, {\n  \"value\": \"Log Collection\",\n  \"id\": \"logging\",\n  \"level\": 3\n}, {\n  \"value\": \"Per-Virtual Host and Per-User Resource Limits\",\n  \"id\": \"limits\",\n  \"level\": 2\n}, {\n  \"value\": \"Security Considerations\",\n  \"id\": \"security\",\n  \"level\": 2\n}, {\n  \"value\": \"Users and Permissions\",\n  \"id\": \"security-users-and-permissions\",\n  \"level\": 3\n}, {\n  \"value\": \"Inter-node and CLI Tool Authentication\",\n  \"id\": \"inter-node-authentication\",\n  \"level\": 3\n}, {\n  \"value\": \"Firewall Configuration\",\n  \"id\": \"security-firewall-rules\",\n  \"level\": 3\n}, {\n  \"value\": \"TLS\",\n  \"id\": \"security-tls\",\n  \"level\": 3\n}, {\n  \"value\": \"Networking Configuration\",\n  \"id\": \"networking\",\n  \"level\": 2\n}, {\n  \"value\": \"Minimum Available Network Throughput Estimate\",\n  \"id\": \"networking-throughput\",\n  \"level\": 3\n}, {\n  \"value\": \"Clustering Considerations\",\n  \"id\": \"clustering\",\n  \"level\": 2\n}, {\n  \"value\": \"Cluster Size\",\n  \"id\": \"clustering-cluster-size\",\n  \"level\": 3\n}, {\n  \"value\": \"Uneven Numbers of Nodes and Cluster Majority\",\n  \"id\": \"uneven-numbers-of-nodes-and-cluster-majority\",\n  \"level\": 4\n}, {\n  \"value\": \"Data Locality Considerations\",\n  \"id\": \"data-locality-considerations\",\n  \"level\": 4\n}, {\n  \"value\": \"Growing Node Count to Sustain More Concurrent Clients\",\n  \"id\": \"growing-node-count-to-sustain-more-concurrent-clients\",\n  \"level\": 4\n}, {\n  \"value\": \"Increasing Node Counts vs. Deploying Separate Clusters for Separate Purposes\",\n  \"id\": \"increasing-node-counts-vs-deploying-separate-clusters-for-separate-purposes\",\n  \"level\": 4\n}, {\n  \"value\": \"Node Time Synchronization\",\n  \"id\": \"clustering-ntp\",\n  \"level\": 3\n}, {\n  \"value\": \"Application Considerations\",\n  \"id\": \"apps\",\n  \"level\": 2\n}, {\n  \"value\": \"Connection Management\",\n  \"id\": \"apps-connection-management\",\n  \"level\": 3\n}, {\n  \"value\": \"Connection Churn\",\n  \"id\": \"apps-connection-churn\",\n  \"level\": 3\n}, {\n  \"value\": \"Recovery from Connection Failures\",\n  \"id\": \"apps-automatic-recovery\",\n  \"level\": 3\n}, {\n  \"value\": \"Excessive Channel Usage\",\n  \"id\": \"apps-excessive-channel-usage\",\n  \"level\": 3\n}, {\n  \"value\": \"Polling Consumers\",\n  \"id\": \"apps-polling-consumers\",\n  \"level\": 3\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    admonition: \"admonition\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.header, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1, {\n        id: \"production-deployment-guidelines\",\n        children: \"Production Deployment Guidelines\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"overview\",\n      children: \"Overview\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Data services such as RabbitMQ often have many tunable\\r\\nparameters. Some configurations or practices make a lot of sense for\\r\\ndevelopment but are not really suitable for production.  No\\r\\nsingle configuration fits every use case. It is, therefore,\\r\\nimportant to assess system configuration and have a plan for \\\"day two operations\\\"\\r\\nactivities such as \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./upgrade\",\n        children: \"upgrades\"\n      }), \" before going into production.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"toc\",\n      children: \"Table of Contents\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Production systems have concerns that go beyond configuration: system observability,\\r\\nsecurity, application development practices, resource usage, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/release-information\",\n        children: \"release support timeline\"\n      }), \", and more.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./monitoring\",\n        children: \"Monitoring\"\n      }), \" and metrics are the foundation of a production-grade system.\\r\\nBesides helping detect issues, it provides the operator data that can be used\\r\\nto size and configure both RabbitMQ nodes and applications.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This guide provides recommendations in a few areas:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {}), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#storage\",\n          children: \"Storage\"\n        }), \" considerations for node data directories\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#networking\",\n          children: \"Networking\"\n        }), \"-related recommendations\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Recommendations related to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#users-and-permissions\",\n          children: \"virtual hosts, users and permissions\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#monitoring-and-resource-usage\",\n          children: \"Monitoring and resource usage\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#limits\",\n          children: \"Per-virtual host and per-user limits\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#security\",\n          children: \"Security\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#clustering\",\n          children: \"Clustering\"\n        }), \" and multi-node deployments\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#apps\",\n          children: \"Application-level\"\n        }), \" practices and considerations\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"and more.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"minimum-hardware\",\n      children: \"Minimum Hardware Requirements\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"RabbitMQ can used with a broad range of workloads. Some may be very I/O heavy\\r\\n(streams), others can require more CPU resources (large number of concurrent connections and queues).\\r\\nThose workloads may require a different mix of CPU, storage and network resources.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.admonition, {\n      type: \"tip\",\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: \"This section describes a recommended minimum of resources for production systems.\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Below is a minimum system requirements for production deployments, per node:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"No colocation with other data services (e.g. data stores) or disk, network I/O heavy applications\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"4 CPU cores\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"4 GiB of RAM\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"See \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#storage\",\n          children: \"Storage\"\n        }), \" below for storage\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Lower-spec environments can be acceptable for certain less loaded environments, for quality assurance and development\\r\\nenvironments.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.admonition, {\n      type: \"danger\",\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: \"RabbitMQ was not designed to run in environments with a single CPU core, or being colocated with\\r\\nother disk and network I/O-heavy tools.\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"storage\",\n      children: \"Storage Considerations\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"storage-durability\",\n      children: \"Use Durable Storage\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.admonition, {\n      type: \"important\",\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n        children: [\"Modern RabbitMQ features, such \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./quorum-queues\",\n          children: \"quorum queues\"\n        }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./streams\",\n          children: \"streams\"\n        }), \",\\r\\nare designed for durable storage only.\"]\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Data safety features of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./quorum-queues\",\n        children: \"quorum queues\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./streams\",\n        children: \"streams\"\n      }), \" expect\\r\\nnode data storage to be durable. Both data structures also assume reasonably stable latency of I/O\\r\\noperations, something that network-attached storage will not be always ready to provide in practice.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Quorum queue and stream replicas hosted on restarted nodes that use transient storage will have\\r\\nto perform a full sync of the entire data set on the leader replica. This can result in massive\\r\\ndata transfers and network link overload that could have been avoided by using durable storage.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"When nodes are restarted, the rest of the cluster expects them to retain the information\\r\\nabout their cluster peers. When this is not the case, restarted nodes may be able to rejoin\\r\\nas new nodes but a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./cluster-formation#node-health-checks-and-cleanup\",\n        children: \"special peer clean up mechanism\"\n      }), \"\\r\\nwould have to be enabled to remove their prior identities.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Transient entities (such as queues) and RAM node support will be removed in RabbitMQ 4.x.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"overprovision-disk-space\",\n      children: \"Overprovision Disk Space\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.admonition, {\n      type: \"important\",\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: \"The rule of thumb is: when in doubt, overprovision the disks that RabbitMQ nodes will use.\\r\\nQuorum queues and streams can have substantial on-disk footprint.\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Quorum queues and streams can have substantial on-disk footprint. Depending on the workload\\r\\nand settings, they may or may not reclaim disk space of consumed and confirmed or expired\\r\\nmessages quickly.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#resource-limits-disk-space\",\n        children: \"Disk space to RAM ratio recommendations\"\n      }), \" are listed below.\\r\\nThe rule of thumb is: when in doubt, overprovision the disks that RabbitMQ nodes will use.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"storage-nas\",\n      children: \"Network-attached Storage (NAS)\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Network-attached storage (NAS) can be used for RabbitMQ node data directories, provided that\\r\\nthe NAS volume\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"It offers low I/O latency\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"It can guarantee no significant latency spikes (for example, due to sharing with other I/O-heavy services)\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Quorum queues, streams, and other RabbitMQ features will benefit from fast local SSD and NVMe storage.\\r\\nWhen possible, prefer local storage to NAS.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"storage-isolation\",\n      children: \"Storage Isolation\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"RabbitMQ nodes must never share their data directories. Ideally, should not share their\\r\\ndisk I/O with other services for most predictable latency and throughput.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"storage-filesystems\",\n      children: \"Choice of a Filesystem\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"RabbitMQ nodes can use most widely used local filesystems: ext4, btfs, and so on.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Avoid using distributed filesystems for node data directories:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"RabbitMQ's storage subsystem assumes the standard local filesystem semantics for \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"fsync(2)\"\n        }), \"\\r\\nand other key operations. Distributed filesystems often \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"https://docs.ceph.com/en/latest/cephfs/posix/\",\n          children: \"deviate from these standard guarantees\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Distributed filesystems are usually designed for shared access to a subset of directories.\\r\\nSharing a data directory between RabbitMQ nodes is \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n          children: \"an absolute no-no\"\n        }), \" and\\r\\nis guaranteed to result in data corruption since nodes will not coordinate their writes\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"users-and-permissions\",\n      children: \"Virtual Hosts, Users, Permissions\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"It is often necessary to seed a cluster with virtual hosts, users, permissions, topologies, policies\\r\\nand so on. The recommended way of doing this at deployment time is \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./definitions\",\n        children: \"via definition import\"\n      }), \".\\r\\nDefinitions can be imported on node boot or at any point after cluster deployment\\r\\nusing \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqadmin\"\n      }), \" or the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"POST /api/definitions\"\n      }), \" \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./management\",\n        children: \"HTTP API endpoint\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"virtual-hosts\",\n      children: \"Virtual Hosts\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In a single-tenant environment, for example, when your RabbitMQ\\r\\ncluster is dedicated to power a single system in production,\\r\\nusing default virtual host (\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"/\"\n      }), \") is perfectly fine.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In multi-tenant environments, use a separate vhost for\\r\\neach tenant/environment, e.g. \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"project1_development\"\n      }), \",\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"project1_production\"\n      }), \", \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"project2_development\"\n      }), \",\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"project2_production\"\n      }), \", and so on.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"users\",\n      children: \"Users\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"For production environments, delete the default user (\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"guest\"\n      }), \").\\r\\nDefault user only can connect from localhost by default, because it has well-known\\r\\ncredentials. Instead of enabling remote connections, consider creating a separate user\\r\\nwith administrative permissions and a generated password.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"It is recommended to use a separate user per application. For example, if you\\r\\nhave a mobile app, a Web app, and a data aggregation system, you'd have 3\\r\\nseparate users. This makes a number of things easier:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Correlating client connections with applications\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Using \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./access-control\",\n          children: \"fine-grained permissions\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Credentials roll-over (e.g. periodically or in case of a breach)\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"In case there are many instances of the same application, there's a trade-off\\r\\nbetween better security (having a set of credentials per instance) and convenience\\r\\nof provisioning (sharing a set of credentials between some or all instances).\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"For IoT applications that involve many clients performing the same or similar\\r\\nfunction and having fixed IP addresses, it may make sense to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./ssl\",\n        children: \"authenticate using x509 certificates\"\n      }), \" or\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/gotthardp/rabbitmq-auth-backend-ip-range\",\n        children: \"source IP address ranges\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"anonymous-login\",\n      children: \"Anonymous Login\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"For production environments, it is almost always a good idea to disable anonymous logins.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"You can disable the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"ANONYMOUS\"\n      }), \" \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"access-control#mechanisms\",\n        children: \"SASL mechansim\"\n      }), \" in \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"configure#config-file\",\n        children: \"rabbitmq.conf\"\n      }), \" as follows:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-ini\",\n        children: \"auth_mechanisms.1 = PLAIN\\r\\nauth_mechanisms.2 = AMQPLAIN\\r\\n# note: the ANONYMOUS mechanism is not listed\\r\\n\\r\\n# Value none has a special meaning that no user is configured for anonymous logins.\\r\\nanonymous_login_user = none\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"monitoring-and-resource-usage\",\n      children: \"Monitoring and Resource Limits\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"RabbitMQ nodes are limited by various resources, both physical\\r\\n(e.g. the amount of RAM available) as well as software (e.g. max number of file handles a process can open).\\r\\nIt is important to evaluate resource limit configurations before\\r\\ngoing into production and continuously monitor resource usage after that.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"monitoring\",\n      children: \"Monitoring\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./monitoring\",\n        children: \"Monitoring\"\n      }), \" several aspects of the system, from\\r\\ninfrastructure and kernel metrics to RabbitMQ to application-level metrics is essential.\\r\\nWhile monitoring requires an upfront investment in terms of time, it is very effective\\r\\nat catching issues and noticing potentially problematic trends early (or at all).\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"resource-limits-ram\",\n      children: \"Memory\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"RabbitMQ uses \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./alarms\",\n        children: \"Resource-driven alarms\"\n      }), \"\\r\\nto throttle publishers when consumers do not keep up.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"By default, RabbitMQ will not accept any new messages when it detects\\r\\nthat it's using more than 60% of the available memory (as reported by the OS):\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"vm_memory_high_watermark.relative = 0.6\"\n      }), \". This is a safe default\\r\\nand care should be taken when modifying this value, even when the\\r\\nhost is a dedicated RabbitMQ node.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The OS and file system use system memory to speed up operations for\\r\\nall system processes. Failing to leave enough free system memory for\\r\\nthis purpose will have an adverse effect on system performance due to\\r\\nOS swapping, and can even result in RabbitMQ process termination.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"A few recommendations when adjusting the default\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"vm_memory_high_watermark\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Nodes hosting RabbitMQ should have at least \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"strong\", {\n          children: \"256 MiB\"\n        }), \" of\\r\\nmemory available at all times. Deployments that use \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./quorum-queues\",\n          children: \"quorum queues\"\n        }), \" require more,\\r\\nsee \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./quorum-queues#resource-use\",\n          children: \"how quorum queue use resources\"\n        }), \" for more informatio.\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"The recommended \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"vm_memory_high_watermark.relative\"\n        }), \" range is \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"0.4 to 0.7\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Values above \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"0.7\"\n        }), \" should be used with care and with solid \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./memory-use\",\n          children: \"memory usage\"\n        }), \" and infrastructure-level \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./monitoring\",\n          children: \"monitoring\"\n        }), \" in place.\\r\\nThe OS and file system must be left with at least 30% of the memory, otherwise performance may degrade severely due to paging.\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"These are some very broad-stroked guidelines.\\r\\nAs with every tuning scenario, monitoring, benchmarking and measuring are required to find\\r\\nthe best setting for the environment and workload.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Learn more about \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./memory\",\n        children: \"RabbitMQ and system memory\"\n      }), \" in a separate guide.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"resource-limits-disk-space\",\n      children: \"Disk Space\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The current 50MB \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"disk_free_limit\"\n      }), \" default works very well for\\r\\ndevelopment and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/tutorials\",\n        children: \"tutorials\"\n      }), \".\\r\\nProduction deployments require a much greater safety margin.\\r\\nInsufficient disk space will lead to node failures and may result in data loss\\r\\nas all disk writes will fail.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Why is the default 50MB then? Development\\r\\nenvironments sometimes use really small partitions to host\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"/var/lib\"\n      }), \", for example, which means nodes go\\r\\ninto resource alarm state right after booting. The very low\\r\\ndefault ensures that RabbitMQ works out of the box for\\r\\neveryone. As for production deployments, we recommend the\\r\\nfollowing:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The minimum recommended free disk space low watermark value is about the same\\r\\nas the high memory watermark. For example, on a node configured to have its memory watermark of 4GB,\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"disk_free_limit.absolute = 4G\"\n      }), \" would be a recommended minimum.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.admonition, {\n      type: \"warning\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: \"Nodes running out of disk space should be considered a very serious operational problem,\\r\\ncommonly leading to outages and possibly data loss for the affected node.\"\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n        children: [\"When in doubt, overprovision the disk space and/or use a high \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"disk_free_limit\"\n        }), \".\"]\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"resource-limits-file-handle-limit\",\n      children: \"Open File Handles Limit\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Operating systems limit maximum number of concurrently open file handles, which\\r\\nincludes network sockets. Make sure that you have limits set high enough to allow\\r\\nfor expected number of concurrent connections and queues.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Make sure production environments allow for at least 50K open file descriptors for effective RabbitMQ\\r\\nuser, including in development environments.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"As a guideline, multiply the 95th percentile number of concurrent connections\\r\\nby 2 and add the total number of queues to calculate the recommended open file handle limit.\\r\\nValues as high as 500K are not inadequate and\\r\\nwill not consume a lot of hardware resources, therefore, they are recommended for production\\r\\nsetups.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"See \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./networking\",\n        children: \"Networking guide\"\n      }), \" for more information.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"logging\",\n      children: \"Log Collection\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"It is highly recommended that logs of all RabbitMQ nodes and applications (when possible) are collected\\r\\nand aggregated. Logs can be crucially important in investigating unusual system behaviour.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"limits\",\n      children: \"Per-Virtual Host and Per-User Resource Limits\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"It is possible to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./vhosts#limits\",\n        children: \"limit the maximum number of concurrent connections and queues\"\n      }), \" a virtual host will\\r\\nallow the users to open (declare).\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"These limits can be used as guard rails in environments where applications\\r\\ncannot be trusted and monitored in detail, for example, when RabbitMQ clusters\\r\\nare offered as a service.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Similarly, it is possible to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./user-limits\",\n        children: \"configure concurrent connection and channel limits\\r\\nfor individual users\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"security\",\n      children: \"Security Considerations\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"security-users-and-permissions\",\n      children: \"Users and Permissions\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"See the section on vhosts, users, and credentials above.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"inter-node-authentication\",\n      children: \"Inter-node and CLI Tool Authentication\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"RabbitMQ nodes authenticate to each other using a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./clustering#erlang-cookie\",\n        children: \"shared secret\"\n      }), \"\\r\\nstored in a file. On Linux and other UNIX-like systems, it is necessary to restrict cookie file\\r\\naccess only to the OS users that will run RabbitMQ and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./cli\",\n        children: \"CLI tools\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"It is important that the value is generated in a reasonably secure way\\r\\n(e.g. not computed from an easy to guess value). This is usually done using deployment\\r\\nautomation tools at the time of initial deployment. Those tools can use default or\\r\\nplaceholder values: don't rely on them. Allowing the runtime to generate a cookie file\\r\\non one node and copying it to all other nodes is also a poor practice: it makes the generated value\\r\\nmore predictable since the generation algorithm is known.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"CLI tools use the same authentication mechanism. It is recommended that\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./clustering#ports\",\n        children: \"inter-node and CLI communication port\"\n      }), \"\\r\\naccess is limited to the hosts that run RabbitMQ nodes or CLI tools.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./clustering-ssl\",\n        children: \"Securing inter-node communication with TLS\"\n      }), \" is recommended.\\r\\nIt implies that CLI tools are also configured to use TLS.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"security-firewall-rules\",\n      children: \"Firewall Configuration\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./networking#ports\",\n        children: \"Ports used by RabbitMQ\"\n      }), \" can be broadly put into\\r\\none of two categories:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"ul\", {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n        children: \"Ports used by client libraries (AMQP 0-9-1, AMQP 1.0, MQTT, STOMP, HTTP API)\"\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"li\", {\n        children: \"All other ports (inter node communication, CLI tools and so on)\"\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Access to ports from the latter category generally should be restricted to hosts running RabbitMQ nodes\\r\\nor CLI tools. Ports in the former category should be accessible to hosts that run applications,\\r\\nwhich in some cases can mean public networks, for example, behind a load balancer.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"security-tls\",\n      children: \"TLS\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"We recommend using \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./ssl\",\n        children: \"TLS connections\"\n      }), \" when possible,\\r\\nat least to encrypt traffic. Peer verification (authentication) is also recommended.\\r\\nDevelopment and QA environments can use \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/tls-gen/\",\n        children: \"self-signed TLS certificates\"\n      }), \".\\r\\nSelf-signed certificates can be appropriate in production environments when\\r\\nRabbitMQ and all applications run on a trusted network or isolated using technologies\\r\\nsuch as VMware NSX.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"While RabbitMQ tries to offer a reasonably secure TLS configuration by\\r\\ndefault, it is highly recommended evaluating\\r\\nTLS configuration (versions cipher suites and so on) using tools such as \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://testssl.sh/\",\n        children: \"testssl.sh\"\n      }), \".\\r\\nPlease refer to the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./ssl\",\n        children: \"TLS guide\"\n      }), \" to learn more.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Note that TLS can have significant impact on overall system throughput,\\r\\nincluding CPU usage of both RabbitMQ and applications that use it.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"networking\",\n      children: \"Networking Configuration\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Production environments may require network configuration\\r\\ntuning, for example, to sustain a high number of concurrent clients.\\r\\nPlease refer to the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./networking\",\n        children: \"Networking Guide\"\n      }), \" for details.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"networking-throughput\",\n      children: \"Minimum Available Network Throughput Estimate\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"With higher message rates and large message payloads, traffic bandwidth available to cluster nodes becomes an important\\r\\nfactor.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The following (intentionally oversimplified) formula can be used to compute the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"minimum amount of bandwidth\"\n      }), \"\\r\\nthat must be available to cluster nodes, in bits per second:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-ini\",\n        children: \"MR * MS * 110% * 8\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"where\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"MR\"\n        }), \": 95th percentile message rate per second\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"MS\"\n        }), \": 95th percentile message size, in bytes\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"110%: accounts for message properties, protocol metadata, and other data transferred\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"8: bits per byte\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"For example, with a message rate (\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"MR\"\n      }), \") of 20K per second and 6 KB message payloads (\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"MS\"\n      }), \"):\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-ini\",\n        children: \"20K * 6 KB * 110% * 8 bit/B = 20000 * 6000 * 1.1 * 8 = 1.056 (gigabit/second)\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"With the above inputs, cluster nodes must have network links with throughput of at least 1.056 gigabit per second.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This formula \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"is a rule of thumb\"\n      }), \" and does not consider protocol- or workload-specific nuances.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"clustering\",\n      children: \"Clustering Considerations\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"clustering-cluster-size\",\n      children: \"Cluster Size\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The number of queues, queue replication factor, number of connections, maximum\\r\\nmessage backlog and sometimes message throughput are factors that determine how\\r\\nlarge should a cluster be.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Single node clusters can be sufficient when simplicity is\\r\\npreferred over everything else: development, integration testing and certain QA environments.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Three node clusters are the next step up. They can tolerate a single node\\r\\nfailure (or unavailability) and still \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./quorum-queues\",\n        children: \"maintain quorum\"\n      }), \".\\r\\nSimplicity is traded off for availability, resiliency and, in certain cases, throughput.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"It is recommended to use clusters with an odd\\r\\nnumber of nodes (3, 5, 7, etc) so that when one node becomes unavailable, the\\r\\nservice remains available and a clear majority of nodes can be identified.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"For most environments, configuring queue replication to more than half — but not all —\\r\\ncluster nodes is sufficient.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"uneven-numbers-of-nodes-and-cluster-majority\",\n      children: \"Uneven Numbers of Nodes and Cluster Majority\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"It is important to pick a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./partitions\",\n        children: \"partition handling strategy\"\n      }), \" before going into production.\\r\\nWhen in doubt, use the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"pause_minority\"\n      }), \" strategy with an odd number of nodes (3, 5, 7, and so on).\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Uneven number of nodes make network partition recovery more predictable, with the common option\\r\\nof the minority automatically refusing to service commands.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"data-locality-considerations\",\n      children: \"Data Locality Considerations\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"With multi-node clusters, data locality becomes an important consideration.\\r\\nSince \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./clustering\",\n        children: \"clients can connect to any node\"\n      }), \", RabbitMQ nodes may need to perform\\r\\ninter-cluster routing of messages and internal operations. Data locality will be best\\r\\nwhen producers (publishers) connect to RabbitMQ nodes where queue leaders are running.\\r\\nSuch topology is difficult to achieve in practice.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"With classic queues, all deliveries are performed from the leader replica.\\r\\nQuorum queues can deliver messages from queue replicas as well,\\r\\nso as long as consumers connect to a node where a\\r\\nquorum queue replica is hosted, messages delivered to those consumers will be\\r\\nperformed from the local node.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"growing-node-count-to-sustain-more-concurrent-clients\",\n      children: \"Growing Node Count to Sustain More Concurrent Clients\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Environments that have to sustain a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./networking#tuning-for-large-number-of-connections\",\n        children: \"large number of concurrent client connections\"\n      }), \"\\r\\nwill benefit from more cluster nodes as long as the connections are distributed\\r\\nacross them. This can be achieved using a load balancer or making clients\\r\\nrandomly pick a node to connect to from the provided node list.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"increasing-node-counts-vs-deploying-separate-clusters-for-separate-purposes\",\n      children: \"Increasing Node Counts vs. Deploying Separate Clusters for Separate Purposes\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"All metadata (\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./definitions\",\n        children: \"definitions\"\n      }), \": virtual hosts, users, queues, exchanges, bindings, etc.) is replicated\\r\\nacross all nodes in the cluster, and most metadata changes are synchronous in nature.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The cost of propagating such changes goes up with the number of cluster nodes,\\r\\nboth during operations and node restarts. Users who find themselves in need of\\r\\nclusters with node counts in double digits should\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"consider using independent clusters for separate parts of the system\"\n      }), \" where possible.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"clustering-ntp\",\n      children: \"Node Time Synchronization\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"A RabbitMQ cluster will typically function well without clocks\\r\\nof participating servers being synchronized. However some plugins,\\r\\nsuch as the management one, make use of local timestamps for metrics\\r\\nprocessing and may display incorrect statistics when the current\\r\\ntime of nodes drift apart. It is therefore recommended that servers\\r\\nuse NTP or similar to ensure clocks remain in sync.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"apps\",\n      children: \"Application Considerations\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The way applications are designed and use RabbitMQ client libraries\\r\\nis a major contributor to the overall system resilience. Applications\\r\\nthat use resources inefficiently or leak them will eventually affect the\\r\\nrest of the system. For example, an app that continuously opens connections\\r\\nbut never closes them will exhaust cluster nodes out of file descriptors so\\r\\nno new connections will be accepted. This and similar problems can\\r\\nmanifest themselves in more complex scenarios, e.g those collectively\\r\\nknown as the thundering herd problem.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This section covers a number of most common problems. Most of these problems\\r\\nare generally not protocol-specific or new. They can be hard to detect, however.\\r\\nAdequate \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./monitoring\",\n        children: \"monitoring\"\n      }), \" of the system is critically\\r\\nimportant as it is the only way to spot problematic trends\\r\\n(e.g. channel leaks, growing file descriptor usage from poor connection management) early.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"apps-connection-management\",\n      children: \"Connection Management\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Messaging protocols generally assume long-lived connections. Some applications\\r\\nconnect to RabbitMQ on start and only close the connection(s) when they have to terminate.\\r\\nOthers open and close connections more dynamically. For the latter group it is important to close\\r\\nthem when they are no longer used.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Connections can be closed for reasons outside of application developer's control.\\r\\nMessaging protocols supported by RabbitMQ use a feature called \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./heartbeats\",\n        children: \"heartbeats\"\n      }), \" (the name\\r\\nmay vary but the concept does not) to detect such connections quicker than the TCP stack.\\r\\nDevelopers should be careful about using heartbeat timeout that are too low (less than 5 seconds)\\r\\nas that may produce false positives when network congestion or system load goes up.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Very short lived connections should be avoided when possible. The following section\\r\\nwill cover this in more detail.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"It is recommended that, when possible, publishers and consumers use separate connections\\r\\nso that consumers are isolated from potential \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./connections#flow-control\",\n        children: \"flow control\"\n      }), \"\\r\\nthat may be applied to publishing connections, affecting \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./confirms\",\n        children: \"manual consumer acknowledgements\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"apps-connection-churn\",\n      children: \"Connection Churn\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"As mentioned above, messaging protocols generally assume long-lived connections. Some applications\\r\\nmay open a new connection to perform a single operation (e.g. publish a message) and then close it.\\r\\nThis is highly inefficient as opening a connection is an expensive operation (compared to reusing\\r\\nan existing one). Such workload also leads to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./networking#dealing-with-high-connection-churn\",\n        children: \"connection churn\"\n      }), \".\\r\\nNodes experiencing high connection churn must be tuned to release TCP connections much quicker than\\r\\nkernel defaults, otherwise they will eventually run out of file handles or memory and will stop\\r\\naccepting new connections.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"If a small number of long lived connections is not an option, connection pooling can help\\r\\nreduce peak resource usage.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"apps-automatic-recovery\",\n      children: \"Recovery from Connection Failures\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Some client libraries, for example, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/client-libraries/java-api-guide\",\n        children: \"Java\"\n      }), \",\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/client-libraries/dotnet-api-guide\",\n        children: \".NET\"\n      }), \" and\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"http://rubybunny.info\",\n        children: \"Ruby\"\n      }), \", support\\r\\nautomatic connection recovery after network failures. If the\\r\\nclient used provides this feature, it is recommended to use\\r\\nit instead of developing your own recovery mechanism.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Other clients (Go, Pika) do not support automatic connection recovery as a feature\\r\\nbut do provide examples that demonstrate how to recover from connection failures.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"apps-excessive-channel-usage\",\n      children: \"Excessive Channel Usage\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Channels also consume resources in both client and server. Applications should minimize\\r\\nthe number of channels they use when possible and close channels that are no longer necessary.\\r\\nChannels, like connections, are meant to be long lived.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Note that closing a connection automatically closes all channels on it.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"apps-polling-consumers\",\n      children: \"Polling Consumers\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./consumers#polling\",\n        children: \"Polling consumers\"\n      }), \" (consumption with \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"basic.get\"\n      }), \") is a feature that application developers\\r\\nshould avoid in most cases as polling is inherently inefficient.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi92ZXJzaW9uZWRfZG9jcy92ZXJzaW9uLTMuMTMvcHJvZHVjdGlvbi1jaGVja2xpc3QubWQiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWJiaXRtcS13ZWJzaXRlLy4vdmVyc2lvbmVkX2RvY3MvdmVyc2lvbi0zLjEzL3Byb2R1Y3Rpb24tY2hlY2tsaXN0Lm1kPzJlY2QiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cbmV4cG9ydCBjb25zdCBmcm9udE1hdHRlciA9IHtcblx0dGl0bGU6ICdQcm9kdWN0aW9uIERlcGxveW1lbnQgR3VpZGVsaW5lcydcbn07XG5leHBvcnQgY29uc3QgY29udGVudFRpdGxlID0gJ1Byb2R1Y3Rpb24gRGVwbG95bWVudCBHdWlkZWxpbmVzJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBtZXRhZGF0YX0gZnJvbSAnQHNpdGUvLmRvY3VzYXVydXMvZG9jdXNhdXJ1cy1wbHVnaW4tY29udGVudC1kb2NzL2RlZmF1bHQvc2l0ZS12ZXJzaW9uZWQtZG9jcy12ZXJzaW9uLTMtMTMtcHJvZHVjdGlvbi1jaGVja2xpc3QtbWQtZWQzLmpzb24nXG5leHBvcnQgY29uc3QgYXNzZXRzID0ge1xuXG59O1xuXG5pbXBvcnQge0ZyYWdtZW50IGFzIF9GcmFnbWVudCwganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHN9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuaW1wb3J0IHt1c2VNRFhDb21wb25lbnRzIGFzIF9wcm92aWRlQ29tcG9uZW50c30gZnJvbSBcIkBtZHgtanMvcmVhY3RcIjtcbmV4cG9ydCBjb25zdCB0b2MgPSBbe1xuICBcInZhbHVlXCI6IFwiT3ZlcnZpZXdcIixcbiAgXCJpZFwiOiBcIm92ZXJ2aWV3XCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwiVGFibGUgb2YgQ29udGVudHNcIixcbiAgXCJpZFwiOiBcInRvY1wiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIk1pbmltdW0gSGFyZHdhcmUgUmVxdWlyZW1lbnRzXCIsXG4gIFwiaWRcIjogXCJtaW5pbXVtLWhhcmR3YXJlXCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwiU3RvcmFnZSBDb25zaWRlcmF0aW9uc1wiLFxuICBcImlkXCI6IFwic3RvcmFnZVwiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIlVzZSBEdXJhYmxlIFN0b3JhZ2VcIixcbiAgXCJpZFwiOiBcInN0b3JhZ2UtZHVyYWJpbGl0eVwiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIk92ZXJwcm92aXNpb24gRGlzayBTcGFjZVwiLFxuICBcImlkXCI6IFwib3ZlcnByb3Zpc2lvbi1kaXNrLXNwYWNlXCIsXG4gIFwibGV2ZWxcIjogM1xufSwge1xuICBcInZhbHVlXCI6IFwiTmV0d29yay1hdHRhY2hlZCBTdG9yYWdlIChOQVMpXCIsXG4gIFwiaWRcIjogXCJzdG9yYWdlLW5hc1wiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIlN0b3JhZ2UgSXNvbGF0aW9uXCIsXG4gIFwiaWRcIjogXCJzdG9yYWdlLWlzb2xhdGlvblwiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkNob2ljZSBvZiBhIEZpbGVzeXN0ZW1cIixcbiAgXCJpZFwiOiBcInN0b3JhZ2UtZmlsZXN5c3RlbXNcIixcbiAgXCJsZXZlbFwiOiAzXG59LCB7XG4gIFwidmFsdWVcIjogXCJWaXJ0dWFsIEhvc3RzLCBVc2VycywgUGVybWlzc2lvbnNcIixcbiAgXCJpZFwiOiBcInVzZXJzLWFuZC1wZXJtaXNzaW9uc1wiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIlZpcnR1YWwgSG9zdHNcIixcbiAgXCJpZFwiOiBcInZpcnR1YWwtaG9zdHNcIixcbiAgXCJsZXZlbFwiOiAzXG59LCB7XG4gIFwidmFsdWVcIjogXCJVc2Vyc1wiLFxuICBcImlkXCI6IFwidXNlcnNcIixcbiAgXCJsZXZlbFwiOiAzXG59LCB7XG4gIFwidmFsdWVcIjogXCJBbm9ueW1vdXMgTG9naW5cIixcbiAgXCJpZFwiOiBcImFub255bW91cy1sb2dpblwiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIk1vbml0b3JpbmcgYW5kIFJlc291cmNlIExpbWl0c1wiLFxuICBcImlkXCI6IFwibW9uaXRvcmluZy1hbmQtcmVzb3VyY2UtdXNhZ2VcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJNb25pdG9yaW5nXCIsXG4gIFwiaWRcIjogXCJtb25pdG9yaW5nXCIsXG4gIFwibGV2ZWxcIjogM1xufSwge1xuICBcInZhbHVlXCI6IFwiTWVtb3J5XCIsXG4gIFwiaWRcIjogXCJyZXNvdXJjZS1saW1pdHMtcmFtXCIsXG4gIFwibGV2ZWxcIjogM1xufSwge1xuICBcInZhbHVlXCI6IFwiRGlzayBTcGFjZVwiLFxuICBcImlkXCI6IFwicmVzb3VyY2UtbGltaXRzLWRpc2stc3BhY2VcIixcbiAgXCJsZXZlbFwiOiAzXG59LCB7XG4gIFwidmFsdWVcIjogXCJPcGVuIEZpbGUgSGFuZGxlcyBMaW1pdFwiLFxuICBcImlkXCI6IFwicmVzb3VyY2UtbGltaXRzLWZpbGUtaGFuZGxlLWxpbWl0XCIsXG4gIFwibGV2ZWxcIjogM1xufSwge1xuICBcInZhbHVlXCI6IFwiTG9nIENvbGxlY3Rpb25cIixcbiAgXCJpZFwiOiBcImxvZ2dpbmdcIixcbiAgXCJsZXZlbFwiOiAzXG59LCB7XG4gIFwidmFsdWVcIjogXCJQZXItVmlydHVhbCBIb3N0IGFuZCBQZXItVXNlciBSZXNvdXJjZSBMaW1pdHNcIixcbiAgXCJpZFwiOiBcImxpbWl0c1wiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIlNlY3VyaXR5IENvbnNpZGVyYXRpb25zXCIsXG4gIFwiaWRcIjogXCJzZWN1cml0eVwiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIlVzZXJzIGFuZCBQZXJtaXNzaW9uc1wiLFxuICBcImlkXCI6IFwic2VjdXJpdHktdXNlcnMtYW5kLXBlcm1pc3Npb25zXCIsXG4gIFwibGV2ZWxcIjogM1xufSwge1xuICBcInZhbHVlXCI6IFwiSW50ZXItbm9kZSBhbmQgQ0xJIFRvb2wgQXV0aGVudGljYXRpb25cIixcbiAgXCJpZFwiOiBcImludGVyLW5vZGUtYXV0aGVudGljYXRpb25cIixcbiAgXCJsZXZlbFwiOiAzXG59LCB7XG4gIFwidmFsdWVcIjogXCJGaXJld2FsbCBDb25maWd1cmF0aW9uXCIsXG4gIFwiaWRcIjogXCJzZWN1cml0eS1maXJld2FsbC1ydWxlc1wiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIlRMU1wiLFxuICBcImlkXCI6IFwic2VjdXJpdHktdGxzXCIsXG4gIFwibGV2ZWxcIjogM1xufSwge1xuICBcInZhbHVlXCI6IFwiTmV0d29ya2luZyBDb25maWd1cmF0aW9uXCIsXG4gIFwiaWRcIjogXCJuZXR3b3JraW5nXCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwiTWluaW11bSBBdmFpbGFibGUgTmV0d29yayBUaHJvdWdocHV0IEVzdGltYXRlXCIsXG4gIFwiaWRcIjogXCJuZXR3b3JraW5nLXRocm91Z2hwdXRcIixcbiAgXCJsZXZlbFwiOiAzXG59LCB7XG4gIFwidmFsdWVcIjogXCJDbHVzdGVyaW5nIENvbnNpZGVyYXRpb25zXCIsXG4gIFwiaWRcIjogXCJjbHVzdGVyaW5nXCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwiQ2x1c3RlciBTaXplXCIsXG4gIFwiaWRcIjogXCJjbHVzdGVyaW5nLWNsdXN0ZXItc2l6ZVwiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIlVuZXZlbiBOdW1iZXJzIG9mIE5vZGVzIGFuZCBDbHVzdGVyIE1ham9yaXR5XCIsXG4gIFwiaWRcIjogXCJ1bmV2ZW4tbnVtYmVycy1vZi1ub2Rlcy1hbmQtY2x1c3Rlci1tYWpvcml0eVwiLFxuICBcImxldmVsXCI6IDRcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkRhdGEgTG9jYWxpdHkgQ29uc2lkZXJhdGlvbnNcIixcbiAgXCJpZFwiOiBcImRhdGEtbG9jYWxpdHktY29uc2lkZXJhdGlvbnNcIixcbiAgXCJsZXZlbFwiOiA0XG59LCB7XG4gIFwidmFsdWVcIjogXCJHcm93aW5nIE5vZGUgQ291bnQgdG8gU3VzdGFpbiBNb3JlIENvbmN1cnJlbnQgQ2xpZW50c1wiLFxuICBcImlkXCI6IFwiZ3Jvd2luZy1ub2RlLWNvdW50LXRvLXN1c3RhaW4tbW9yZS1jb25jdXJyZW50LWNsaWVudHNcIixcbiAgXCJsZXZlbFwiOiA0XG59LCB7XG4gIFwidmFsdWVcIjogXCJJbmNyZWFzaW5nIE5vZGUgQ291bnRzIHZzLiBEZXBsb3lpbmcgU2VwYXJhdGUgQ2x1c3RlcnMgZm9yIFNlcGFyYXRlIFB1cnBvc2VzXCIsXG4gIFwiaWRcIjogXCJpbmNyZWFzaW5nLW5vZGUtY291bnRzLXZzLWRlcGxveWluZy1zZXBhcmF0ZS1jbHVzdGVycy1mb3Itc2VwYXJhdGUtcHVycG9zZXNcIixcbiAgXCJsZXZlbFwiOiA0XG59LCB7XG4gIFwidmFsdWVcIjogXCJOb2RlIFRpbWUgU3luY2hyb25pemF0aW9uXCIsXG4gIFwiaWRcIjogXCJjbHVzdGVyaW5nLW50cFwiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkFwcGxpY2F0aW9uIENvbnNpZGVyYXRpb25zXCIsXG4gIFwiaWRcIjogXCJhcHBzXCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwiQ29ubmVjdGlvbiBNYW5hZ2VtZW50XCIsXG4gIFwiaWRcIjogXCJhcHBzLWNvbm5lY3Rpb24tbWFuYWdlbWVudFwiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkNvbm5lY3Rpb24gQ2h1cm5cIixcbiAgXCJpZFwiOiBcImFwcHMtY29ubmVjdGlvbi1jaHVyblwiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIlJlY292ZXJ5IGZyb20gQ29ubmVjdGlvbiBGYWlsdXJlc1wiLFxuICBcImlkXCI6IFwiYXBwcy1hdXRvbWF0aWMtcmVjb3ZlcnlcIixcbiAgXCJsZXZlbFwiOiAzXG59LCB7XG4gIFwidmFsdWVcIjogXCJFeGNlc3NpdmUgQ2hhbm5lbCBVc2FnZVwiLFxuICBcImlkXCI6IFwiYXBwcy1leGNlc3NpdmUtY2hhbm5lbC11c2FnZVwiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIlBvbGxpbmcgQ29uc3VtZXJzXCIsXG4gIFwiaWRcIjogXCJhcHBzLXBvbGxpbmctY29uc3VtZXJzXCIsXG4gIFwibGV2ZWxcIjogM1xufV07XG5mdW5jdGlvbiBfY3JlYXRlTWR4Q29udGVudChwcm9wcykge1xuICBjb25zdCBfY29tcG9uZW50cyA9IHtcbiAgICBhOiBcImFcIixcbiAgICBhZG1vbml0aW9uOiBcImFkbW9uaXRpb25cIixcbiAgICBjb2RlOiBcImNvZGVcIixcbiAgICBoMTogXCJoMVwiLFxuICAgIGgyOiBcImgyXCIsXG4gICAgaDM6IFwiaDNcIixcbiAgICBoNDogXCJoNFwiLFxuICAgIGhlYWRlcjogXCJoZWFkZXJcIixcbiAgICBsaTogXCJsaVwiLFxuICAgIHA6IFwicFwiLFxuICAgIHByZTogXCJwcmVcIixcbiAgICBzdHJvbmc6IFwic3Ryb25nXCIsXG4gICAgdWw6IFwidWxcIixcbiAgICAuLi5fcHJvdmlkZUNvbXBvbmVudHMoKSxcbiAgICAuLi5wcm9wcy5jb21wb25lbnRzXG4gIH07XG4gIHJldHVybiBfanN4cyhfRnJhZ21lbnQsIHtcbiAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuaGVhZGVyLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5oMSwge1xuICAgICAgICBpZDogXCJwcm9kdWN0aW9uLWRlcGxveW1lbnQtZ3VpZGVsaW5lc1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJQcm9kdWN0aW9uIERlcGxveW1lbnQgR3VpZGVsaW5lc1wiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJvdmVydmlld1wiLFxuICAgICAgY2hpbGRyZW46IFwiT3ZlcnZpZXdcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiRGF0YSBzZXJ2aWNlcyBzdWNoIGFzIFJhYmJpdE1RIG9mdGVuIGhhdmUgbWFueSB0dW5hYmxlXFxyXFxucGFyYW1ldGVycy4gU29tZSBjb25maWd1cmF0aW9ucyBvciBwcmFjdGljZXMgbWFrZSBhIGxvdCBvZiBzZW5zZSBmb3JcXHJcXG5kZXZlbG9wbWVudCBidXQgYXJlIG5vdCByZWFsbHkgc3VpdGFibGUgZm9yIHByb2R1Y3Rpb24uICBOb1xcclxcbnNpbmdsZSBjb25maWd1cmF0aW9uIGZpdHMgZXZlcnkgdXNlIGNhc2UuIEl0IGlzLCB0aGVyZWZvcmUsXFxyXFxuaW1wb3J0YW50IHRvIGFzc2VzcyBzeXN0ZW0gY29uZmlndXJhdGlvbiBhbmQgaGF2ZSBhIHBsYW4gZm9yIFxcXCJkYXkgdHdvIG9wZXJhdGlvbnNcXFwiXFxyXFxuYWN0aXZpdGllcyBzdWNoIGFzIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL3VwZ3JhZGVcIixcbiAgICAgICAgY2hpbGRyZW46IFwidXBncmFkZXNcIlxuICAgICAgfSksIFwiIGJlZm9yZSBnb2luZyBpbnRvIHByb2R1Y3Rpb24uXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcInRvY1wiLFxuICAgICAgY2hpbGRyZW46IFwiVGFibGUgb2YgQ29udGVudHNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiUHJvZHVjdGlvbiBzeXN0ZW1zIGhhdmUgY29uY2VybnMgdGhhdCBnbyBiZXlvbmQgY29uZmlndXJhdGlvbjogc3lzdGVtIG9ic2VydmFiaWxpdHksXFxyXFxuc2VjdXJpdHksIGFwcGxpY2F0aW9uIGRldmVsb3BtZW50IHByYWN0aWNlcywgcmVzb3VyY2UgdXNhZ2UsIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIvcmVsZWFzZS1pbmZvcm1hdGlvblwiLFxuICAgICAgICBjaGlsZHJlbjogXCJyZWxlYXNlIHN1cHBvcnQgdGltZWxpbmVcIlxuICAgICAgfSksIFwiLCBhbmQgbW9yZS5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL21vbml0b3JpbmdcIixcbiAgICAgICAgY2hpbGRyZW46IFwiTW9uaXRvcmluZ1wiXG4gICAgICB9KSwgXCIgYW5kIG1ldHJpY3MgYXJlIHRoZSBmb3VuZGF0aW9uIG9mIGEgcHJvZHVjdGlvbi1ncmFkZSBzeXN0ZW0uXFxyXFxuQmVzaWRlcyBoZWxwaW5nIGRldGVjdCBpc3N1ZXMsIGl0IHByb3ZpZGVzIHRoZSBvcGVyYXRvciBkYXRhIHRoYXQgY2FuIGJlIHVzZWRcXHJcXG50byBzaXplIGFuZCBjb25maWd1cmUgYm90aCBSYWJiaXRNUSBub2RlcyBhbmQgYXBwbGljYXRpb25zLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIlRoaXMgZ3VpZGUgcHJvdmlkZXMgcmVjb21tZW5kYXRpb25zIGluIGEgZmV3IGFyZWFzOlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnVsLCB7XG4gICAgICBjaGlsZHJlbjogW1wiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHt9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIiNzdG9yYWdlXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwiU3RvcmFnZVwiXG4gICAgICAgIH0pLCBcIiBjb25zaWRlcmF0aW9ucyBmb3Igbm9kZSBkYXRhIGRpcmVjdG9yaWVzXCJdXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIiNuZXR3b3JraW5nXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwiTmV0d29ya2luZ1wiXG4gICAgICAgIH0pLCBcIi1yZWxhdGVkIHJlY29tbWVuZGF0aW9uc1wiXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJSZWNvbW1lbmRhdGlvbnMgcmVsYXRlZCB0byBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIjdXNlcnMtYW5kLXBlcm1pc3Npb25zXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwidmlydHVhbCBob3N0cywgdXNlcnMgYW5kIHBlcm1pc3Npb25zXCJcbiAgICAgICAgfSldXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIjbW9uaXRvcmluZy1hbmQtcmVzb3VyY2UtdXNhZ2VcIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJNb25pdG9yaW5nIGFuZCByZXNvdXJjZSB1c2FnZVwiXG4gICAgICAgIH0pXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIjbGltaXRzXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwiUGVyLXZpcnR1YWwgaG9zdCBhbmQgcGVyLXVzZXIgbGltaXRzXCJcbiAgICAgICAgfSlcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIiNzZWN1cml0eVwiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIlNlY3VyaXR5XCJcbiAgICAgICAgfSlcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiI2NsdXN0ZXJpbmdcIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJDbHVzdGVyaW5nXCJcbiAgICAgICAgfSksIFwiIGFuZCBtdWx0aS1ub2RlIGRlcGxveW1lbnRzXCJdXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIiNhcHBzXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwiQXBwbGljYXRpb24tbGV2ZWxcIlxuICAgICAgICB9KSwgXCIgcHJhY3RpY2VzIGFuZCBjb25zaWRlcmF0aW9uc1wiXVxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiYW5kIG1vcmUuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwibWluaW11bS1oYXJkd2FyZVwiLFxuICAgICAgY2hpbGRyZW46IFwiTWluaW11bSBIYXJkd2FyZSBSZXF1aXJlbWVudHNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIlJhYmJpdE1RIGNhbiB1c2VkIHdpdGggYSBicm9hZCByYW5nZSBvZiB3b3JrbG9hZHMuIFNvbWUgbWF5IGJlIHZlcnkgSS9PIGhlYXZ5XFxyXFxuKHN0cmVhbXMpLCBvdGhlcnMgY2FuIHJlcXVpcmUgbW9yZSBDUFUgcmVzb3VyY2VzIChsYXJnZSBudW1iZXIgb2YgY29uY3VycmVudCBjb25uZWN0aW9ucyBhbmQgcXVldWVzKS5cXHJcXG5UaG9zZSB3b3JrbG9hZHMgbWF5IHJlcXVpcmUgYSBkaWZmZXJlbnQgbWl4IG9mIENQVSwgc3RvcmFnZSBhbmQgbmV0d29yayByZXNvdXJjZXMuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5hZG1vbml0aW9uLCB7XG4gICAgICB0eXBlOiBcInRpcFwiLFxuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgICBjaGlsZHJlbjogXCJUaGlzIHNlY3Rpb24gZGVzY3JpYmVzIGEgcmVjb21tZW5kZWQgbWluaW11bSBvZiByZXNvdXJjZXMgZm9yIHByb2R1Y3Rpb24gc3lzdGVtcy5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJCZWxvdyBpcyBhIG1pbmltdW0gc3lzdGVtIHJlcXVpcmVtZW50cyBmb3IgcHJvZHVjdGlvbiBkZXBsb3ltZW50cywgcGVyIG5vZGU6XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMudWwsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJObyBjb2xvY2F0aW9uIHdpdGggb3RoZXIgZGF0YSBzZXJ2aWNlcyAoZS5nLiBkYXRhIHN0b3Jlcykgb3IgZGlzaywgbmV0d29yayBJL08gaGVhdnkgYXBwbGljYXRpb25zXCJcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIjQgQ1BVIGNvcmVzXCJcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIjQgR2lCIG9mIFJBTVwiXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtcIlNlZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIjc3RvcmFnZVwiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIlN0b3JhZ2VcIlxuICAgICAgICB9KSwgXCIgYmVsb3cgZm9yIHN0b3JhZ2VcIl1cbiAgICAgIH0pLCBcIlxcblwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkxvd2VyLXNwZWMgZW52aXJvbm1lbnRzIGNhbiBiZSBhY2NlcHRhYmxlIGZvciBjZXJ0YWluIGxlc3MgbG9hZGVkIGVudmlyb25tZW50cywgZm9yIHF1YWxpdHkgYXNzdXJhbmNlIGFuZCBkZXZlbG9wbWVudFxcclxcbmVudmlyb25tZW50cy5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmFkbW9uaXRpb24sIHtcbiAgICAgIHR5cGU6IFwiZGFuZ2VyXCIsXG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIlJhYmJpdE1RIHdhcyBub3QgZGVzaWduZWQgdG8gcnVuIGluIGVudmlyb25tZW50cyB3aXRoIGEgc2luZ2xlIENQVSBjb3JlLCBvciBiZWluZyBjb2xvY2F0ZWQgd2l0aFxcclxcbm90aGVyIGRpc2sgYW5kIG5ldHdvcmsgSS9PLWhlYXZ5IHRvb2xzLlwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJzdG9yYWdlXCIsXG4gICAgICBjaGlsZHJlbjogXCJTdG9yYWdlIENvbnNpZGVyYXRpb25zXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwic3RvcmFnZS1kdXJhYmlsaXR5XCIsXG4gICAgICBjaGlsZHJlbjogXCJVc2UgRHVyYWJsZSBTdG9yYWdlXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5hZG1vbml0aW9uLCB7XG4gICAgICB0eXBlOiBcImltcG9ydGFudFwiLFxuICAgICAgY2hpbGRyZW46IF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgICAgY2hpbGRyZW46IFtcIk1vZGVybiBSYWJiaXRNUSBmZWF0dXJlcywgc3VjaCBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIuL3F1b3J1bS1xdWV1ZXNcIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJxdW9ydW0gcXVldWVzXCJcbiAgICAgICAgfSksIFwiIGFuZCBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIuL3N0cmVhbXNcIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJzdHJlYW1zXCJcbiAgICAgICAgfSksIFwiLFxcclxcbmFyZSBkZXNpZ25lZCBmb3IgZHVyYWJsZSBzdG9yYWdlIG9ubHkuXCJdXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiRGF0YSBzYWZldHkgZmVhdHVyZXMgb2YgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vcXVvcnVtLXF1ZXVlc1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJxdW9ydW0gcXVldWVzXCJcbiAgICAgIH0pLCBcIiBhbmQgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vc3RyZWFtc1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJzdHJlYW1zXCJcbiAgICAgIH0pLCBcIiBleHBlY3RcXHJcXG5ub2RlIGRhdGEgc3RvcmFnZSB0byBiZSBkdXJhYmxlLiBCb3RoIGRhdGEgc3RydWN0dXJlcyBhbHNvIGFzc3VtZSByZWFzb25hYmx5IHN0YWJsZSBsYXRlbmN5IG9mIEkvT1xcclxcbm9wZXJhdGlvbnMsIHNvbWV0aGluZyB0aGF0IG5ldHdvcmstYXR0YWNoZWQgc3RvcmFnZSB3aWxsIG5vdCBiZSBhbHdheXMgcmVhZHkgdG8gcHJvdmlkZSBpbiBwcmFjdGljZS5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJRdW9ydW0gcXVldWUgYW5kIHN0cmVhbSByZXBsaWNhcyBob3N0ZWQgb24gcmVzdGFydGVkIG5vZGVzIHRoYXQgdXNlIHRyYW5zaWVudCBzdG9yYWdlIHdpbGwgaGF2ZVxcclxcbnRvIHBlcmZvcm0gYSBmdWxsIHN5bmMgb2YgdGhlIGVudGlyZSBkYXRhIHNldCBvbiB0aGUgbGVhZGVyIHJlcGxpY2EuIFRoaXMgY2FuIHJlc3VsdCBpbiBtYXNzaXZlXFxyXFxuZGF0YSB0cmFuc2ZlcnMgYW5kIG5ldHdvcmsgbGluayBvdmVybG9hZCB0aGF0IGNvdWxkIGhhdmUgYmVlbiBhdm9pZGVkIGJ5IHVzaW5nIGR1cmFibGUgc3RvcmFnZS5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiV2hlbiBub2RlcyBhcmUgcmVzdGFydGVkLCB0aGUgcmVzdCBvZiB0aGUgY2x1c3RlciBleHBlY3RzIHRoZW0gdG8gcmV0YWluIHRoZSBpbmZvcm1hdGlvblxcclxcbmFib3V0IHRoZWlyIGNsdXN0ZXIgcGVlcnMuIFdoZW4gdGhpcyBpcyBub3QgdGhlIGNhc2UsIHJlc3RhcnRlZCBub2RlcyBtYXkgYmUgYWJsZSB0byByZWpvaW5cXHJcXG5hcyBuZXcgbm9kZXMgYnV0IGEgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vY2x1c3Rlci1mb3JtYXRpb24jbm9kZS1oZWFsdGgtY2hlY2tzLWFuZC1jbGVhbnVwXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInNwZWNpYWwgcGVlciBjbGVhbiB1cCBtZWNoYW5pc21cIlxuICAgICAgfSksIFwiXFxyXFxud291bGQgaGF2ZSB0byBiZSBlbmFibGVkIHRvIHJlbW92ZSB0aGVpciBwcmlvciBpZGVudGl0aWVzLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIlRyYW5zaWVudCBlbnRpdGllcyAoc3VjaCBhcyBxdWV1ZXMpIGFuZCBSQU0gbm9kZSBzdXBwb3J0IHdpbGwgYmUgcmVtb3ZlZCBpbiBSYWJiaXRNUSA0LnguXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwib3ZlcnByb3Zpc2lvbi1kaXNrLXNwYWNlXCIsXG4gICAgICBjaGlsZHJlbjogXCJPdmVycHJvdmlzaW9uIERpc2sgU3BhY2VcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmFkbW9uaXRpb24sIHtcbiAgICAgIHR5cGU6IFwiaW1wb3J0YW50XCIsXG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIlRoZSBydWxlIG9mIHRodW1iIGlzOiB3aGVuIGluIGRvdWJ0LCBvdmVycHJvdmlzaW9uIHRoZSBkaXNrcyB0aGF0IFJhYmJpdE1RIG5vZGVzIHdpbGwgdXNlLlxcclxcblF1b3J1bSBxdWV1ZXMgYW5kIHN0cmVhbXMgY2FuIGhhdmUgc3Vic3RhbnRpYWwgb24tZGlzayBmb290cHJpbnQuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiUXVvcnVtIHF1ZXVlcyBhbmQgc3RyZWFtcyBjYW4gaGF2ZSBzdWJzdGFudGlhbCBvbi1kaXNrIGZvb3RwcmludC4gRGVwZW5kaW5nIG9uIHRoZSB3b3JrbG9hZFxcclxcbmFuZCBzZXR0aW5ncywgdGhleSBtYXkgb3IgbWF5IG5vdCByZWNsYWltIGRpc2sgc3BhY2Ugb2YgY29uc3VtZWQgYW5kIGNvbmZpcm1lZCBvciBleHBpcmVkXFxyXFxubWVzc2FnZXMgcXVpY2tseS5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIiNyZXNvdXJjZS1saW1pdHMtZGlzay1zcGFjZVwiLFxuICAgICAgICBjaGlsZHJlbjogXCJEaXNrIHNwYWNlIHRvIFJBTSByYXRpbyByZWNvbW1lbmRhdGlvbnNcIlxuICAgICAgfSksIFwiIGFyZSBsaXN0ZWQgYmVsb3cuXFxyXFxuVGhlIHJ1bGUgb2YgdGh1bWIgaXM6IHdoZW4gaW4gZG91YnQsIG92ZXJwcm92aXNpb24gdGhlIGRpc2tzIHRoYXQgUmFiYml0TVEgbm9kZXMgd2lsbCB1c2UuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDMsIHtcbiAgICAgIGlkOiBcInN0b3JhZ2UtbmFzXCIsXG4gICAgICBjaGlsZHJlbjogXCJOZXR3b3JrLWF0dGFjaGVkIFN0b3JhZ2UgKE5BUylcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIk5ldHdvcmstYXR0YWNoZWQgc3RvcmFnZSAoTkFTKSBjYW4gYmUgdXNlZCBmb3IgUmFiYml0TVEgbm9kZSBkYXRhIGRpcmVjdG9yaWVzLCBwcm92aWRlZCB0aGF0XFxyXFxudGhlIE5BUyB2b2x1bWVcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy51bCwge1xuICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIkl0IG9mZmVycyBsb3cgSS9PIGxhdGVuY3lcIlxuICAgICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFwiSXQgY2FuIGd1YXJhbnRlZSBubyBzaWduaWZpY2FudCBsYXRlbmN5IHNwaWtlcyAoZm9yIGV4YW1wbGUsIGR1ZSB0byBzaGFyaW5nIHdpdGggb3RoZXIgSS9PLWhlYXZ5IHNlcnZpY2VzKVwiXG4gICAgICB9KSwgXCJcXG5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJRdW9ydW0gcXVldWVzLCBzdHJlYW1zLCBhbmQgb3RoZXIgUmFiYml0TVEgZmVhdHVyZXMgd2lsbCBiZW5lZml0IGZyb20gZmFzdCBsb2NhbCBTU0QgYW5kIE5WTWUgc3RvcmFnZS5cXHJcXG5XaGVuIHBvc3NpYmxlLCBwcmVmZXIgbG9jYWwgc3RvcmFnZSB0byBOQVMuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwic3RvcmFnZS1pc29sYXRpb25cIixcbiAgICAgIGNoaWxkcmVuOiBcIlN0b3JhZ2UgSXNvbGF0aW9uXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJSYWJiaXRNUSBub2RlcyBtdXN0IG5ldmVyIHNoYXJlIHRoZWlyIGRhdGEgZGlyZWN0b3JpZXMuIElkZWFsbHksIHNob3VsZCBub3Qgc2hhcmUgdGhlaXJcXHJcXG5kaXNrIEkvTyB3aXRoIG90aGVyIHNlcnZpY2VzIGZvciBtb3N0IHByZWRpY3RhYmxlIGxhdGVuY3kgYW5kIHRocm91Z2hwdXQuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwic3RvcmFnZS1maWxlc3lzdGVtc1wiLFxuICAgICAgY2hpbGRyZW46IFwiQ2hvaWNlIG9mIGEgRmlsZXN5c3RlbVwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiUmFiYml0TVEgbm9kZXMgY2FuIHVzZSBtb3N0IHdpZGVseSB1c2VkIGxvY2FsIGZpbGVzeXN0ZW1zOiBleHQ0LCBidGZzLCBhbmQgc28gb24uXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJBdm9pZCB1c2luZyBkaXN0cmlidXRlZCBmaWxlc3lzdGVtcyBmb3Igbm9kZSBkYXRhIGRpcmVjdG9yaWVzOlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnVsLCB7XG4gICAgICBjaGlsZHJlbjogW1wiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJSYWJiaXRNUSdzIHN0b3JhZ2Ugc3Vic3lzdGVtIGFzc3VtZXMgdGhlIHN0YW5kYXJkIGxvY2FsIGZpbGVzeXN0ZW0gc2VtYW50aWNzIGZvciBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiZnN5bmMoMilcIlxuICAgICAgICB9KSwgXCJcXHJcXG5hbmQgb3RoZXIga2V5IG9wZXJhdGlvbnMuIERpc3RyaWJ1dGVkIGZpbGVzeXN0ZW1zIG9mdGVuIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcImh0dHBzOi8vZG9jcy5jZXBoLmNvbS9lbi9sYXRlc3QvY2VwaGZzL3Bvc2l4L1wiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcImRldmlhdGUgZnJvbSB0aGVzZSBzdGFuZGFyZCBndWFyYW50ZWVzXCJcbiAgICAgICAgfSldXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtcIkRpc3RyaWJ1dGVkIGZpbGVzeXN0ZW1zIGFyZSB1c3VhbGx5IGRlc2lnbmVkIGZvciBzaGFyZWQgYWNjZXNzIHRvIGEgc3Vic2V0IG9mIGRpcmVjdG9yaWVzLlxcclxcblNoYXJpbmcgYSBkYXRhIGRpcmVjdG9yeSBiZXR3ZWVuIFJhYmJpdE1RIG5vZGVzIGlzIFwiLCBfanN4KF9jb21wb25lbnRzLnN0cm9uZywge1xuICAgICAgICAgIGNoaWxkcmVuOiBcImFuIGFic29sdXRlIG5vLW5vXCJcbiAgICAgICAgfSksIFwiIGFuZFxcclxcbmlzIGd1YXJhbnRlZWQgdG8gcmVzdWx0IGluIGRhdGEgY29ycnVwdGlvbiBzaW5jZSBub2RlcyB3aWxsIG5vdCBjb29yZGluYXRlIHRoZWlyIHdyaXRlc1wiXVxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcInVzZXJzLWFuZC1wZXJtaXNzaW9uc1wiLFxuICAgICAgY2hpbGRyZW46IFwiVmlydHVhbCBIb3N0cywgVXNlcnMsIFBlcm1pc3Npb25zXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkl0IGlzIG9mdGVuIG5lY2Vzc2FyeSB0byBzZWVkIGEgY2x1c3RlciB3aXRoIHZpcnR1YWwgaG9zdHMsIHVzZXJzLCBwZXJtaXNzaW9ucywgdG9wb2xvZ2llcywgcG9saWNpZXNcXHJcXG5hbmQgc28gb24uIFRoZSByZWNvbW1lbmRlZCB3YXkgb2YgZG9pbmcgdGhpcyBhdCBkZXBsb3ltZW50IHRpbWUgaXMgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vZGVmaW5pdGlvbnNcIixcbiAgICAgICAgY2hpbGRyZW46IFwidmlhIGRlZmluaXRpb24gaW1wb3J0XCJcbiAgICAgIH0pLCBcIi5cXHJcXG5EZWZpbml0aW9ucyBjYW4gYmUgaW1wb3J0ZWQgb24gbm9kZSBib290IG9yIGF0IGFueSBwb2ludCBhZnRlciBjbHVzdGVyIGRlcGxveW1lbnRcXHJcXG51c2luZyBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xYWRtaW5cIlxuICAgICAgfSksIFwiIG9yIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIlBPU1QgL2FwaS9kZWZpbml0aW9uc1wiXG4gICAgICB9KSwgXCIgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vbWFuYWdlbWVudFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJIVFRQIEFQSSBlbmRwb2ludFwiXG4gICAgICB9KSwgXCIuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDMsIHtcbiAgICAgIGlkOiBcInZpcnR1YWwtaG9zdHNcIixcbiAgICAgIGNoaWxkcmVuOiBcIlZpcnR1YWwgSG9zdHNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiSW4gYSBzaW5nbGUtdGVuYW50IGVudmlyb25tZW50LCBmb3IgZXhhbXBsZSwgd2hlbiB5b3VyIFJhYmJpdE1RXFxyXFxuY2x1c3RlciBpcyBkZWRpY2F0ZWQgdG8gcG93ZXIgYSBzaW5nbGUgc3lzdGVtIGluIHByb2R1Y3Rpb24sXFxyXFxudXNpbmcgZGVmYXVsdCB2aXJ0dWFsIGhvc3QgKFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiL1wiXG4gICAgICB9KSwgXCIpIGlzIHBlcmZlY3RseSBmaW5lLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiSW4gbXVsdGktdGVuYW50IGVudmlyb25tZW50cywgdXNlIGEgc2VwYXJhdGUgdmhvc3QgZm9yXFxyXFxuZWFjaCB0ZW5hbnQvZW52aXJvbm1lbnQsIGUuZy4gXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJwcm9qZWN0MV9kZXZlbG9wbWVudFwiXG4gICAgICB9KSwgXCIsXFxyXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJwcm9qZWN0MV9wcm9kdWN0aW9uXCJcbiAgICAgIH0pLCBcIiwgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJwcm9qZWN0Ml9kZXZlbG9wbWVudFwiXG4gICAgICB9KSwgXCIsXFxyXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJwcm9qZWN0Ml9wcm9kdWN0aW9uXCJcbiAgICAgIH0pLCBcIiwgYW5kIHNvIG9uLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgzLCB7XG4gICAgICBpZDogXCJ1c2Vyc1wiLFxuICAgICAgY2hpbGRyZW46IFwiVXNlcnNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiRm9yIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzLCBkZWxldGUgdGhlIGRlZmF1bHQgdXNlciAoXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJndWVzdFwiXG4gICAgICB9KSwgXCIpLlxcclxcbkRlZmF1bHQgdXNlciBvbmx5IGNhbiBjb25uZWN0IGZyb20gbG9jYWxob3N0IGJ5IGRlZmF1bHQsIGJlY2F1c2UgaXQgaGFzIHdlbGwta25vd25cXHJcXG5jcmVkZW50aWFscy4gSW5zdGVhZCBvZiBlbmFibGluZyByZW1vdGUgY29ubmVjdGlvbnMsIGNvbnNpZGVyIGNyZWF0aW5nIGEgc2VwYXJhdGUgdXNlclxcclxcbndpdGggYWRtaW5pc3RyYXRpdmUgcGVybWlzc2lvbnMgYW5kIGEgZ2VuZXJhdGVkIHBhc3N3b3JkLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkl0IGlzIHJlY29tbWVuZGVkIHRvIHVzZSBhIHNlcGFyYXRlIHVzZXIgcGVyIGFwcGxpY2F0aW9uLiBGb3IgZXhhbXBsZSwgaWYgeW91XFxyXFxuaGF2ZSBhIG1vYmlsZSBhcHAsIGEgV2ViIGFwcCwgYW5kIGEgZGF0YSBhZ2dyZWdhdGlvbiBzeXN0ZW0sIHlvdSdkIGhhdmUgM1xcclxcbnNlcGFyYXRlIHVzZXJzLiBUaGlzIG1ha2VzIGEgbnVtYmVyIG9mIHRoaW5ncyBlYXNpZXI6XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMudWwsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJDb3JyZWxhdGluZyBjbGllbnQgY29ubmVjdGlvbnMgd2l0aCBhcHBsaWNhdGlvbnNcIlxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJVc2luZyBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIuL2FjY2Vzcy1jb250cm9sXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwiZmluZS1ncmFpbmVkIHBlcm1pc3Npb25zXCJcbiAgICAgICAgfSldXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJDcmVkZW50aWFscyByb2xsLW92ZXIgKGUuZy4gcGVyaW9kaWNhbGx5IG9yIGluIGNhc2Ugb2YgYSBicmVhY2gpXCJcbiAgICAgIH0pLCBcIlxcblwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkluIGNhc2UgdGhlcmUgYXJlIG1hbnkgaW5zdGFuY2VzIG9mIHRoZSBzYW1lIGFwcGxpY2F0aW9uLCB0aGVyZSdzIGEgdHJhZGUtb2ZmXFxyXFxuYmV0d2VlbiBiZXR0ZXIgc2VjdXJpdHkgKGhhdmluZyBhIHNldCBvZiBjcmVkZW50aWFscyBwZXIgaW5zdGFuY2UpIGFuZCBjb252ZW5pZW5jZVxcclxcbm9mIHByb3Zpc2lvbmluZyAoc2hhcmluZyBhIHNldCBvZiBjcmVkZW50aWFscyBiZXR3ZWVuIHNvbWUgb3IgYWxsIGluc3RhbmNlcykuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkZvciBJb1QgYXBwbGljYXRpb25zIHRoYXQgaW52b2x2ZSBtYW55IGNsaWVudHMgcGVyZm9ybWluZyB0aGUgc2FtZSBvciBzaW1pbGFyXFxyXFxuZnVuY3Rpb24gYW5kIGhhdmluZyBmaXhlZCBJUCBhZGRyZXNzZXMsIGl0IG1heSBtYWtlIHNlbnNlIHRvIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL3NzbFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJhdXRoZW50aWNhdGUgdXNpbmcgeDUwOSBjZXJ0aWZpY2F0ZXNcIlxuICAgICAgfSksIFwiIG9yXFxyXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9nb3R0aGFyZHAvcmFiYml0bXEtYXV0aC1iYWNrZW5kLWlwLXJhbmdlXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInNvdXJjZSBJUCBhZGRyZXNzIHJhbmdlc1wiXG4gICAgICB9KSwgXCIuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDMsIHtcbiAgICAgIGlkOiBcImFub255bW91cy1sb2dpblwiLFxuICAgICAgY2hpbGRyZW46IFwiQW5vbnltb3VzIExvZ2luXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJGb3IgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHMsIGl0IGlzIGFsbW9zdCBhbHdheXMgYSBnb29kIGlkZWEgdG8gZGlzYWJsZSBhbm9ueW1vdXMgbG9naW5zLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJZb3UgY2FuIGRpc2FibGUgdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiQU5PTllNT1VTXCJcbiAgICAgIH0pLCBcIiBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiYWNjZXNzLWNvbnRyb2wjbWVjaGFuaXNtc1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJTQVNMIG1lY2hhbnNpbVwiXG4gICAgICB9KSwgXCIgaW4gXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcImNvbmZpZ3VyZSNjb25maWctZmlsZVwiLFxuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS5jb25mXCJcbiAgICAgIH0pLCBcIiBhcyBmb2xsb3dzOlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtaW5pXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImF1dGhfbWVjaGFuaXNtcy4xID0gUExBSU5cXHJcXG5hdXRoX21lY2hhbmlzbXMuMiA9IEFNUVBMQUlOXFxyXFxuIyBub3RlOiB0aGUgQU5PTllNT1VTIG1lY2hhbmlzbSBpcyBub3QgbGlzdGVkXFxyXFxuXFxyXFxuIyBWYWx1ZSBub25lIGhhcyBhIHNwZWNpYWwgbWVhbmluZyB0aGF0IG5vIHVzZXIgaXMgY29uZmlndXJlZCBmb3IgYW5vbnltb3VzIGxvZ2lucy5cXHJcXG5hbm9ueW1vdXNfbG9naW5fdXNlciA9IG5vbmVcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwibW9uaXRvcmluZy1hbmQtcmVzb3VyY2UtdXNhZ2VcIixcbiAgICAgIGNoaWxkcmVuOiBcIk1vbml0b3JpbmcgYW5kIFJlc291cmNlIExpbWl0c1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiUmFiYml0TVEgbm9kZXMgYXJlIGxpbWl0ZWQgYnkgdmFyaW91cyByZXNvdXJjZXMsIGJvdGggcGh5c2ljYWxcXHJcXG4oZS5nLiB0aGUgYW1vdW50IG9mIFJBTSBhdmFpbGFibGUpIGFzIHdlbGwgYXMgc29mdHdhcmUgKGUuZy4gbWF4IG51bWJlciBvZiBmaWxlIGhhbmRsZXMgYSBwcm9jZXNzIGNhbiBvcGVuKS5cXHJcXG5JdCBpcyBpbXBvcnRhbnQgdG8gZXZhbHVhdGUgcmVzb3VyY2UgbGltaXQgY29uZmlndXJhdGlvbnMgYmVmb3JlXFxyXFxuZ29pbmcgaW50byBwcm9kdWN0aW9uIGFuZCBjb250aW51b3VzbHkgbW9uaXRvciByZXNvdXJjZSB1c2FnZSBhZnRlciB0aGF0LlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDMsIHtcbiAgICAgIGlkOiBcIm1vbml0b3JpbmdcIixcbiAgICAgIGNoaWxkcmVuOiBcIk1vbml0b3JpbmdcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vbW9uaXRvcmluZ1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJNb25pdG9yaW5nXCJcbiAgICAgIH0pLCBcIiBzZXZlcmFsIGFzcGVjdHMgb2YgdGhlIHN5c3RlbSwgZnJvbVxcclxcbmluZnJhc3RydWN0dXJlIGFuZCBrZXJuZWwgbWV0cmljcyB0byBSYWJiaXRNUSB0byBhcHBsaWNhdGlvbi1sZXZlbCBtZXRyaWNzIGlzIGVzc2VudGlhbC5cXHJcXG5XaGlsZSBtb25pdG9yaW5nIHJlcXVpcmVzIGFuIHVwZnJvbnQgaW52ZXN0bWVudCBpbiB0ZXJtcyBvZiB0aW1lLCBpdCBpcyB2ZXJ5IGVmZmVjdGl2ZVxcclxcbmF0IGNhdGNoaW5nIGlzc3VlcyBhbmQgbm90aWNpbmcgcG90ZW50aWFsbHkgcHJvYmxlbWF0aWMgdHJlbmRzIGVhcmx5IChvciBhdCBhbGwpLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgzLCB7XG4gICAgICBpZDogXCJyZXNvdXJjZS1saW1pdHMtcmFtXCIsXG4gICAgICBjaGlsZHJlbjogXCJNZW1vcnlcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiUmFiYml0TVEgdXNlcyBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi9hbGFybXNcIixcbiAgICAgICAgY2hpbGRyZW46IFwiUmVzb3VyY2UtZHJpdmVuIGFsYXJtc1wiXG4gICAgICB9KSwgXCJcXHJcXG50byB0aHJvdHRsZSBwdWJsaXNoZXJzIHdoZW4gY29uc3VtZXJzIGRvIG5vdCBrZWVwIHVwLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiQnkgZGVmYXVsdCwgUmFiYml0TVEgd2lsbCBub3QgYWNjZXB0IGFueSBuZXcgbWVzc2FnZXMgd2hlbiBpdCBkZXRlY3RzXFxyXFxudGhhdCBpdCdzIHVzaW5nIG1vcmUgdGhhbiA2MCUgb2YgdGhlIGF2YWlsYWJsZSBtZW1vcnkgKGFzIHJlcG9ydGVkIGJ5IHRoZSBPUyk6XFxyXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJ2bV9tZW1vcnlfaGlnaF93YXRlcm1hcmsucmVsYXRpdmUgPSAwLjZcIlxuICAgICAgfSksIFwiLiBUaGlzIGlzIGEgc2FmZSBkZWZhdWx0XFxyXFxuYW5kIGNhcmUgc2hvdWxkIGJlIHRha2VuIHdoZW4gbW9kaWZ5aW5nIHRoaXMgdmFsdWUsIGV2ZW4gd2hlbiB0aGVcXHJcXG5ob3N0IGlzIGEgZGVkaWNhdGVkIFJhYmJpdE1RIG5vZGUuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiVGhlIE9TIGFuZCBmaWxlIHN5c3RlbSB1c2Ugc3lzdGVtIG1lbW9yeSB0byBzcGVlZCB1cCBvcGVyYXRpb25zIGZvclxcclxcbmFsbCBzeXN0ZW0gcHJvY2Vzc2VzLiBGYWlsaW5nIHRvIGxlYXZlIGVub3VnaCBmcmVlIHN5c3RlbSBtZW1vcnkgZm9yXFxyXFxudGhpcyBwdXJwb3NlIHdpbGwgaGF2ZSBhbiBhZHZlcnNlIGVmZmVjdCBvbiBzeXN0ZW0gcGVyZm9ybWFuY2UgZHVlIHRvXFxyXFxuT1Mgc3dhcHBpbmcsIGFuZCBjYW4gZXZlbiByZXN1bHQgaW4gUmFiYml0TVEgcHJvY2VzcyB0ZXJtaW5hdGlvbi5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiQSBmZXcgcmVjb21tZW5kYXRpb25zIHdoZW4gYWRqdXN0aW5nIHRoZSBkZWZhdWx0XFxyXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJ2bV9tZW1vcnlfaGlnaF93YXRlcm1hcmtcIlxuICAgICAgfSksIFwiOlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy51bCwge1xuICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW1wiTm9kZXMgaG9zdGluZyBSYWJiaXRNUSBzaG91bGQgaGF2ZSBhdCBsZWFzdCBcIiwgX2pzeChcInN0cm9uZ1wiLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiMjU2IE1pQlwiXG4gICAgICAgIH0pLCBcIiBvZlxcclxcbm1lbW9yeSBhdmFpbGFibGUgYXQgYWxsIHRpbWVzLiBEZXBsb3ltZW50cyB0aGF0IHVzZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIuL3F1b3J1bS1xdWV1ZXNcIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJxdW9ydW0gcXVldWVzXCJcbiAgICAgICAgfSksIFwiIHJlcXVpcmUgbW9yZSxcXHJcXG5zZWUgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiLi9xdW9ydW0tcXVldWVzI3Jlc291cmNlLXVzZVwiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcImhvdyBxdW9ydW0gcXVldWUgdXNlIHJlc291cmNlc1wiXG4gICAgICAgIH0pLCBcIiBmb3IgbW9yZSBpbmZvcm1hdGlvLlwiXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJUaGUgcmVjb21tZW5kZWQgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcInZtX21lbW9yeV9oaWdoX3dhdGVybWFyay5yZWxhdGl2ZVwiXG4gICAgICAgIH0pLCBcIiByYW5nZSBpcyBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiMC40IHRvIDAuN1wiXG4gICAgICAgIH0pXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJWYWx1ZXMgYWJvdmUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIjAuN1wiXG4gICAgICAgIH0pLCBcIiBzaG91bGQgYmUgdXNlZCB3aXRoIGNhcmUgYW5kIHdpdGggc29saWQgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiLi9tZW1vcnktdXNlXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwibWVtb3J5IHVzYWdlXCJcbiAgICAgICAgfSksIFwiIGFuZCBpbmZyYXN0cnVjdHVyZS1sZXZlbCBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIuL21vbml0b3JpbmdcIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJtb25pdG9yaW5nXCJcbiAgICAgICAgfSksIFwiIGluIHBsYWNlLlxcclxcblRoZSBPUyBhbmQgZmlsZSBzeXN0ZW0gbXVzdCBiZSBsZWZ0IHdpdGggYXQgbGVhc3QgMzAlIG9mIHRoZSBtZW1vcnksIG90aGVyd2lzZSBwZXJmb3JtYW5jZSBtYXkgZGVncmFkZSBzZXZlcmVseSBkdWUgdG8gcGFnaW5nLlwiXVxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiVGhlc2UgYXJlIHNvbWUgdmVyeSBicm9hZC1zdHJva2VkIGd1aWRlbGluZXMuXFxyXFxuQXMgd2l0aCBldmVyeSB0dW5pbmcgc2NlbmFyaW8sIG1vbml0b3JpbmcsIGJlbmNobWFya2luZyBhbmQgbWVhc3VyaW5nIGFyZSByZXF1aXJlZCB0byBmaW5kXFxyXFxudGhlIGJlc3Qgc2V0dGluZyBmb3IgdGhlIGVudmlyb25tZW50IGFuZCB3b3JrbG9hZC5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiTGVhcm4gbW9yZSBhYm91dCBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi9tZW1vcnlcIixcbiAgICAgICAgY2hpbGRyZW46IFwiUmFiYml0TVEgYW5kIHN5c3RlbSBtZW1vcnlcIlxuICAgICAgfSksIFwiIGluIGEgc2VwYXJhdGUgZ3VpZGUuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDMsIHtcbiAgICAgIGlkOiBcInJlc291cmNlLWxpbWl0cy1kaXNrLXNwYWNlXCIsXG4gICAgICBjaGlsZHJlbjogXCJEaXNrIFNwYWNlXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlRoZSBjdXJyZW50IDUwTUIgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJkaXNrX2ZyZWVfbGltaXRcIlxuICAgICAgfSksIFwiIGRlZmF1bHQgd29ya3MgdmVyeSB3ZWxsIGZvclxcclxcbmRldmVsb3BtZW50IGFuZCBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiL3R1dG9yaWFsc1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJ0dXRvcmlhbHNcIlxuICAgICAgfSksIFwiLlxcclxcblByb2R1Y3Rpb24gZGVwbG95bWVudHMgcmVxdWlyZSBhIG11Y2ggZ3JlYXRlciBzYWZldHkgbWFyZ2luLlxcclxcbkluc3VmZmljaWVudCBkaXNrIHNwYWNlIHdpbGwgbGVhZCB0byBub2RlIGZhaWx1cmVzIGFuZCBtYXkgcmVzdWx0IGluIGRhdGEgbG9zc1xcclxcbmFzIGFsbCBkaXNrIHdyaXRlcyB3aWxsIGZhaWwuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJXaHkgaXMgdGhlIGRlZmF1bHQgNTBNQiB0aGVuPyBEZXZlbG9wbWVudFxcclxcbmVudmlyb25tZW50cyBzb21ldGltZXMgdXNlIHJlYWxseSBzbWFsbCBwYXJ0aXRpb25zIHRvIGhvc3RcXHJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIi92YXIvbGliXCJcbiAgICAgIH0pLCBcIiwgZm9yIGV4YW1wbGUsIHdoaWNoIG1lYW5zIG5vZGVzIGdvXFxyXFxuaW50byByZXNvdXJjZSBhbGFybSBzdGF0ZSByaWdodCBhZnRlciBib290aW5nLiBUaGUgdmVyeSBsb3dcXHJcXG5kZWZhdWx0IGVuc3VyZXMgdGhhdCBSYWJiaXRNUSB3b3JrcyBvdXQgb2YgdGhlIGJveCBmb3JcXHJcXG5ldmVyeW9uZS4gQXMgZm9yIHByb2R1Y3Rpb24gZGVwbG95bWVudHMsIHdlIHJlY29tbWVuZCB0aGVcXHJcXG5mb2xsb3dpbmc6XCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJUaGUgbWluaW11bSByZWNvbW1lbmRlZCBmcmVlIGRpc2sgc3BhY2UgbG93IHdhdGVybWFyayB2YWx1ZSBpcyBhYm91dCB0aGUgc2FtZVxcclxcbmFzIHRoZSBoaWdoIG1lbW9yeSB3YXRlcm1hcmsuIEZvciBleGFtcGxlLCBvbiBhIG5vZGUgY29uZmlndXJlZCB0byBoYXZlIGl0cyBtZW1vcnkgd2F0ZXJtYXJrIG9mIDRHQixcXHJcXG5cIiwgX2pzeChcImNvZGVcIiwge1xuICAgICAgICBjaGlsZHJlbjogXCJkaXNrX2ZyZWVfbGltaXQuYWJzb2x1dGUgPSA0R1wiXG4gICAgICB9KSwgXCIgd291bGQgYmUgYSByZWNvbW1lbmRlZCBtaW5pbXVtLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5hZG1vbml0aW9uLCB7XG4gICAgICB0eXBlOiBcIndhcm5pbmdcIixcbiAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIk5vZGVzIHJ1bm5pbmcgb3V0IG9mIGRpc2sgc3BhY2Ugc2hvdWxkIGJlIGNvbnNpZGVyZWQgYSB2ZXJ5IHNlcmlvdXMgb3BlcmF0aW9uYWwgcHJvYmxlbSxcXHJcXG5jb21tb25seSBsZWFkaW5nIHRvIG91dGFnZXMgYW5kIHBvc3NpYmx5IGRhdGEgbG9zcyBmb3IgdGhlIGFmZmVjdGVkIG5vZGUuXCJcbiAgICAgIH0pLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJXaGVuIGluIGRvdWJ0LCBvdmVycHJvdmlzaW9uIHRoZSBkaXNrIHNwYWNlIGFuZC9vciB1c2UgYSBoaWdoIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJkaXNrX2ZyZWVfbGltaXRcIlxuICAgICAgICB9KSwgXCIuXCJdXG4gICAgICB9KV1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwicmVzb3VyY2UtbGltaXRzLWZpbGUtaGFuZGxlLWxpbWl0XCIsXG4gICAgICBjaGlsZHJlbjogXCJPcGVuIEZpbGUgSGFuZGxlcyBMaW1pdFwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiT3BlcmF0aW5nIHN5c3RlbXMgbGltaXQgbWF4aW11bSBudW1iZXIgb2YgY29uY3VycmVudGx5IG9wZW4gZmlsZSBoYW5kbGVzLCB3aGljaFxcclxcbmluY2x1ZGVzIG5ldHdvcmsgc29ja2V0cy4gTWFrZSBzdXJlIHRoYXQgeW91IGhhdmUgbGltaXRzIHNldCBoaWdoIGVub3VnaCB0byBhbGxvd1xcclxcbmZvciBleHBlY3RlZCBudW1iZXIgb2YgY29uY3VycmVudCBjb25uZWN0aW9ucyBhbmQgcXVldWVzLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiTWFrZSBzdXJlIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzIGFsbG93IGZvciBhdCBsZWFzdCA1MEsgb3BlbiBmaWxlIGRlc2NyaXB0b3JzIGZvciBlZmZlY3RpdmUgUmFiYml0TVFcXHJcXG51c2VyLCBpbmNsdWRpbmcgaW4gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiQXMgYSBndWlkZWxpbmUsIG11bHRpcGx5IHRoZSA5NXRoIHBlcmNlbnRpbGUgbnVtYmVyIG9mIGNvbmN1cnJlbnQgY29ubmVjdGlvbnNcXHJcXG5ieSAyIGFuZCBhZGQgdGhlIHRvdGFsIG51bWJlciBvZiBxdWV1ZXMgdG8gY2FsY3VsYXRlIHRoZSByZWNvbW1lbmRlZCBvcGVuIGZpbGUgaGFuZGxlIGxpbWl0LlxcclxcblZhbHVlcyBhcyBoaWdoIGFzIDUwMEsgYXJlIG5vdCBpbmFkZXF1YXRlIGFuZFxcclxcbndpbGwgbm90IGNvbnN1bWUgYSBsb3Qgb2YgaGFyZHdhcmUgcmVzb3VyY2VzLCB0aGVyZWZvcmUsIHRoZXkgYXJlIHJlY29tbWVuZGVkIGZvciBwcm9kdWN0aW9uXFxyXFxuc2V0dXBzLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJTZWUgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vbmV0d29ya2luZ1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJOZXR3b3JraW5nIGd1aWRlXCJcbiAgICAgIH0pLCBcIiBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwibG9nZ2luZ1wiLFxuICAgICAgY2hpbGRyZW46IFwiTG9nIENvbGxlY3Rpb25cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkl0IGlzIGhpZ2hseSByZWNvbW1lbmRlZCB0aGF0IGxvZ3Mgb2YgYWxsIFJhYmJpdE1RIG5vZGVzIGFuZCBhcHBsaWNhdGlvbnMgKHdoZW4gcG9zc2libGUpIGFyZSBjb2xsZWN0ZWRcXHJcXG5hbmQgYWdncmVnYXRlZC4gTG9ncyBjYW4gYmUgY3J1Y2lhbGx5IGltcG9ydGFudCBpbiBpbnZlc3RpZ2F0aW5nIHVudXN1YWwgc3lzdGVtIGJlaGF2aW91ci5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJsaW1pdHNcIixcbiAgICAgIGNoaWxkcmVuOiBcIlBlci1WaXJ0dWFsIEhvc3QgYW5kIFBlci1Vc2VyIFJlc291cmNlIExpbWl0c1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJJdCBpcyBwb3NzaWJsZSB0byBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi92aG9zdHMjbGltaXRzXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImxpbWl0IHRoZSBtYXhpbXVtIG51bWJlciBvZiBjb25jdXJyZW50IGNvbm5lY3Rpb25zIGFuZCBxdWV1ZXNcIlxuICAgICAgfSksIFwiIGEgdmlydHVhbCBob3N0IHdpbGxcXHJcXG5hbGxvdyB0aGUgdXNlcnMgdG8gb3BlbiAoZGVjbGFyZSkuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiVGhlc2UgbGltaXRzIGNhbiBiZSB1c2VkIGFzIGd1YXJkIHJhaWxzIGluIGVudmlyb25tZW50cyB3aGVyZSBhcHBsaWNhdGlvbnNcXHJcXG5jYW5ub3QgYmUgdHJ1c3RlZCBhbmQgbW9uaXRvcmVkIGluIGRldGFpbCwgZm9yIGV4YW1wbGUsIHdoZW4gUmFiYml0TVEgY2x1c3RlcnNcXHJcXG5hcmUgb2ZmZXJlZCBhcyBhIHNlcnZpY2UuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlNpbWlsYXJseSwgaXQgaXMgcG9zc2libGUgdG8gXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vdXNlci1saW1pdHNcIixcbiAgICAgICAgY2hpbGRyZW46IFwiY29uZmlndXJlIGNvbmN1cnJlbnQgY29ubmVjdGlvbiBhbmQgY2hhbm5lbCBsaW1pdHNcXHJcXG5mb3IgaW5kaXZpZHVhbCB1c2Vyc1wiXG4gICAgICB9KSwgXCIuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcInNlY3VyaXR5XCIsXG4gICAgICBjaGlsZHJlbjogXCJTZWN1cml0eSBDb25zaWRlcmF0aW9uc1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDMsIHtcbiAgICAgIGlkOiBcInNlY3VyaXR5LXVzZXJzLWFuZC1wZXJtaXNzaW9uc1wiLFxuICAgICAgY2hpbGRyZW46IFwiVXNlcnMgYW5kIFBlcm1pc3Npb25zXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJTZWUgdGhlIHNlY3Rpb24gb24gdmhvc3RzLCB1c2VycywgYW5kIGNyZWRlbnRpYWxzIGFib3ZlLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDMsIHtcbiAgICAgIGlkOiBcImludGVyLW5vZGUtYXV0aGVudGljYXRpb25cIixcbiAgICAgIGNoaWxkcmVuOiBcIkludGVyLW5vZGUgYW5kIENMSSBUb29sIEF1dGhlbnRpY2F0aW9uXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlJhYmJpdE1RIG5vZGVzIGF1dGhlbnRpY2F0ZSB0byBlYWNoIG90aGVyIHVzaW5nIGEgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vY2x1c3RlcmluZyNlcmxhbmctY29va2llXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInNoYXJlZCBzZWNyZXRcIlxuICAgICAgfSksIFwiXFxyXFxuc3RvcmVkIGluIGEgZmlsZS4gT24gTGludXggYW5kIG90aGVyIFVOSVgtbGlrZSBzeXN0ZW1zLCBpdCBpcyBuZWNlc3NhcnkgdG8gcmVzdHJpY3QgY29va2llIGZpbGVcXHJcXG5hY2Nlc3Mgb25seSB0byB0aGUgT1MgdXNlcnMgdGhhdCB3aWxsIHJ1biBSYWJiaXRNUSBhbmQgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vY2xpXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIkNMSSB0b29sc1wiXG4gICAgICB9KSwgXCIuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiSXQgaXMgaW1wb3J0YW50IHRoYXQgdGhlIHZhbHVlIGlzIGdlbmVyYXRlZCBpbiBhIHJlYXNvbmFibHkgc2VjdXJlIHdheVxcclxcbihlLmcuIG5vdCBjb21wdXRlZCBmcm9tIGFuIGVhc3kgdG8gZ3Vlc3MgdmFsdWUpLiBUaGlzIGlzIHVzdWFsbHkgZG9uZSB1c2luZyBkZXBsb3ltZW50XFxyXFxuYXV0b21hdGlvbiB0b29scyBhdCB0aGUgdGltZSBvZiBpbml0aWFsIGRlcGxveW1lbnQuIFRob3NlIHRvb2xzIGNhbiB1c2UgZGVmYXVsdCBvclxcclxcbnBsYWNlaG9sZGVyIHZhbHVlczogZG9uJ3QgcmVseSBvbiB0aGVtLiBBbGxvd2luZyB0aGUgcnVudGltZSB0byBnZW5lcmF0ZSBhIGNvb2tpZSBmaWxlXFxyXFxub24gb25lIG5vZGUgYW5kIGNvcHlpbmcgaXQgdG8gYWxsIG90aGVyIG5vZGVzIGlzIGFsc28gYSBwb29yIHByYWN0aWNlOiBpdCBtYWtlcyB0aGUgZ2VuZXJhdGVkIHZhbHVlXFxyXFxubW9yZSBwcmVkaWN0YWJsZSBzaW5jZSB0aGUgZ2VuZXJhdGlvbiBhbGdvcml0aG0gaXMga25vd24uXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkNMSSB0b29scyB1c2UgdGhlIHNhbWUgYXV0aGVudGljYXRpb24gbWVjaGFuaXNtLiBJdCBpcyByZWNvbW1lbmRlZCB0aGF0XFxyXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vY2x1c3RlcmluZyNwb3J0c1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJpbnRlci1ub2RlIGFuZCBDTEkgY29tbXVuaWNhdGlvbiBwb3J0XCJcbiAgICAgIH0pLCBcIlxcclxcbmFjY2VzcyBpcyBsaW1pdGVkIHRvIHRoZSBob3N0cyB0aGF0IHJ1biBSYWJiaXRNUSBub2RlcyBvciBDTEkgdG9vbHMuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi9jbHVzdGVyaW5nLXNzbFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJTZWN1cmluZyBpbnRlci1ub2RlIGNvbW11bmljYXRpb24gd2l0aCBUTFNcIlxuICAgICAgfSksIFwiIGlzIHJlY29tbWVuZGVkLlxcclxcbkl0IGltcGxpZXMgdGhhdCBDTEkgdG9vbHMgYXJlIGFsc28gY29uZmlndXJlZCB0byB1c2UgVExTLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgzLCB7XG4gICAgICBpZDogXCJzZWN1cml0eS1maXJld2FsbC1ydWxlc1wiLFxuICAgICAgY2hpbGRyZW46IFwiRmlyZXdhbGwgQ29uZmlndXJhdGlvblwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi9uZXR3b3JraW5nI3BvcnRzXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIlBvcnRzIHVzZWQgYnkgUmFiYml0TVFcIlxuICAgICAgfSksIFwiIGNhbiBiZSBicm9hZGx5IHB1dCBpbnRvXFxyXFxub25lIG9mIHR3byBjYXRlZ29yaWVzOlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhcInVsXCIsIHtcbiAgICAgIGNoaWxkcmVuOiBbX2pzeChcImxpXCIsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiUG9ydHMgdXNlZCBieSBjbGllbnQgbGlicmFyaWVzIChBTVFQIDAtOS0xLCBBTVFQIDEuMCwgTVFUVCwgU1RPTVAsIEhUVFAgQVBJKVwiXG4gICAgICB9KSwgX2pzeChcImxpXCIsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiQWxsIG90aGVyIHBvcnRzIChpbnRlciBub2RlIGNvbW11bmljYXRpb24sIENMSSB0b29scyBhbmQgc28gb24pXCJcbiAgICAgIH0pXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkFjY2VzcyB0byBwb3J0cyBmcm9tIHRoZSBsYXR0ZXIgY2F0ZWdvcnkgZ2VuZXJhbGx5IHNob3VsZCBiZSByZXN0cmljdGVkIHRvIGhvc3RzIHJ1bm5pbmcgUmFiYml0TVEgbm9kZXNcXHJcXG5vciBDTEkgdG9vbHMuIFBvcnRzIGluIHRoZSBmb3JtZXIgY2F0ZWdvcnkgc2hvdWxkIGJlIGFjY2Vzc2libGUgdG8gaG9zdHMgdGhhdCBydW4gYXBwbGljYXRpb25zLFxcclxcbndoaWNoIGluIHNvbWUgY2FzZXMgY2FuIG1lYW4gcHVibGljIG5ldHdvcmtzLCBmb3IgZXhhbXBsZSwgYmVoaW5kIGEgbG9hZCBiYWxhbmNlci5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgzLCB7XG4gICAgICBpZDogXCJzZWN1cml0eS10bHNcIixcbiAgICAgIGNoaWxkcmVuOiBcIlRMU1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJXZSByZWNvbW1lbmQgdXNpbmcgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vc3NsXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIlRMUyBjb25uZWN0aW9uc1wiXG4gICAgICB9KSwgXCIgd2hlbiBwb3NzaWJsZSxcXHJcXG5hdCBsZWFzdCB0byBlbmNyeXB0IHRyYWZmaWMuIFBlZXIgdmVyaWZpY2F0aW9uIChhdXRoZW50aWNhdGlvbikgaXMgYWxzbyByZWNvbW1lbmRlZC5cXHJcXG5EZXZlbG9wbWVudCBhbmQgUUEgZW52aXJvbm1lbnRzIGNhbiB1c2UgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9yYWJiaXRtcS90bHMtZ2VuL1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJzZWxmLXNpZ25lZCBUTFMgY2VydGlmaWNhdGVzXCJcbiAgICAgIH0pLCBcIi5cXHJcXG5TZWxmLXNpZ25lZCBjZXJ0aWZpY2F0ZXMgY2FuIGJlIGFwcHJvcHJpYXRlIGluIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzIHdoZW5cXHJcXG5SYWJiaXRNUSBhbmQgYWxsIGFwcGxpY2F0aW9ucyBydW4gb24gYSB0cnVzdGVkIG5ldHdvcmsgb3IgaXNvbGF0ZWQgdXNpbmcgdGVjaG5vbG9naWVzXFxyXFxuc3VjaCBhcyBWTXdhcmUgTlNYLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiV2hpbGUgUmFiYml0TVEgdHJpZXMgdG8gb2ZmZXIgYSByZWFzb25hYmx5IHNlY3VyZSBUTFMgY29uZmlndXJhdGlvbiBieVxcclxcbmRlZmF1bHQsIGl0IGlzIGhpZ2hseSByZWNvbW1lbmRlZCBldmFsdWF0aW5nXFxyXFxuVExTIGNvbmZpZ3VyYXRpb24gKHZlcnNpb25zIGNpcGhlciBzdWl0ZXMgYW5kIHNvIG9uKSB1c2luZyB0b29scyBzdWNoIGFzIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCJodHRwczovL3Rlc3Rzc2wuc2gvXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInRlc3Rzc2wuc2hcIlxuICAgICAgfSksIFwiLlxcclxcblBsZWFzZSByZWZlciB0byB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vc3NsXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIlRMUyBndWlkZVwiXG4gICAgICB9KSwgXCIgdG8gbGVhcm4gbW9yZS5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJOb3RlIHRoYXQgVExTIGNhbiBoYXZlIHNpZ25pZmljYW50IGltcGFjdCBvbiBvdmVyYWxsIHN5c3RlbSB0aHJvdWdocHV0LFxcclxcbmluY2x1ZGluZyBDUFUgdXNhZ2Ugb2YgYm90aCBSYWJiaXRNUSBhbmQgYXBwbGljYXRpb25zIHRoYXQgdXNlIGl0LlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcIm5ldHdvcmtpbmdcIixcbiAgICAgIGNoaWxkcmVuOiBcIk5ldHdvcmtpbmcgQ29uZmlndXJhdGlvblwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJQcm9kdWN0aW9uIGVudmlyb25tZW50cyBtYXkgcmVxdWlyZSBuZXR3b3JrIGNvbmZpZ3VyYXRpb25cXHJcXG50dW5pbmcsIGZvciBleGFtcGxlLCB0byBzdXN0YWluIGEgaGlnaCBudW1iZXIgb2YgY29uY3VycmVudCBjbGllbnRzLlxcclxcblBsZWFzZSByZWZlciB0byB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vbmV0d29ya2luZ1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJOZXR3b3JraW5nIEd1aWRlXCJcbiAgICAgIH0pLCBcIiBmb3IgZGV0YWlscy5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwibmV0d29ya2luZy10aHJvdWdocHV0XCIsXG4gICAgICBjaGlsZHJlbjogXCJNaW5pbXVtIEF2YWlsYWJsZSBOZXR3b3JrIFRocm91Z2hwdXQgRXN0aW1hdGVcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIldpdGggaGlnaGVyIG1lc3NhZ2UgcmF0ZXMgYW5kIGxhcmdlIG1lc3NhZ2UgcGF5bG9hZHMsIHRyYWZmaWMgYmFuZHdpZHRoIGF2YWlsYWJsZSB0byBjbHVzdGVyIG5vZGVzIGJlY29tZXMgYW4gaW1wb3J0YW50XFxyXFxuZmFjdG9yLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJUaGUgZm9sbG93aW5nIChpbnRlbnRpb25hbGx5IG92ZXJzaW1wbGlmaWVkKSBmb3JtdWxhIGNhbiBiZSB1c2VkIHRvIGNvbXB1dGUgdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLnN0cm9uZywge1xuICAgICAgICBjaGlsZHJlbjogXCJtaW5pbXVtIGFtb3VudCBvZiBiYW5kd2lkdGhcIlxuICAgICAgfSksIFwiXFxyXFxudGhhdCBtdXN0IGJlIGF2YWlsYWJsZSB0byBjbHVzdGVyIG5vZGVzLCBpbiBiaXRzIHBlciBzZWNvbmQ6XCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1pbmlcIixcbiAgICAgICAgY2hpbGRyZW46IFwiTVIgKiBNUyAqIDExMCUgKiA4XFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwid2hlcmVcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy51bCwge1xuICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIk1SXCJcbiAgICAgICAgfSksIFwiOiA5NXRoIHBlcmNlbnRpbGUgbWVzc2FnZSByYXRlIHBlciBzZWNvbmRcIl1cbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIk1TXCJcbiAgICAgICAgfSksIFwiOiA5NXRoIHBlcmNlbnRpbGUgbWVzc2FnZSBzaXplLCBpbiBieXRlc1wiXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFwiMTEwJTogYWNjb3VudHMgZm9yIG1lc3NhZ2UgcHJvcGVydGllcywgcHJvdG9jb2wgbWV0YWRhdGEsIGFuZCBvdGhlciBkYXRhIHRyYW5zZmVycmVkXCJcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIjg6IGJpdHMgcGVyIGJ5dGVcIlxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJGb3IgZXhhbXBsZSwgd2l0aCBhIG1lc3NhZ2UgcmF0ZSAoXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJNUlwiXG4gICAgICB9KSwgXCIpIG9mIDIwSyBwZXIgc2Vjb25kIGFuZCA2IEtCIG1lc3NhZ2UgcGF5bG9hZHMgKFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiTVNcIlxuICAgICAgfSksIFwiKTpcIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWluaVwiLFxuICAgICAgICBjaGlsZHJlbjogXCIyMEsgKiA2IEtCICogMTEwJSAqIDggYml0L0IgPSAyMDAwMCAqIDYwMDAgKiAxLjEgKiA4ID0gMS4wNTYgKGdpZ2FiaXQvc2Vjb25kKVxcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIldpdGggdGhlIGFib3ZlIGlucHV0cywgY2x1c3RlciBub2RlcyBtdXN0IGhhdmUgbmV0d29yayBsaW5rcyB3aXRoIHRocm91Z2hwdXQgb2YgYXQgbGVhc3QgMS4wNTYgZ2lnYWJpdCBwZXIgc2Vjb25kLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJUaGlzIGZvcm11bGEgXCIsIF9qc3goX2NvbXBvbmVudHMuc3Ryb25nLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcImlzIGEgcnVsZSBvZiB0aHVtYlwiXG4gICAgICB9KSwgXCIgYW5kIGRvZXMgbm90IGNvbnNpZGVyIHByb3RvY29sLSBvciB3b3JrbG9hZC1zcGVjaWZpYyBudWFuY2VzLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJjbHVzdGVyaW5nXCIsXG4gICAgICBjaGlsZHJlbjogXCJDbHVzdGVyaW5nIENvbnNpZGVyYXRpb25zXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwiY2x1c3RlcmluZy1jbHVzdGVyLXNpemVcIixcbiAgICAgIGNoaWxkcmVuOiBcIkNsdXN0ZXIgU2l6ZVwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiVGhlIG51bWJlciBvZiBxdWV1ZXMsIHF1ZXVlIHJlcGxpY2F0aW9uIGZhY3RvciwgbnVtYmVyIG9mIGNvbm5lY3Rpb25zLCBtYXhpbXVtXFxyXFxubWVzc2FnZSBiYWNrbG9nIGFuZCBzb21ldGltZXMgbWVzc2FnZSB0aHJvdWdocHV0IGFyZSBmYWN0b3JzIHRoYXQgZGV0ZXJtaW5lIGhvd1xcclxcbmxhcmdlIHNob3VsZCBhIGNsdXN0ZXIgYmUuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJTaW5nbGUgbm9kZSBjbHVzdGVycyBjYW4gYmUgc3VmZmljaWVudCB3aGVuIHNpbXBsaWNpdHkgaXNcXHJcXG5wcmVmZXJyZWQgb3ZlciBldmVyeXRoaW5nIGVsc2U6IGRldmVsb3BtZW50LCBpbnRlZ3JhdGlvbiB0ZXN0aW5nIGFuZCBjZXJ0YWluIFFBIGVudmlyb25tZW50cy5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVGhyZWUgbm9kZSBjbHVzdGVycyBhcmUgdGhlIG5leHQgc3RlcCB1cC4gVGhleSBjYW4gdG9sZXJhdGUgYSBzaW5nbGUgbm9kZVxcclxcbmZhaWx1cmUgKG9yIHVuYXZhaWxhYmlsaXR5KSBhbmQgc3RpbGwgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vcXVvcnVtLXF1ZXVlc1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJtYWludGFpbiBxdW9ydW1cIlxuICAgICAgfSksIFwiLlxcclxcblNpbXBsaWNpdHkgaXMgdHJhZGVkIG9mZiBmb3IgYXZhaWxhYmlsaXR5LCByZXNpbGllbmN5IGFuZCwgaW4gY2VydGFpbiBjYXNlcywgdGhyb3VnaHB1dC5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJJdCBpcyByZWNvbW1lbmRlZCB0byB1c2UgY2x1c3RlcnMgd2l0aCBhbiBvZGRcXHJcXG5udW1iZXIgb2Ygbm9kZXMgKDMsIDUsIDcsIGV0Yykgc28gdGhhdCB3aGVuIG9uZSBub2RlIGJlY29tZXMgdW5hdmFpbGFibGUsIHRoZVxcclxcbnNlcnZpY2UgcmVtYWlucyBhdmFpbGFibGUgYW5kIGEgY2xlYXIgbWFqb3JpdHkgb2Ygbm9kZXMgY2FuIGJlIGlkZW50aWZpZWQuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJGb3IgbW9zdCBlbnZpcm9ubWVudHMsIGNvbmZpZ3VyaW5nIHF1ZXVlIHJlcGxpY2F0aW9uIHRvIG1vcmUgdGhhbiBoYWxmIOKAlCBidXQgbm90IGFsbCDigJRcXHJcXG5jbHVzdGVyIG5vZGVzIGlzIHN1ZmZpY2llbnQuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oNCwge1xuICAgICAgaWQ6IFwidW5ldmVuLW51bWJlcnMtb2Ytbm9kZXMtYW5kLWNsdXN0ZXItbWFqb3JpdHlcIixcbiAgICAgIGNoaWxkcmVuOiBcIlVuZXZlbiBOdW1iZXJzIG9mIE5vZGVzIGFuZCBDbHVzdGVyIE1ham9yaXR5XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkl0IGlzIGltcG9ydGFudCB0byBwaWNrIGEgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vcGFydGl0aW9uc1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJwYXJ0aXRpb24gaGFuZGxpbmcgc3RyYXRlZ3lcIlxuICAgICAgfSksIFwiIGJlZm9yZSBnb2luZyBpbnRvIHByb2R1Y3Rpb24uXFxyXFxuV2hlbiBpbiBkb3VidCwgdXNlIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInBhdXNlX21pbm9yaXR5XCJcbiAgICAgIH0pLCBcIiBzdHJhdGVneSB3aXRoIGFuIG9kZCBudW1iZXIgb2Ygbm9kZXMgKDMsIDUsIDcsIGFuZCBzbyBvbikuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiVW5ldmVuIG51bWJlciBvZiBub2RlcyBtYWtlIG5ldHdvcmsgcGFydGl0aW9uIHJlY292ZXJ5IG1vcmUgcHJlZGljdGFibGUsIHdpdGggdGhlIGNvbW1vbiBvcHRpb25cXHJcXG5vZiB0aGUgbWlub3JpdHkgYXV0b21hdGljYWxseSByZWZ1c2luZyB0byBzZXJ2aWNlIGNvbW1hbmRzLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDQsIHtcbiAgICAgIGlkOiBcImRhdGEtbG9jYWxpdHktY29uc2lkZXJhdGlvbnNcIixcbiAgICAgIGNoaWxkcmVuOiBcIkRhdGEgTG9jYWxpdHkgQ29uc2lkZXJhdGlvbnNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiV2l0aCBtdWx0aS1ub2RlIGNsdXN0ZXJzLCBkYXRhIGxvY2FsaXR5IGJlY29tZXMgYW4gaW1wb3J0YW50IGNvbnNpZGVyYXRpb24uXFxyXFxuU2luY2UgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vY2x1c3RlcmluZ1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJjbGllbnRzIGNhbiBjb25uZWN0IHRvIGFueSBub2RlXCJcbiAgICAgIH0pLCBcIiwgUmFiYml0TVEgbm9kZXMgbWF5IG5lZWQgdG8gcGVyZm9ybVxcclxcbmludGVyLWNsdXN0ZXIgcm91dGluZyBvZiBtZXNzYWdlcyBhbmQgaW50ZXJuYWwgb3BlcmF0aW9ucy4gRGF0YSBsb2NhbGl0eSB3aWxsIGJlIGJlc3RcXHJcXG53aGVuIHByb2R1Y2VycyAocHVibGlzaGVycykgY29ubmVjdCB0byBSYWJiaXRNUSBub2RlcyB3aGVyZSBxdWV1ZSBsZWFkZXJzIGFyZSBydW5uaW5nLlxcclxcblN1Y2ggdG9wb2xvZ3kgaXMgZGlmZmljdWx0IHRvIGFjaGlldmUgaW4gcHJhY3RpY2UuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiV2l0aCBjbGFzc2ljIHF1ZXVlcywgYWxsIGRlbGl2ZXJpZXMgYXJlIHBlcmZvcm1lZCBmcm9tIHRoZSBsZWFkZXIgcmVwbGljYS5cXHJcXG5RdW9ydW0gcXVldWVzIGNhbiBkZWxpdmVyIG1lc3NhZ2VzIGZyb20gcXVldWUgcmVwbGljYXMgYXMgd2VsbCxcXHJcXG5zbyBhcyBsb25nIGFzIGNvbnN1bWVycyBjb25uZWN0IHRvIGEgbm9kZSB3aGVyZSBhXFxyXFxucXVvcnVtIHF1ZXVlIHJlcGxpY2EgaXMgaG9zdGVkLCBtZXNzYWdlcyBkZWxpdmVyZWQgdG8gdGhvc2UgY29uc3VtZXJzIHdpbGwgYmVcXHJcXG5wZXJmb3JtZWQgZnJvbSB0aGUgbG9jYWwgbm9kZS5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmg0LCB7XG4gICAgICBpZDogXCJncm93aW5nLW5vZGUtY291bnQtdG8tc3VzdGFpbi1tb3JlLWNvbmN1cnJlbnQtY2xpZW50c1wiLFxuICAgICAgY2hpbGRyZW46IFwiR3Jvd2luZyBOb2RlIENvdW50IHRvIFN1c3RhaW4gTW9yZSBDb25jdXJyZW50IENsaWVudHNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiRW52aXJvbm1lbnRzIHRoYXQgaGF2ZSB0byBzdXN0YWluIGEgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vbmV0d29ya2luZyN0dW5pbmctZm9yLWxhcmdlLW51bWJlci1vZi1jb25uZWN0aW9uc1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJsYXJnZSBudW1iZXIgb2YgY29uY3VycmVudCBjbGllbnQgY29ubmVjdGlvbnNcIlxuICAgICAgfSksIFwiXFxyXFxud2lsbCBiZW5lZml0IGZyb20gbW9yZSBjbHVzdGVyIG5vZGVzIGFzIGxvbmcgYXMgdGhlIGNvbm5lY3Rpb25zIGFyZSBkaXN0cmlidXRlZFxcclxcbmFjcm9zcyB0aGVtLiBUaGlzIGNhbiBiZSBhY2hpZXZlZCB1c2luZyBhIGxvYWQgYmFsYW5jZXIgb3IgbWFraW5nIGNsaWVudHNcXHJcXG5yYW5kb21seSBwaWNrIGEgbm9kZSB0byBjb25uZWN0IHRvIGZyb20gdGhlIHByb3ZpZGVkIG5vZGUgbGlzdC5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oNCwge1xuICAgICAgaWQ6IFwiaW5jcmVhc2luZy1ub2RlLWNvdW50cy12cy1kZXBsb3lpbmctc2VwYXJhdGUtY2x1c3RlcnMtZm9yLXNlcGFyYXRlLXB1cnBvc2VzXCIsXG4gICAgICBjaGlsZHJlbjogXCJJbmNyZWFzaW5nIE5vZGUgQ291bnRzIHZzLiBEZXBsb3lpbmcgU2VwYXJhdGUgQ2x1c3RlcnMgZm9yIFNlcGFyYXRlIFB1cnBvc2VzXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkFsbCBtZXRhZGF0YSAoXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vZGVmaW5pdGlvbnNcIixcbiAgICAgICAgY2hpbGRyZW46IFwiZGVmaW5pdGlvbnNcIlxuICAgICAgfSksIFwiOiB2aXJ0dWFsIGhvc3RzLCB1c2VycywgcXVldWVzLCBleGNoYW5nZXMsIGJpbmRpbmdzLCBldGMuKSBpcyByZXBsaWNhdGVkXFxyXFxuYWNyb3NzIGFsbCBub2RlcyBpbiB0aGUgY2x1c3RlciwgYW5kIG1vc3QgbWV0YWRhdGEgY2hhbmdlcyBhcmUgc3luY2hyb25vdXMgaW4gbmF0dXJlLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVGhlIGNvc3Qgb2YgcHJvcGFnYXRpbmcgc3VjaCBjaGFuZ2VzIGdvZXMgdXAgd2l0aCB0aGUgbnVtYmVyIG9mIGNsdXN0ZXIgbm9kZXMsXFxyXFxuYm90aCBkdXJpbmcgb3BlcmF0aW9ucyBhbmQgbm9kZSByZXN0YXJ0cy4gVXNlcnMgd2hvIGZpbmQgdGhlbXNlbHZlcyBpbiBuZWVkIG9mXFxyXFxuY2x1c3RlcnMgd2l0aCBub2RlIGNvdW50cyBpbiBkb3VibGUgZGlnaXRzIHNob3VsZFxcclxcblwiLCBfanN4KF9jb21wb25lbnRzLnN0cm9uZywge1xuICAgICAgICBjaGlsZHJlbjogXCJjb25zaWRlciB1c2luZyBpbmRlcGVuZGVudCBjbHVzdGVycyBmb3Igc2VwYXJhdGUgcGFydHMgb2YgdGhlIHN5c3RlbVwiXG4gICAgICB9KSwgXCIgd2hlcmUgcG9zc2libGUuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDMsIHtcbiAgICAgIGlkOiBcImNsdXN0ZXJpbmctbnRwXCIsXG4gICAgICBjaGlsZHJlbjogXCJOb2RlIFRpbWUgU3luY2hyb25pemF0aW9uXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJBIFJhYmJpdE1RIGNsdXN0ZXIgd2lsbCB0eXBpY2FsbHkgZnVuY3Rpb24gd2VsbCB3aXRob3V0IGNsb2Nrc1xcclxcbm9mIHBhcnRpY2lwYXRpbmcgc2VydmVycyBiZWluZyBzeW5jaHJvbml6ZWQuIEhvd2V2ZXIgc29tZSBwbHVnaW5zLFxcclxcbnN1Y2ggYXMgdGhlIG1hbmFnZW1lbnQgb25lLCBtYWtlIHVzZSBvZiBsb2NhbCB0aW1lc3RhbXBzIGZvciBtZXRyaWNzXFxyXFxucHJvY2Vzc2luZyBhbmQgbWF5IGRpc3BsYXkgaW5jb3JyZWN0IHN0YXRpc3RpY3Mgd2hlbiB0aGUgY3VycmVudFxcclxcbnRpbWUgb2Ygbm9kZXMgZHJpZnQgYXBhcnQuIEl0IGlzIHRoZXJlZm9yZSByZWNvbW1lbmRlZCB0aGF0IHNlcnZlcnNcXHJcXG51c2UgTlRQIG9yIHNpbWlsYXIgdG8gZW5zdXJlIGNsb2NrcyByZW1haW4gaW4gc3luYy5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJhcHBzXCIsXG4gICAgICBjaGlsZHJlbjogXCJBcHBsaWNhdGlvbiBDb25zaWRlcmF0aW9uc1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiVGhlIHdheSBhcHBsaWNhdGlvbnMgYXJlIGRlc2lnbmVkIGFuZCB1c2UgUmFiYml0TVEgY2xpZW50IGxpYnJhcmllc1xcclxcbmlzIGEgbWFqb3IgY29udHJpYnV0b3IgdG8gdGhlIG92ZXJhbGwgc3lzdGVtIHJlc2lsaWVuY2UuIEFwcGxpY2F0aW9uc1xcclxcbnRoYXQgdXNlIHJlc291cmNlcyBpbmVmZmljaWVudGx5IG9yIGxlYWsgdGhlbSB3aWxsIGV2ZW50dWFsbHkgYWZmZWN0IHRoZVxcclxcbnJlc3Qgb2YgdGhlIHN5c3RlbS4gRm9yIGV4YW1wbGUsIGFuIGFwcCB0aGF0IGNvbnRpbnVvdXNseSBvcGVucyBjb25uZWN0aW9uc1xcclxcbmJ1dCBuZXZlciBjbG9zZXMgdGhlbSB3aWxsIGV4aGF1c3QgY2x1c3RlciBub2RlcyBvdXQgb2YgZmlsZSBkZXNjcmlwdG9ycyBzb1xcclxcbm5vIG5ldyBjb25uZWN0aW9ucyB3aWxsIGJlIGFjY2VwdGVkLiBUaGlzIGFuZCBzaW1pbGFyIHByb2JsZW1zIGNhblxcclxcbm1hbmlmZXN0IHRoZW1zZWx2ZXMgaW4gbW9yZSBjb21wbGV4IHNjZW5hcmlvcywgZS5nIHRob3NlIGNvbGxlY3RpdmVseVxcclxcbmtub3duIGFzIHRoZSB0aHVuZGVyaW5nIGhlcmQgcHJvYmxlbS5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVGhpcyBzZWN0aW9uIGNvdmVycyBhIG51bWJlciBvZiBtb3N0IGNvbW1vbiBwcm9ibGVtcy4gTW9zdCBvZiB0aGVzZSBwcm9ibGVtc1xcclxcbmFyZSBnZW5lcmFsbHkgbm90IHByb3RvY29sLXNwZWNpZmljIG9yIG5ldy4gVGhleSBjYW4gYmUgaGFyZCB0byBkZXRlY3QsIGhvd2V2ZXIuXFxyXFxuQWRlcXVhdGUgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vbW9uaXRvcmluZ1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJtb25pdG9yaW5nXCJcbiAgICAgIH0pLCBcIiBvZiB0aGUgc3lzdGVtIGlzIGNyaXRpY2FsbHlcXHJcXG5pbXBvcnRhbnQgYXMgaXQgaXMgdGhlIG9ubHkgd2F5IHRvIHNwb3QgcHJvYmxlbWF0aWMgdHJlbmRzXFxyXFxuKGUuZy4gY2hhbm5lbCBsZWFrcywgZ3Jvd2luZyBmaWxlIGRlc2NyaXB0b3IgdXNhZ2UgZnJvbSBwb29yIGNvbm5lY3Rpb24gbWFuYWdlbWVudCkgZWFybHkuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDMsIHtcbiAgICAgIGlkOiBcImFwcHMtY29ubmVjdGlvbi1tYW5hZ2VtZW50XCIsXG4gICAgICBjaGlsZHJlbjogXCJDb25uZWN0aW9uIE1hbmFnZW1lbnRcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIk1lc3NhZ2luZyBwcm90b2NvbHMgZ2VuZXJhbGx5IGFzc3VtZSBsb25nLWxpdmVkIGNvbm5lY3Rpb25zLiBTb21lIGFwcGxpY2F0aW9uc1xcclxcbmNvbm5lY3QgdG8gUmFiYml0TVEgb24gc3RhcnQgYW5kIG9ubHkgY2xvc2UgdGhlIGNvbm5lY3Rpb24ocykgd2hlbiB0aGV5IGhhdmUgdG8gdGVybWluYXRlLlxcclxcbk90aGVycyBvcGVuIGFuZCBjbG9zZSBjb25uZWN0aW9ucyBtb3JlIGR5bmFtaWNhbGx5LiBGb3IgdGhlIGxhdHRlciBncm91cCBpdCBpcyBpbXBvcnRhbnQgdG8gY2xvc2VcXHJcXG50aGVtIHdoZW4gdGhleSBhcmUgbm8gbG9uZ2VyIHVzZWQuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkNvbm5lY3Rpb25zIGNhbiBiZSBjbG9zZWQgZm9yIHJlYXNvbnMgb3V0c2lkZSBvZiBhcHBsaWNhdGlvbiBkZXZlbG9wZXIncyBjb250cm9sLlxcclxcbk1lc3NhZ2luZyBwcm90b2NvbHMgc3VwcG9ydGVkIGJ5IFJhYmJpdE1RIHVzZSBhIGZlYXR1cmUgY2FsbGVkIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL2hlYXJ0YmVhdHNcIixcbiAgICAgICAgY2hpbGRyZW46IFwiaGVhcnRiZWF0c1wiXG4gICAgICB9KSwgXCIgKHRoZSBuYW1lXFxyXFxubWF5IHZhcnkgYnV0IHRoZSBjb25jZXB0IGRvZXMgbm90KSB0byBkZXRlY3Qgc3VjaCBjb25uZWN0aW9ucyBxdWlja2VyIHRoYW4gdGhlIFRDUCBzdGFjay5cXHJcXG5EZXZlbG9wZXJzIHNob3VsZCBiZSBjYXJlZnVsIGFib3V0IHVzaW5nIGhlYXJ0YmVhdCB0aW1lb3V0IHRoYXQgYXJlIHRvbyBsb3cgKGxlc3MgdGhhbiA1IHNlY29uZHMpXFxyXFxuYXMgdGhhdCBtYXkgcHJvZHVjZSBmYWxzZSBwb3NpdGl2ZXMgd2hlbiBuZXR3b3JrIGNvbmdlc3Rpb24gb3Igc3lzdGVtIGxvYWQgZ29lcyB1cC5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJWZXJ5IHNob3J0IGxpdmVkIGNvbm5lY3Rpb25zIHNob3VsZCBiZSBhdm9pZGVkIHdoZW4gcG9zc2libGUuIFRoZSBmb2xsb3dpbmcgc2VjdGlvblxcclxcbndpbGwgY292ZXIgdGhpcyBpbiBtb3JlIGRldGFpbC5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiSXQgaXMgcmVjb21tZW5kZWQgdGhhdCwgd2hlbiBwb3NzaWJsZSwgcHVibGlzaGVycyBhbmQgY29uc3VtZXJzIHVzZSBzZXBhcmF0ZSBjb25uZWN0aW9uc1xcclxcbnNvIHRoYXQgY29uc3VtZXJzIGFyZSBpc29sYXRlZCBmcm9tIHBvdGVudGlhbCBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi9jb25uZWN0aW9ucyNmbG93LWNvbnRyb2xcIixcbiAgICAgICAgY2hpbGRyZW46IFwiZmxvdyBjb250cm9sXCJcbiAgICAgIH0pLCBcIlxcclxcbnRoYXQgbWF5IGJlIGFwcGxpZWQgdG8gcHVibGlzaGluZyBjb25uZWN0aW9ucywgYWZmZWN0aW5nIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL2NvbmZpcm1zXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIm1hbnVhbCBjb25zdW1lciBhY2tub3dsZWRnZW1lbnRzXCJcbiAgICAgIH0pLCBcIi5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwiYXBwcy1jb25uZWN0aW9uLWNodXJuXCIsXG4gICAgICBjaGlsZHJlbjogXCJDb25uZWN0aW9uIENodXJuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkFzIG1lbnRpb25lZCBhYm92ZSwgbWVzc2FnaW5nIHByb3RvY29scyBnZW5lcmFsbHkgYXNzdW1lIGxvbmctbGl2ZWQgY29ubmVjdGlvbnMuIFNvbWUgYXBwbGljYXRpb25zXFxyXFxubWF5IG9wZW4gYSBuZXcgY29ubmVjdGlvbiB0byBwZXJmb3JtIGEgc2luZ2xlIG9wZXJhdGlvbiAoZS5nLiBwdWJsaXNoIGEgbWVzc2FnZSkgYW5kIHRoZW4gY2xvc2UgaXQuXFxyXFxuVGhpcyBpcyBoaWdobHkgaW5lZmZpY2llbnQgYXMgb3BlbmluZyBhIGNvbm5lY3Rpb24gaXMgYW4gZXhwZW5zaXZlIG9wZXJhdGlvbiAoY29tcGFyZWQgdG8gcmV1c2luZ1xcclxcbmFuIGV4aXN0aW5nIG9uZSkuIFN1Y2ggd29ya2xvYWQgYWxzbyBsZWFkcyB0byBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi9uZXR3b3JraW5nI2RlYWxpbmctd2l0aC1oaWdoLWNvbm5lY3Rpb24tY2h1cm5cIixcbiAgICAgICAgY2hpbGRyZW46IFwiY29ubmVjdGlvbiBjaHVyblwiXG4gICAgICB9KSwgXCIuXFxyXFxuTm9kZXMgZXhwZXJpZW5jaW5nIGhpZ2ggY29ubmVjdGlvbiBjaHVybiBtdXN0IGJlIHR1bmVkIHRvIHJlbGVhc2UgVENQIGNvbm5lY3Rpb25zIG11Y2ggcXVpY2tlciB0aGFuXFxyXFxua2VybmVsIGRlZmF1bHRzLCBvdGhlcndpc2UgdGhleSB3aWxsIGV2ZW50dWFsbHkgcnVuIG91dCBvZiBmaWxlIGhhbmRsZXMgb3IgbWVtb3J5IGFuZCB3aWxsIHN0b3BcXHJcXG5hY2NlcHRpbmcgbmV3IGNvbm5lY3Rpb25zLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIklmIGEgc21hbGwgbnVtYmVyIG9mIGxvbmcgbGl2ZWQgY29ubmVjdGlvbnMgaXMgbm90IGFuIG9wdGlvbiwgY29ubmVjdGlvbiBwb29saW5nIGNhbiBoZWxwXFxyXFxucmVkdWNlIHBlYWsgcmVzb3VyY2UgdXNhZ2UuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwiYXBwcy1hdXRvbWF0aWMtcmVjb3ZlcnlcIixcbiAgICAgIGNoaWxkcmVuOiBcIlJlY292ZXJ5IGZyb20gQ29ubmVjdGlvbiBGYWlsdXJlc1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJTb21lIGNsaWVudCBsaWJyYXJpZXMsIGZvciBleGFtcGxlLCBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiL2NsaWVudC1saWJyYXJpZXMvamF2YS1hcGktZ3VpZGVcIixcbiAgICAgICAgY2hpbGRyZW46IFwiSmF2YVwiXG4gICAgICB9KSwgXCIsXFxyXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi9jbGllbnQtbGlicmFyaWVzL2RvdG5ldC1hcGktZ3VpZGVcIixcbiAgICAgICAgY2hpbGRyZW46IFwiLk5FVFwiXG4gICAgICB9KSwgXCIgYW5kXFxyXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcImh0dHA6Ly9ydWJ5YnVubnkuaW5mb1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJSdWJ5XCJcbiAgICAgIH0pLCBcIiwgc3VwcG9ydFxcclxcbmF1dG9tYXRpYyBjb25uZWN0aW9uIHJlY292ZXJ5IGFmdGVyIG5ldHdvcmsgZmFpbHVyZXMuIElmIHRoZVxcclxcbmNsaWVudCB1c2VkIHByb3ZpZGVzIHRoaXMgZmVhdHVyZSwgaXQgaXMgcmVjb21tZW5kZWQgdG8gdXNlXFxyXFxuaXQgaW5zdGVhZCBvZiBkZXZlbG9waW5nIHlvdXIgb3duIHJlY292ZXJ5IG1lY2hhbmlzbS5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJPdGhlciBjbGllbnRzIChHbywgUGlrYSkgZG8gbm90IHN1cHBvcnQgYXV0b21hdGljIGNvbm5lY3Rpb24gcmVjb3ZlcnkgYXMgYSBmZWF0dXJlXFxyXFxuYnV0IGRvIHByb3ZpZGUgZXhhbXBsZXMgdGhhdCBkZW1vbnN0cmF0ZSBob3cgdG8gcmVjb3ZlciBmcm9tIGNvbm5lY3Rpb24gZmFpbHVyZXMuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwiYXBwcy1leGNlc3NpdmUtY2hhbm5lbC11c2FnZVwiLFxuICAgICAgY2hpbGRyZW46IFwiRXhjZXNzaXZlIENoYW5uZWwgVXNhZ2VcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkNoYW5uZWxzIGFsc28gY29uc3VtZSByZXNvdXJjZXMgaW4gYm90aCBjbGllbnQgYW5kIHNlcnZlci4gQXBwbGljYXRpb25zIHNob3VsZCBtaW5pbWl6ZVxcclxcbnRoZSBudW1iZXIgb2YgY2hhbm5lbHMgdGhleSB1c2Ugd2hlbiBwb3NzaWJsZSBhbmQgY2xvc2UgY2hhbm5lbHMgdGhhdCBhcmUgbm8gbG9uZ2VyIG5lY2Vzc2FyeS5cXHJcXG5DaGFubmVscywgbGlrZSBjb25uZWN0aW9ucywgYXJlIG1lYW50IHRvIGJlIGxvbmcgbGl2ZWQuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJOb3RlIHRoYXQgY2xvc2luZyBhIGNvbm5lY3Rpb24gYXV0b21hdGljYWxseSBjbG9zZXMgYWxsIGNoYW5uZWxzIG9uIGl0LlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDMsIHtcbiAgICAgIGlkOiBcImFwcHMtcG9sbGluZy1jb25zdW1lcnNcIixcbiAgICAgIGNoaWxkcmVuOiBcIlBvbGxpbmcgQ29uc3VtZXJzXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL2NvbnN1bWVycyNwb2xsaW5nXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIlBvbGxpbmcgY29uc3VtZXJzXCJcbiAgICAgIH0pLCBcIiAoY29uc3VtcHRpb24gd2l0aCBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcImJhc2ljLmdldFwiXG4gICAgICB9KSwgXCIpIGlzIGEgZmVhdHVyZSB0aGF0IGFwcGxpY2F0aW9uIGRldmVsb3BlcnNcXHJcXG5zaG91bGQgYXZvaWQgaW4gbW9zdCBjYXNlcyBhcyBwb2xsaW5nIGlzIGluaGVyZW50bHkgaW5lZmZpY2llbnQuXCJdXG4gICAgfSldXG4gIH0pO1xufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudChwcm9wcyA9IHt9KSB7XG4gIGNvbnN0IHt3cmFwcGVyOiBNRFhMYXlvdXR9ID0ge1xuICAgIC4uLl9wcm92aWRlQ29tcG9uZW50cygpLFxuICAgIC4uLnByb3BzLmNvbXBvbmVudHNcbiAgfTtcbiAgcmV0dXJuIE1EWExheW91dCA/IF9qc3goTURYTGF5b3V0LCB7XG4gICAgLi4ucHJvcHMsXG4gICAgY2hpbGRyZW46IF9qc3goX2NyZWF0ZU1keENvbnRlbnQsIHtcbiAgICAgIC4uLnByb3BzXG4gICAgfSlcbiAgfSkgOiBfY3JlYXRlTWR4Q29udGVudChwcm9wcyk7XG59XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./versioned_docs/version-3.13/production-checklist.md\n");

/***/ })

}]);