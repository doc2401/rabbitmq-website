"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkrabbitmq_website"] = globalThis["webpackChunkrabbitmq_website"] || []).push([["content---rabbitmq-website-client-libraries-amqp-client-libraries-783-ca7"],{

/***/ "./.docusaurus/docusaurus-plugin-content-docs/client-libraries/site-client-libraries-amqp-client-libraries-md-783.json":
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"id":"amqp-client-libraries","title":"AMQP 1.0 Client Libraries","description":"<!--","source":"@site/client-libraries/amqp-client-libraries.md","sourceDirName":".","slug":"/amqp-client-libraries","permalink":"/rabbitmq-website/client-libraries/amqp-client-libraries","draft":false,"unlisted":false,"editUrl":"https://github.com/rabbitmq/rabbitmq-website/tree/main/client-libraries/amqp-client-libraries.md","tags":[],"version":"current","frontMatter":{"title":"AMQP 1.0 Client Libraries"},"sidebar":"clientLibsSidebar","previous":{"title":"Client Libraries","permalink":"/rabbitmq-website/client-libraries/"},"next":{"title":"RabbitMQ Java Client Library","permalink":"/rabbitmq-website/client-libraries/java-client"}}');

/***/ }),

/***/ "./client-libraries/amqp-client-libraries.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assets: () => (/* binding */ assets),\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   metadata: () => (/* reexport default export from named module */ _site_docusaurus_docusaurus_plugin_content_docs_client_libraries_site_client_libraries_amqp_client_libraries_md_783_json__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var _site_docusaurus_docusaurus_plugin_content_docs_client_libraries_site_client_libraries_amqp_client_libraries_md_783_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.docusaurus/docusaurus-plugin-content-docs/client-libraries/site-client-libraries-amqp-client-libraries-md-783.json\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n/* harmony import */ var _theme_Tabs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n/* harmony import */ var _theme_TabItem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n\n\nconst frontMatter = {\n\ttitle: 'AMQP 1.0 Client Libraries'\n};\nconst contentTitle = 'AMQP 1.0 Client Libraries';\n\nconst assets = {\n\n};\n\n\n\n\n\nconst toc = [{\n  \"value\": \"Overview\",\n  \"id\": \"overview\",\n  \"level\": 2\n}, {\n  \"value\": \"Safety\",\n  \"id\": \"safety\",\n  \"level\": 2\n}, {\n  \"value\": \"Guarantees\",\n  \"id\": \"guarantees\",\n  \"level\": 2\n}, {\n  \"value\": \"Client API\",\n  \"id\": \"client-api\",\n  \"level\": 2\n}, {\n  \"value\": \"Connecting\",\n  \"id\": \"connecting\",\n  \"level\": 3\n}, {\n  \"value\": \"Publishing\",\n  \"id\": \"publishing\",\n  \"level\": 3\n}, {\n  \"value\": \"Consuming\",\n  \"id\": \"consuming\",\n  \"level\": 3\n}, {\n  \"value\": \"Consumer Creation\",\n  \"id\": \"consumer-creation\",\n  \"level\": 4\n}, {\n  \"value\": \"Message Processing Result (Outcome)\",\n  \"id\": \"message-processing-result-outcome\",\n  \"level\": 4\n}, {\n  \"value\": \"Consumer Graceful Shutdown\",\n  \"id\": \"consumer-graceful-shutdown\",\n  \"level\": 4\n}, {\n  \"value\": \"Support for Streams\",\n  \"id\": \"support-for-streams\",\n  \"level\": 4\n}, {\n  \"value\": \"Topology Management\",\n  \"id\": \"topology-management\",\n  \"level\": 2\n}, {\n  \"value\": \"Exchanges\",\n  \"id\": \"exchanges\",\n  \"level\": 3\n}, {\n  \"value\": \"Queues\",\n  \"id\": \"queues\",\n  \"level\": 3\n}, {\n  \"value\": \"Bindings\",\n  \"id\": \"bindings\",\n  \"level\": 3\n}, {\n  \"value\": \"Advanced Usage\",\n  \"id\": \"advanced-usage\",\n  \"level\": 2\n}, {\n  \"value\": \"Lifecycle Listeners\",\n  \"id\": \"lifecycle-listeners\",\n  \"level\": 3\n}, {\n  \"value\": \"Automatic Connection Recovery\",\n  \"id\": \"automatic-connection-recovery\",\n  \"level\": 3\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    admonition: \"admonition\",\n    code: \"code\",\n    em: \"em\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.header, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1, {\n        id: \"amqp-10-client-libraries\",\n        children: \"AMQP 1.0 Client Libraries\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This page documents the usage of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/amqp\",\n        children: \"AMQP 1.0\"\n      }), \" client libraries for \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"RabbitMQ 4.0 or more\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The RabbitMQ team supports the following libraries:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.a, {\n          href: \"https://github.com/rabbitmq/rabbitmq-amqp-java-client\",\n          children: [\"RabbitMQ AMQP 1.0 \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n            children: \"Java\"\n          }), \" client\"]\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.a, {\n          href: \"https://github.com/rabbitmq/rabbitmq-amqp-dotnet-client\",\n          children: [\"RabbitMQ AMQP 1.0 \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n            children: \".NET\"\n          }), \" client\"]\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.a, {\n          href: \"https://github.com/rabbitmq/rabbitmq-amqp-go-client\",\n          children: [\"RabbitMQ AMQP 1.0 \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n            children: \"Go\"\n          }), \" client\"]\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.a, {\n          href: \"https://github.com/rabbitmq/rabbitmq-amqp-python-client\",\n          children: [\"RabbitMQ AMQP 1.0 \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n            children: \"Python\"\n          }), \" client\"]\n        })\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Application developers will find here how to use the libraries for the most common use cases.\\r\\nFor other information like licensing, downloading, dependency management, advanced and specific usage and configuration, please see the README page in the repository of the respective libraries.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"overview\",\n      children: \"Overview\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The RabbitMQ team maintains a set of AMQP 1.0 client libraries \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/blog/2024/08/05/native-amqp#rabbitmq-amqp-10-clients\",\n        children: \"designed and optimized\"\n      }), \" for RabbitMQ.\\r\\nThey offer a simple and safe, yet powerful API on top of AMQP 1.0.\\r\\nApplications can publish and consume messages with these libraries, as well as manage the server topology in a consistent way across programming languages.\\r\\nThe libraries also offer advanced features like automatic connection and topology recovery, and connection affinity with queues.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.admonition, {\n      type: \"note\",\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: \"RabbitMQ is compatible with any AMQP-1.0-compliant client library.\\r\\nIt is not mandatory to use the RabbitMQ AMQP 1.0 client libraries with RabbitMQ, but applications are strongly encouraged to do so for the best experience.\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"safety\",\n      children: \"Safety\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"RabbitMQ AMQP 1.0 client libraries are safe by default, they always create \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/queues#durability\",\n        children: \"durable entities\"\n      }), \" and always publish persistent messages.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"guarantees\",\n      children: \"Guarantees\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"RabbitMQ AMQP 1.0 client libraries provide at-least-once guarantees.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The broker always \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#publishing\",\n        children: \"confirms\"\n      }), \" the proper handling of published messages.\\r\\nPublishers achieve this by using the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"unsettled\"\n      }), \" \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-transport-v1.0-os.html#type-sender-settle-mode\",\n        children: \"sender settle mode\"\n      }), \" and the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"first\"\n      }), \" \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-transport-v1.0-os.html#type-receiver-settle-mode\",\n        children: \"receiver settle mode\"\n      }), \" when they get created.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Consumers must always \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#message-processing-result-outcome\",\n        children: \"signal\"\n      }), \" the result of message processing to the broker.\\r\\nConsumers use the same settings as publishers when they get created (\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"first\"\n      }), \" \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-transport-v1.0-os.html#type-receiver-settle-mode\",\n        children: \"receiver settle mode\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"unsettled\"\n      }), \" \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-transport-v1.0-os.html#type-sender-settle-mode\",\n        children: \"sender settle mode\"\n      }), \").\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"client-api\",\n      children: \"Client API\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This section covers how to use the RabbitMQ AMQP 1.0 client libraries to connect to a cluster, and publish and consume messages.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"connecting\",\n      children: \"Connecting\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Libraries provide an entry point to a node or a cluster of nodes.\\r\\nIts name is the \\\"environment\\\".\\r\\nThe environment allows creating connections.\\r\\nIt can contain infrastucture-related configuration settings shared between connections (e.g. pools of threads for Java).\\r\\nHere is how to create the environment:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Creating the environment\\\"\",\n            children: \"import com.rabbitmq.client.amqp.*;\\r\\nimport com.rabbitmq.client.amqp.impl.AmqpEnvironmentBuilder;\\r\\n\\r\\n// ...\\r\\n\\r\\n// create the environment instance\\r\\nEnvironment environment = new AmqpEnvironmentBuilder()\\r\\n    .build();\\r\\n// ...\\r\\n// close the environment when the application stops\\r\\nenvironment.close();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Creating the environment\\\"\",\n            children: \"using RabbitMQ.AMQP.Client;\\r\\nusing RabbitMQ.AMQP.Client.Impl;\\r\\n\\r\\n// ...\\r\\n\\r\\n// create the environment instance\\r\\nIEnvironment environment = await AmqpEnvironment.CreateAsync(\\r\\n    ConnectionSettingBuilder.Create().Build());\\r\\n// ...\\r\\n// close the environment when the application stops\\r\\nawait environment.CloseAsync();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\"Creating the environment\\\"\",\n            children: \"from rabbitmq_amqp_python_client import Environment\\r\\n\\r\\n# ...\\r\\n\\r\\n# create the environment instance\\r\\nenvironment = Environment(\\\"amqp://guest:guest@localhost:5672/\\\")\\r\\n# ...\\r\\n# close the environment when the application stops\\r\\nenvironment.close()\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-go\",\n            metastring: \"title=\\\"Creating the environment\\\"\",\n            children: \"import (\\r\\n    rmq \\\"github.com/rabbitmq/rabbitmq-amqp-go-client/pkg/rabbitmqamqp\\\"\\r\\n)\\r\\n// ...\\r\\n// create the environment instance for a single node\\r\\nenv := rmq.NewEnvironment(\\\"amqp://guest:guest@localhost:5672/\\\", nil)\\r\\n// in case you have multiple endpoints you can use the following:\\r\\n// clusterEnv := rmq.NewClusterEnvironment([]rmq.Endpoint{\\r\\n//      {Address: \\\"amqp://server1\\\", Options: &rmq.AmqpConnOptions{}},\\r\\n//      {Address: \\\"amqp://server2\\\", Options: &rmq.AmqpConnOptions{}},\\r\\n//     })\\r\\n\\r\\n// ...\\r\\n// close the connections\\r\\nenv.CloseConnections(context.Background())\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"There is usually one environment instance for an application process.\\r\\nThe application must close the environment to release its resources when it exits.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Applications open connections from the environment.\\r\\nThey must specify appropriate settings to connect to the cluster nodes (URI, credentials).\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Opening a connection\\\"\",\n            children: \"// open a connection from the environment\\r\\nConnection connection = environment.connectionBuilder()\\r\\n    .uri(\\\"amqp://admin:admin@localhost:5672/%2f\\\")\\r\\n    .build();\\r\\n// ...\\r\\n// close the connection when it is no longer necessary\\r\\nconnection.close();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Opening a connection\\\"\",\n            children: \"// open a connection from the environment setting   \\r\\nIConnection connection = await environment.CreateConnectionAsync();\\r\\n\\r\\n//open a connection from the environment with different settings\\r\\nConnectionSettingBuilder otherSettingBuilder = ConnectionSettingBuilder.Create()\\r\\n    .ContainerId(\\\"my_containerId\\\")\\r\\n    .Host(\\\"localhost\\\");\\r\\nIConnection connection = await environment.CreateConnectionAsync(otherSettingBuilder.Build());\\r\\n// ...\\r\\n// close the connection when it is no longer necessary\\r\\nawait connection.CloseAsync();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\"Opening a connection\\\"\",\n            children: \"# open a connection from the environment setting   \\r\\nconnection = environment.connection()\\r\\n\\r\\n# close the connection when it is no longer necessary\\r\\nconnection.close()\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-Go\",\n            metastring: \"title=\\\"Opening a connection\\\"\",\n            children: \"// open a connection from the environment setting   \\r\\nconnection, err := env.NewConnection(context.Background())\\r\\n\\r\\n// close the connection when it is no longer necessary\\r\\nconnection.close()\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Libraries use the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"ANONYMOUS\"\n      }), \" \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/access-control#mechanisms\",\n        children: \"SASL authentication mechanism\"\n      }), \" by default.\\r\\nConnections are expected to be long-lived objects, applications should avoid connection churn.\\r\\nThey must be closed when they are no longer needed.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"publishing\",\n      children: \"Publishing\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"A publisher must be created to publish messages.\\r\\nThe target a publisher will publish messages to is usually set on creation, but it also possible to set on a per-message basis.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Here is how to declare a publisher with the target set at creation time:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Creating a publisher\\\"\",\n            children: \"Publisher publisher = connection.publisherBuilder()\\r\\n    .exchange(\\\"foo\\\").key(\\\"bar\\\")\\r\\n    .build();\\r\\n// ...\\r\\n// close the publisher when it is no longer necessary \\r\\npublisher.close();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Creating a publisher\\\"\",\n            children: \"// The publisher can use exchange (optionally with a key) or queue to publish messages. \\r\\nIPublisher publisher = await connection.PublisherBuilder().Exchange(\\\"foo\\\").Key(\\\"bar\\\")\\r\\n    .BuildAsync();\\r\\n\\r\\n// ...\\r\\n// close the publisher when it is no longer necessary \\r\\nawait publisher.CloseAsync();\\r\\npublisher.Dispose();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\"Creating a publisher\\\"\",\n            children: \"# The publisher can use exchange (optionally with a key) or queue to publish messages. \\r\\n# You can use the AddressHelper utility class to get the addr from the exchange name and the key\\r\\nexchange_address = AddressHelper.exchange_address(\\\"foo\\\", \\\"bar\\\")\\r\\npublisher = connection.publisher(addr)\\r\\n# close the publisher when it is no longer necessary \\r\\npublisher.close()\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-Go\",\n            metastring: \"title=\\\"Creating a publisher\\\"\",\n            children: \"// you can use ExchangeAddress and QueueAddress to publish to the queue\\r\\npublisher, err := amqpConnection.NewPublisher(context.Background(), &rmq.ExchangeAddress{\\r\\n        Exchange: \\\"foo\\\",\\r\\n        Key:      \\\"bar\\\",\\r\\n    }, nil)\\r\\n\\r\\n// close the publisher when it is no longer necessary \\r\\npublisher.close()\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In the previous example, every message published with the publisher will go to the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"foo\"\n      }), \" exchange with the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"bar\"\n      }), \" routing key.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.admonition, {\n      type: \"info\",\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n        children: [\"RabbitMQ uses the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"/tutorials/amqp-concepts\",\n          children: \"AMQ 0.9.1 model\"\n        }), \" comprising exchanges, queues, and bindings.\"]\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Messages are created from the publisher instance.\\r\\nThey follow the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#section-message-format\",\n        children: \"AMQP 1.0 message format\"\n      }), \".\\r\\nIt is possible to define the body (as an array of bytes), standard properties, and application properties.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"When a message is published, the broker indicates how it dealt with it in an asynchronous callback.\\r\\nThe client application take appropriate measures depending on the status (\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/amqp#outcomes\",\n        children: \"\\\"outcome\\\" in AMQP terms\"\n      }), \") the broker returned for the message (e.g. store the message in another place if the message has not been \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"accepted\"\n      }), \").\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The following snippet shows how to create a message, publish it, and deal with the response from the broker:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Publishing a message\\\"\",\n            children: \"// create the message\\r\\nMessage message = publisher\\r\\n    .message(\\\"hello\\\".getBytes(StandardCharsets.UTF_8))\\r\\n    .messageId(1L);\\r\\n\\r\\n// publish the message and deal with broker feedback\\r\\npublisher.publish(message, context -> {\\r\\n    // asynchronous feedback from the broker\\r\\n    if (context.status() == Publisher.Status.ACCEPTED) {\\r\\n        // the broker accepted (confirmed) the message\\r\\n    } else {\\r\\n        // deal with possible failure\\r\\n    }\\r\\n});\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Publishing a message\\\"\",\n            children: \"// create the message\\r\\nvar message = new AmqpMessage(\\\"Hello\\\");\\r\\n// publish the message and deal with broker feedback\\r\\n// The result is synchronous, use a `List<Task<PublishResult>>` to increase the performances \\r\\nPublishResult pr = await publisher.PublishAsync(message);\\r\\n  switch (pr.Outcome.State)\\r\\n    {\\r\\n        case OutcomeState.Accepted:\\r\\n            // the broker accepted (confirmed) the message\\r\\n            break;\\r\\n        case OutcomeState.Released:\\r\\n            // the broker could not route the message anywhere \\r\\n            break;\\r\\n        case OutcomeState.Rejected:\\r\\n            // at least one queue rejected the message\\r\\n            break;\\r\\n    }\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\"Publishing a message\\\"\",\n            children: \"# create the message\\r\\nmessage = Message(body=\\\"Hello\\\")\\r\\n# publish the message and deal with broker feedback\\r\\n# The result is synchronous\\r\\nstatus = publisher.publish(Message(message)\\r\\nmatch status.remote_state:\\r\\n    case OutcomeState.ACCEPTED:\\r\\n        # the broker accepted (confirmed) the message\\r\\n    case OutcomeState.RELEASED:\\r\\n        # the broker could not route the message anywhere \\r\\n    case OutcomeState.REJECTED:\\r\\n        # at least one queue rejected the message\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-Go\",\n            metastring: \"title=\\\"Publishing a message\\\"\",\n            children: \"// create the message\\r\\nmessage =  rmq.NewMessage([]byte(\\\"Hello\\\")\\r\\n// publish the message and deal with broker feedback\\r\\npublishResult, err := publisher.Publish(context.Background(),message)\\r\\nif err != nil {\\r\\n    // there is an error \\r\\n}\\r\\n    switch publishResult.Outcome.(type) {\\r\\n        case *rmq.StateAccepted:\\r\\n            // the broker accepted (confirmed) the message\\r\\n            break\\r\\n        case *rmq.StateReleased:\\r\\n           // the broker could not route the message anywhere \\r\\n            break\\r\\n        case *rmq.StateRejected:\\r\\n            // at least one queue rejected the message\\r\\n            stateType := publishResult.Outcome.(*rmq.StateRejected)\\r\\n            if stateType.Error != nil {\\r\\n                // in case there is error \\r\\n            }\\r\\n            break\\r\\n        default:\\r\\n            // these status are not supported. Leave it for AMQP 1.0 compatibility\\r\\n            // see: https://www.rabbitmq.com/docs/next/amqp#outcomes\\r\\n        }\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The publisher example above send messages to a given exchange with a given routing key, but this is not the only supported target for a publisher.\\r\\nHere are the supported non-null targets for a publisher:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Creating publishers with different targets\\\"\",\n            children: \"// publish to an exchange with a routing key\\r\\nPublisher publisher1 = connection.publisherBuilder()\\r\\n    .exchange(\\\"foo\\\").key(\\\"bar\\\") // /exchanges/foo/bar\\r\\n    .build();\\r\\n\\r\\n// publish to an exchange without a routing key\\r\\nPublisher publisher2 = connection.publisherBuilder()\\r\\n    .exchange(\\\"foo\\\") // /exchanges/foo\\r\\n    .build();\\r\\n\\r\\n// publish to a queue\\r\\nPublisher publisher3 = connection.publisherBuilder()\\r\\n    .queue(\\\"some-queue\\\") // /queues/some-queue\\r\\n    .build();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Creating publishers with different targets\\\"\",\n            children: \"// publish to an exchange with a routing key\\r\\nPublisher publisher = await connection.PublisherBuilder()\\r\\n    .Exchange(\\\"foo\\\")\\r\\n    .Key(\\\"bar\\\")\\r\\n    .BuildAsync();\\r\\n\\r\\n\\r\\n// publish to an exchange without a routing key\\r\\nPublisher publisher = await connection.PublisherBuilder()\\r\\n    .Exchange(\\\"foo\\\") // /exchanges/foo\\r\\n    .BuildAsync();\\r\\n\\r\\n// publish to a queue\\r\\n  IPublisher publisher = await _connection.PublisherBuilder()\\r\\n  .Queue(\\\"some-queue\\\")// /queues/some-queue\\r\\n  .BuildAsync();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\"Creating publishers with different targets\\\"\",\n            children: \"# publish to an exchange with a routing key\\r\\n# You can use the AddressHelper utility class to get the addr from the exchange name and the key\\r\\nexchange_address = AddressHelper.exchange_address(\\\"foo\\\", \\\"bar\\\")\\r\\npublisher = connection.publisher(addr)\\r\\n\\r\\n\\r\\n# publish to an exchange without a routing key\\r\\nexchange_address = AddressHelper.exchange_address(\\\"foo\\\")\\r\\npublisher = connection.publisher(addr)\\r\\n\\r\\n# publish to a queue\\r\\nqueue_address = AddressHelper.queue_address(\\\"some-queue\\\")\\r\\npublisher = connection.publisher(queue_address)\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-go\",\n            metastring: \"title=\\\"Creating publishers with different targets\\\"\",\n            children: \"// publish to an exchange with a routing key\\r\\npublisher, err := connection.NewPublisher(context.Background(), &ExchangeAddress{\\r\\n            Exchange: \\\"foo\\\",\\r\\n            Key:      \\\"bar\\\",\\r\\n        }, nil)\\r\\n\\r\\n\\r\\n// publish to an exchange without a routing key\\r\\npublisher, err := connection.NewPublisher(context.Background(), &ExchangeAddress{\\r\\n            Exchange: \\\"foo\\\",\\r\\n        }, nil)\\r\\n    \\r\\n\\r\\n// publish to a queue\\r\\npublisher, err := connection.NewPublisher(context.Background(), &QueueAddress{\\r\\n    Queue: \\\"some-queue\\\"}, \\r\\n    nil)\\r\\n        \\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.admonition, {\n      type: \"info\",\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n        children: [\"Libraries translate the API calls into the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"/docs/amqp#address-v2\",\n          children: \"address format v2\"\n        }), \".\"]\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"It is also possible to define the target on a per-message basis.\\r\\nThe publisher must be defined without any target and each message define its target in the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"to\"\n      }), \" field of the properties section.\\r\\nLibraries provide helpers in the message creation API to define the message target, which avoids dealing with the  \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/amqp#address-v2\",\n        children: \"address format\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The following snippet shows how to create a publisher without a target and define messages with different target types:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Setting the target in messages\\\"\",\n            children: \"// no target defined on publisher creation\\r\\nPublisher publisher = connection.publisherBuilder()\\r\\n    .build();\\r\\n\\r\\n// publish to an exchange with a routing key\\r\\nMessage message1 = publisher.message()\\r\\n    .toAddress().exchange(\\\"foo\\\").key(\\\"bar\\\")\\r\\n    .message();\\r\\n\\r\\n// publish to an exchange without a routing key\\r\\nMessage message2 = publisher.message()\\r\\n    .toAddress().exchange(\\\"foo\\\")\\r\\n    .message();\\r\\n\\r\\n// publish to a queue\\r\\nMessage message3 = publisher.message()\\r\\n    .toAddress().queue(\\\"my-queue\\\")\\r\\n    .message();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Setting the target in messages\\\"\",\n            children: \"// no target defined on publisher creation\\r\\nIPublisher publisher = await connection.PublisherBuilder()\\r\\n                       .BuildAsync();\\r\\n\\r\\n// publish to an exchange with a routing key\\r\\nIMessage message = new AmqpMessage(\\\"Hello!\\\").ToAddress()\\r\\n    .Exchange(\\\"foo\\\")\\r\\n    .Key(\\\"bar\\\")\\r\\n    .Build()\\r\\n\\r\\nawait aPublisher.PublishAsync(message);\\r\\n\\r\\n// publish to a queue\\r\\nIMessage message = new AmqpMessage(\\\"Hello!\\\").ToAddress()\\r\\n    .Queue(\\\"foo\\\")\\r\\n    .Build()\\r\\n\\r\\nawait aPublisher.PublishAsync(message);\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\"Setting the target in messages\\\"\",\n            children: \"\\r\\n# no target defined on publisher creation\\r\\npublisher = connection.publisher()\\r\\n\\r\\n# publish to an exchange with a routing key\\r\\n# You can use the AddressHelper.message_to_address_helper \\r\\n# utility class to set the destination in the message\\r\\nmessage = Message(body=\\\"Hello!\\\")\\r\\nexchange_address = AddressHelper.exchange_address(\\\"foo\\\", \\\"bar\\\")\\r\\nmessage = AddressHelper.message_to_address_helper(message, exchange_address)\\r\\npublisher.publish(message)\\r\\n\\r\\n# publish to a queue\\r\\nmessage = Message(body=\\\"Hello!\\\")\\r\\nqueue_address = AddressHelper.queue_address(\\\"some-queue\\\")\\r\\nmessage = AddressHelper.message_to_address_helper(message, queue_address)\\r\\npublisher = publisher.publish(message)\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-Go\",\n            metastring: \"title=\\\"Setting the target in messages\\\"\",\n            children: \"// // no target defined on publisher creation (nil)\\r\\npublisher, err := connection.NewPublisher(context.Background(), nil,\\r\\n                 nil)\\r\\n\\r\\n// create message with an exchange with a routing key\\r\\nmsg, err = NewMessageWithAddress([]byte(\\\"hello\\\"), &ExchangeAddress{\\r\\n            Exchange: \\\"foo\\\",\\r\\n            Key:      \\\"bar\\\",\\r\\n        })\\r\\n\\r\\n// create a message with a queue \\r\\nmsg, err = NewMessageWithAddress([]byte(\\\"hello\\\"), &QueueAddress{\\r\\n    Queue: \\\"some-queue\\\"})\\r\\n\\r\\n\\r\\n// use the publish\\r\\npublishResult, err = publisher.Publish(context.Background(), msg)\\r\\n// ...\\r\\n        \\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"consuming\",\n      children: \"Consuming\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"consumer-creation\",\n      children: \"Consumer Creation\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Creating a consumer consists in specifying the queue to consume from and the callback to process messages:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Creating a consumer\\\"\",\n            children: \"Consumer consumer = connection.consumerBuilder()\\r\\n    .queue(\\\"some-queue\\\")\\r\\n    .messageHandler((context, message) -> {\\r\\n        byte[] body = message.body();\\r\\n        // ...\\r\\n        context.accept(); // settle the message\\r\\n    })\\r\\n    .build(); // do not forget to build the instance!\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Creating a consumer\\\"\",\n            children: \"IConsumer consumer = await connection.ConsumerBuilder()\\r\\n    .Queue(\\\"some-queue\\\")\\r\\n    .MessageHandler(async (context, message) =>\\r\\n    {\\r\\n        // deal with the message\\r\\n        await context.AcceptAsync();// settle the message\\r\\n    }\\r\\n).BuildAndStartAsync();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\"Creating a consumer\\\"\",\n            children: \"\\r\\nclass MyMessageHandler(AMQPMessagingHandler):\\r\\n\\r\\n    def __init__(self):\\r\\n        super().__init__()\\r\\n\\r\\n    def on_message(self, event: Event):\\r\\n        # ...\\r\\n        \\r\\n        self.delivery_context.accept(event)# settle the message\\r\\n        \\r\\nqueue_address = AddressHelper.queue_address(\\\"some-queue\\\")\\r\\nconsumer = connection.consumer(queue_address, message_handler=MyMessageHandler())\\r\\nconsumer.run()\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-Go\",\n            metastring: \"title=\\\"Creating a consumer\\\"\",\n            children: \"// create the consumer\\r\\nconsumer, err := connection.NewConsumer(context.Background(), \\\"some-queue\\\", nil)\\r\\n// receive the message\\r\\ndeliveryContext, err := consumer.Receive(context.Background())\\r\\n// ....\\r\\ndeliveryContext.Accept(context.Background()) // settle the message\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Once the application is done processing a message, it must \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"settle\"\n      }), \" it.\\r\\nThis indicates to the broker the result of the processing and what it should do with the message (e.g. deleting the message).\\r\\nApplications must settle messages or they will run out of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/blog/2024/09/02/amqp-flow-control\",\n        children: \"credits\"\n      }), \" and the broker will stop dispatching messages to them.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The next section covers the semantics of message settlement.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"message-processing-result-outcome\",\n      children: \"Message Processing Result (Outcome)\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Libraries allows applications to settle messages in different ways.\\r\\nThey use terms as explicit as possible in the context of messaging applications.\\r\\nEach term maps to a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.a, {\n        href: \"/docs/amqp#outcomes\",\n        children: [\"given \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n          children: \"outcome\"\n        })]\n      }), \" in the AMQP specification.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"accept\"\n        }), \": the application successfully processed the message and it can be deleted from the queue (\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"accepted\"\n        }), \" outcome)\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"discard\"\n        }), \": the application cannot process the message because it is invalid, the broker can drop it or \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"/docs/dlx\",\n          children: \"dead-letter\"\n        }), \" it if it is configured (\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"rejected\"\n        }), \" outcome)\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"requeue\"\n        }), \": the application did not process the message, the broker can requeue it and deliver it to the same or a different consumer (\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"released\"\n        }), \" outcome)\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"discard\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"requeue\"\n      }), \" have an optional message annotation argument to combine with the existing ones held in the message header section.\\r\\nSuch message annotations can be used to provide details on the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"discard\"\n      }), \" or \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"requeue\"\n      }), \" reason.\\r\\nApplication-specific annotation keys must start with the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"x-opt-\"\n      }), \" prefix whereas annotation keys the broker understands start only with \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"x-\"\n      }), \".\\r\\nBoth \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"discard\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"requeue\"\n      }), \" use the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"modified\"\n      }), \" outcome with the message annotation parameter.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"Only quorum queues\"\n      }), \" support the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/amqp#modified-outcome\",\n        children: \"modification of message annotations\"\n      }), \" with the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"modified\"\n      }), \" outcome.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"consumer-graceful-shutdown\",\n      children: \"Consumer Graceful Shutdown\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"A consumer \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"settles\"\n      }), \" a message by accepting it, discarding it, or requeuing it.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Unsettled messages are requeued when a consumer get closed.\\r\\nThis can lead to duplicate processing of messages.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Here is an example:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"A consumer executes a database operation for a given message.\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"The consumer gets closed before it accepts (settles) the message.\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"The message is requeued.\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Another consumer gets the message and executes the database operation again.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"It is difficult to completely avoid duplicate messages, this is why processing should be idempotent.\\r\\nThe consumer API provides a way to avoid duplicate messages when a consumer gets closed.\\r\\nIt consists in pausing the delivery of messages, getting the number of unsettled messages to make sure it reaches 0 at some point, and then closing the consumer.\\r\\nThis ensures the consumer has finally quiesced and all the received messages have been processed.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Here is an example of a consumer graceful shutdown:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Closing a consumer gracefully\\\"\",\n            children: \"// pause the delivery of messages\\r\\nconsumer.pause();\\r\\n// ensure the number of unsettled messages reaches 0\\r\\nlong unsettledMessageCount = consumer.unsettledMessageCount();\\r\\n// close the consumer\\r\\nconsumer.close();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Closing a consumer gracefully\\\"\",\n            children: \"// pause the delivery of messages\\r\\nconsumer.pause();\\r\\n// ensure the number of unsettled messages reaches 0\\r\\nlong unsettledMessageCount = consumer.UnsettledMessageCount();\\r\\n// close the consumer\\r\\nconsumer.close();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\"Closing a consumer gracefully\\\"\",\n            children: \"# CURRENTLY NOT IMPLEMENTED\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-Go\",\n            metastring: \"title=\\\"Closing a consumer gracefully\\\"\",\n            children: \"// CURRENTLY NOT IMPLEMENTED\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"An application can still close a consumer without pausing it, at the risk of processing the same messages several times.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"support-for-streams\",\n      children: \"Support for Streams\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Libraries have out-of-the-box support for \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/streams\",\n        children: \"streams\"\n      }), \" in consumer configuration.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"It is possible to set where to attach to when \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/streams#consuming\",\n        children: \"consuming\"\n      }), \" from a stream:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Attaching to the beginning of a stream\\\"\",\n            children: \"Consumer consumer = connection.consumerBuilder()\\r\\n    .queue(\\\"some-stream\\\")\\r\\n    .stream()\\r\\n        .offset(ConsumerBuilder.StreamOffsetSpecification.FIRST)\\r\\n    .builder()\\r\\n    .messageHandler((context, message) -> {\\r\\n        // message processing\\r\\n    })\\r\\n    .build(); \\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Attaching to the beginning of a stream\\\"\",\n            children: \"IConsumer consumer = await connection.ConsumerBuilder()\\r\\n    .Queue(\\\"some-stream\\\")\\r\\n    .Stream()\\r\\n    .Offset(StreamOffsetSpecification.First)\\r\\n    .Builder()\\r\\n    .MessageHandler( async (context, message) => {\\r\\n            // message processing\\r\\n    })\\r\\n    .BuildAndStartAsync();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\"Attaching to the beginning of a stream\\\"\",\n            children: \"class MyMessageHandler(AMQPMessagingHandler):\\r\\n\\r\\n    def __init__(self):\\r\\n        super().__init__()\\r\\n\\r\\n    def on_message(self, event: Event):\\r\\n        # accepting\\r\\n        self.delivery_context.accept(event)\\r\\n        # deal with the message\\r\\n\\r\\nstream_address = AddressHelper.queue_address(\\\"some-stream\\\")\\r\\nconsumer = consumer_connection.consumer(\\r\\n    stream_address,\\r\\n    message_handler=MyMessageHandler(),\\r\\n    # can be first, last, next or an offset long\\r\\n    # you can also specify stream filters with methods: apply_filters and filter_match_unfiltered\\r\\n    stream_filter_options=StreamOptions(offset_specification=OffsetSpecification.first),\\r\\n)\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-Go\",\n            metastring: \"title=\\\"Attaching to the beginning of a stream\\\"\",\n            children: \"consumer, err := connection.NewConsumer(context.Background(), qName, \\r\\n    &StreamConsumerOptions{\\r\\n            Offset: &OffsetFirst{},\\r\\n        })\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"There is also support for \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/streams#filtering\",\n        children: \"stream filtering\"\n      }), \" configuration:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Configuring stream filtering\\\"\",\n            children: \"Consumer consumer = connection.consumerBuilder()\\r\\n    .queue(\\\"some-stream\\\")\\r\\n    .stream() \\r\\n        .filterValues(\\\"invoices\\\", \\\"orders\\\") \\r\\n        .filterMatchUnfiltered(true) \\r\\n    .builder() \\r\\n    .messageHandler((context, message) -> {\\r\\n        // message processing\\r\\n    })\\r\\n    .build();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Configuring stream filtering\\\"\",\n            children: \"IConsumer consumer = await connection.ConsumerBuilder()\\r\\n    .Queue(\\\"some-stream\\\")\\r\\n    .Stream()\\r\\n    .FilterValues([\\\"invoices\\\", \\\"order\\\"]) \\r\\n    .FilterMatchUnfiltered(true) \\r\\n    .Builder()\\r\\n    .MessageHandler(async (context, message) => {\\r\\n            // message processing\\r\\n        }\\r\\n).BuildAndStartAsync();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\"Configuring stream filtering\",\n            children: \"class MyMessageHandler(AMQPMessagingHandler):\\r\\n\\r\\n    def __init__(self):\\r\\n        super().__init__()\\r\\n\\r\\n    def on_message(self, event: Event):\\r\\n        # accepting\\r\\n        self.delivery_context.accept(event)\\r\\n        # deal with the message\\r\\n\\r\\nstream_address = AddressHelper.queue_address(\\\"some-stream\\\")\\r\\nconsumer = consumer_connection.consumer(\\r\\n    stream_address,\\r\\n    message_handler=MyMessageHandler(),\\r\\n    stream_filter_options=StreamOptions(stream_filters=[\\\"invoices\\\", \\\"order\\\"], match_unfiltered=True),\\r\\n)\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-Go\",\n            metastring: \"title=\\\"Configuring stream filtering\\\"\",\n            children: \"consumer, err := connection.NewConsumer(context.Background(), qName, &\\r\\n        StreamConsumerOptions{\\r\\n            Offset:           &OffsetFirst{},\\r\\n            Filters:          []string{\\\"invoices\\\", \\\"order\\\"},\\r\\n        })\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Consider also using the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/stream\",\n        children: \"native stream protocol\"\n      }), \" with the stream client library for your preferred programming language when working with streams.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"topology-management\",\n      children: \"Topology Management\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Applications can manage the RabbitMQ's \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/tutorials/amqp-concepts\",\n        children: \"AMQ 0.9.1 model\"\n      }), \": declaring and deleting exchanges, queues, and bindings.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"To do so, they need to get the management API from a connection:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Getting the management object from the environment\\\"\",\n            children: \"Management management = connection.management();\\r\\n// ...\\r\\n// close the management instance when it is no longer needed\\r\\nmanagement.close();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Getting the management object from the environment\\\"\",\n            children: \"IManagement management = connection.Management();\\r\\n// ...\\r\\n// close the management instance when it is no longer needed\\r\\nawait management.CloseAsync()\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\"Getting the management object from the environment\\\"\",\n            children: \"management = connection.management()\\r\\n # ...\\r\\n # close the management instance when it is no longer needed\\r\\nmanagement.close()\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-Go\",\n            metastring: \"title=\\\"Getting the management object from the connection\\\"\",\n            children: \"management = connection.management()\\r\\n  // ...\\r\\n  // close the management instance when it is no longer needed\\r\\nmanagement.close()\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The management API should be closed as soon as it is no longer needed.\\r\\nAn application usually creates the topology it needs when it starts, so the management object can be closed after this step.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"exchanges\",\n      children: \"Exchanges\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Here is how to create an \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/tutorials/amqp-concepts#exchanges\",\n        children: \"exchange\"\n      }), \" of a built-in type:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Creating an exchange of a built-in type\\\"\",\n            children: \"management.exchange()\\r\\n    .name(\\\"my-exchange\\\")\\r\\n    .type(Management.ExchangeType.FANOUT) // enum for built-in type\\r\\n    .declare();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Creating an exchange of a built-in type\\\"\",\n            children: \"IExchangeSpecification exchangeSpec = management\\r\\n        .Exchange(exchangeName)\\r\\n        .Type(ExchangeType.TOPIC);\\r\\nawait exchangeSpec.DeclareAsync();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\"Creating an exchange of a built-in type\\\"\",\n            children: \"exchange_name = \\\"my-exchange\\\"\\r\\nmanagement.declare_exchange(ExchangeSpecification(name=exchange_name, exchange_type=ExchangeType.topic))\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-Go\",\n            metastring: \"title=\\\"Creating an exchange of a built-in type\\\"\",\n            children: \"// there are structs for Fanout, Direct, etc..\\r\\nexchange_name = \\\"my-exchange\\\"\\r\\nexchangeInfo, err := management.DeclareExchange(context.TODO(), &TopicExchangeSpecification{\\r\\n            Name: exchangeName,\\r\\n        })\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"It is also possible to specify the exchange type as a string (for non-built-in type exchanges):\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Creating an exchange of a non-built-in type\\\"\",\n            children: \"management.exchange()\\r\\n    .name(\\\"my-exchange\\\")\\r\\n    .type(\\\"x-delayed-message\\\") // non-built-in type\\r\\n    .autoDelete(false)\\r\\n    .argument(\\\"x-delayed-type\\\", \\\"direct\\\")\\r\\n    .declare();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Creating an exchange of a non-built-in type\\\"\",\n            children: \"await _management.Exchange(\\\"myExchange\\\")\\r\\n    .Type(\\\"x-delayed-message\\\")\\r\\n    .Argument(\\\"x-delayed-type\\\", \\\"direct\\\")\\r\\n    .DeclareAsync();\\r\\n\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\"Creating an exchange of a non-built-in type\\\"\",\n            children: \"    exchange_arguments = {}\\r\\n    exchange_arguments[\\\"x-delayed-type\\\"] = \\\"direct\\\"\\r\\n\\r\\n    exchange_info = management.declare_exchange(\\r\\n        ExchangeCustomSpecification(\\r\\n            name=\\\"myExchange\\\",\\r\\n            exchange_type=\\\"x-delayed-message\\\",\\r\\n            arguments=exchange_arguments,\\r\\n        )\\r\\n    )\\r\\n\\r\\n\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-go\",\n            metastring: \"title=\\\"Creating an exchange of a non-built-in type\\\"\",\n            children: \"_, err := management.DeclareExchange(context.TODO(), &CustomExchangeSpecification{\\r\\n        Name:             \\\"myExchange\\\",\\r\\n        ExchangeTypeName: \\\"x-delayed-message\\\",\\r\\n            Arguments: map[string]any{\\r\\n                \\\"x-delayed-type\\\": \\\"direct\\\",\\r\\n            },\\r\\n        })\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Here is how to delete an exchange:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Deleting an exchange\\\"\",\n            children: \"management.exchangeDelete(\\\"my-exchange\\\");\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Deleting an exchange\\\"\",\n            children: \"await management.Exchange(\\\"my-exchange\\\").DeleteAsync();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Deleting an exchange\\\"\",\n            children: \"exchange_name = \\\"my-exchange\\\"\\r\\nmanagement.delete_exchange(exchange_name)\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-Go\",\n            metastring: \"title=\\\"Creating an exchange of a built-in type\\\"\",\n            children: \"exchange_name = \\\"my-exchange\\\"\\r\\nmanagement.DeleteExchange(context.TODO(),exchange_name)\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"queues\",\n      children: \"Queues\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Here is how to create a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/tutorials/amqp-concepts#queues\",\n        children: \"queue\"\n      }), \" with \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/vhosts#default-queue-type\",\n        children: \"the default queue type\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Creating a classic queue\\\"\",\n            children: \"management.queue()\\r\\n    .name(\\\"my-queue\\\")\\r\\n    .exclusive(true)\\r\\n    .autoDelete(false)\\r\\n    .declare();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Creating a classic queue\\\"\",\n            children: \"IQueueSpecification queueSpec = management\\r\\n    .Queue(\\\"myqueue\\\")\\r\\n    .Exclusive(true)\\r\\n    .AutoDelete(false)\\r\\nawait queueSpec.DeclareAsync();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Creating a classic queue\\\"\",\n            children: \"queue_name = \\\"myqueue\\\"\\r\\nmanagement.declare_queue(ClassicQueueSpecification(name=queue_name))\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-Go\",\n            metastring: \"title=\\\"Creating a classic queue\\\"\",\n            children: \"queue_name = \\\"myqueue\\\"\\r\\nqueueInfo, err := management.DeclareQueue(context.TODO(), &ClassicQueueSpecification{\\r\\n            Name: queueName})\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The management API supports \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/queues#optional-arguments\",\n        children: \"queue arguments\"\n      }), \" explicitly:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Creating a queue with arguments\\\"\",\n            children: \"management.queue()\\r\\n    .name(\\\"my-queue\\\")\\r\\n    .type(Management.QueueType.CLASSIC)\\r\\n    .messageTtl(Duration.ofMinutes(10))\\r\\n    .maxLengthBytes(ByteCapacity.MB(100))\\r\\n    .declare();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Creating a queue with arguments\\\"\",\n            children: \"IQueueSpecification queueSpec = management\\r\\n    .Queue(\\\"my-queue\\\")\\r\\n    .Type(QueueType.CLASSIC)\\r\\n    .MessageTtl(TimeSpan.FromMinutes(10))\\r\\n    .MaxLengthBytes(ByteCapacity.Mb(100));\\r\\nawait queueSpec.DeclareAsync();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\"Creating a queue with arguments\\\"\",\n            children: \"management.declare_queue(ClassicQueueSpecification(name=\\\"my-queue\\\", message_ttl=timedelta(minutes=10), max_len_bytes=100000000))\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-Go\",\n            metastring: \"title=\\\"Creating a queue with arguments\\\"\",\n            children: \"queueInfo, err := management.DeclareQueue(context.TODO(), &ClassicQueueSpecification{\\r\\n            Name:           \\\"my-queue\\\",\\r\\n            MaxPriority:    32,\\r\\n            MaxLengthBytes: CapacityGB(1),\\r\\n            IsAutoDelete:   false,\\r\\n    })\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The management API makes also the distinction between arguments shared by all queue types and arguments valid only for a given type.\\r\\nHere is an example with the creation of a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/quorum-queues\",\n        children: \"quorum queue\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Creating a quorum queue\\\"\",\n            children: \"management\\r\\n    .queue()\\r\\n    .name(\\\"my-quorum-queue\\\")\\r\\n    .quorum() // set queue type to 'quorum'\\r\\n        .quorumInitialGroupSize(3) // specific to quorum queues\\r\\n        .deliveryLimit(3) // specific to quorum queues\\r\\n    .queue()\\r\\n    .declare();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Creating a quorum queue\\\"\",\n            children: \"IQueueSpecification queueSpec = management\\r\\n    .Queue(\\\"my-quorum-queue\\\")\\r\\n    .Quorum() // set queue type to 'quorum'\\r\\n        .QuorumInitialGroupSize(3) // specific to quorum queues\\r\\n        .DeliveryLimit(3) // specific to quorum queues\\r\\n    .Queue();\\r\\nawait queueSpec.DeclareAsync();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\"Creating a quorum queue\\\"\",\n            children: \"queue_name = \\\"my-quorum-queue\\\"\\r\\nmanagement.declare_queue(QuorumQueueSpecification(name=queue_name, quorum_initial_group_size=3, deliver_limit=3))\\r\\n\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-Go\",\n            metastring: \"title=\\\"Creating a quorum queue\\\"\",\n            children: \"queueInfo, err := management.DeclareQueue(context.TODO(), &QuorumQueueSpecification{\\r\\n            Name: \\\"my-quorum-queue\\\",\\r\\n            QuorumInitialGroupSize = 3,\\r\\n            DeliveryLimit: 3,\\r\\n        })\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"It is possible to query information about a queue:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Getting queue information\\\"\",\n            children: \"Management.QueueInfo info = management.queueInfo(\\\"my-queue\\\");\\r\\nlong messageCount = info.messageCount();\\r\\nint consumerCount = info.consumerCount();\\r\\nString leaderNode = info.leader();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Getting queue information\\\"\",\n            children: \"IQueueInfo queueInfo = await management.GetQueueInfoAsync(\\\"my-queue\\\");\\r\\nulong messageCount = queueInfo.MessageCount();\\r\\nuint consumerCount = queueInfo.ConsumerCount();\\r\\nstring leader = queueInfo.Leader();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\"Getting queue information\\\"\",\n            children: \"queue_name = \\\"my-queue\\\"\\r\\nqueue_info = management.queue_info(name=queue_name)\\r\\nmessage_count = queue_info.message_count\\r\\nconsumer_count = queue_info.consumer_count\\r\\nleader = queue_info.leader\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-Go\",\n            metastring: \"title=\\\"Getting queue information\\\"\",\n            children: \"queueInfo, err := management.QueueInfo(context.TODO(), \\\"my-queue\\\")\\r\\n\\r\\nmessageCount := queueInfo.MessageCount();\\r\\nconsumerCount := queueInfo.ConsumerCount();\\r\\nleader := queueInfo.Leader();\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This API can also be used to check whether a queue exists or not.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"And here is how to delete a queue:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Deleting a queue\\\"\",\n            children: \"management.queueDelete(\\\"my-queue\\\");\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Deleting a queue\\\"\",\n            children: \"await management.Queue(\\\"myqueue\\\").DeleteAsync();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Deleting a queue\\\"\",\n            children: \"management.delete_queue(name=\\\"myqueue\\\")\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-go\",\n            metastring: \"title=\\\"Deleting a queue\\\"\",\n            children: \"management.DeleteExchange(context.TODO(),\\\"myqueue\\\")\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"bindings\",\n      children: \"Bindings\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The management API supports \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/tutorials/amqp-concepts#bindings\",\n        children: \"binding\"\n      }), \" a queue to an exchange:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Binding a queue to an exchange\\\"\",\n            children: \"management.binding()\\r\\n    .sourceExchange(\\\"my-exchange\\\")\\r\\n    .destinationQueue(\\\"my-queue\\\")\\r\\n    .key(\\\"foo\\\")\\r\\n    .bind();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Binding a queue to an exchange\\\"\",\n            children: \"IBindingSpecification bindingSpec = management.Binding()\\r\\n    .SourceExchange(\\\"my-exchange\\\")\\r\\n    .DestinationQueue(\\\"my-queue\\\")\\r\\n    .Key(\\\"foo\\\");\\r\\nawait bindingSpec.BindAsync();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\"Binding a queue to an exchange\\\"\",\n            children: \"bind_name = management.bind(\\r\\n    BindingSpecification(\\r\\n        source_exchange=\\\"my-exchange\\\",\\r\\n        destination_queue=\\\"my-queue\\\",\\r\\n        binding_key=\\\"foo\\\",\\r\\n    )\\r\\n)\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-go\",\n            metastring: \"title=\\\"Binding a queue to an exchange\\\"\",\n            children: \"// ExchangeToQueueBindingSpecification implements BindingSpecification interface \\r\\nbindingPath, err := management.Bind(context.TODO(), &rmq.ExchangeToQueueBindingSpecification{\\r\\n        SourceExchange:   \\\"my-exchange\\\",\\r\\n        DestinationQueue: \\\"my-queue\\\",\\r\\n        BindingKey:       \\\"foo\\\",\\r\\n    })\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"There is also support for \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/e2e\",\n        children: \"exchange-to-exchange binding\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Binding an exchange to another exchange\\\"\",\n            children: \"management.binding()\\r\\n    .sourceExchange(\\\"my-exchange\\\")\\r\\n    .destinationExchange(\\\"my-other-exchange\\\")\\r\\n    .key(\\\"foo\\\")\\r\\n    .bind();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Binding an exchange to another exchange\\\"\",\n            children: \"IBindingSpecification bindingSpec = management.Binding()\\r\\n    .SourceExchange(\\\"my-exchange\\\")\\r\\n    .DestinationExchange(\\\"my-other-exchange\\\")\\r\\n    .Key(\\\"foo\\\");\\r\\nawait bindingSpec.BindAsync();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\"Binding an exchange to another exchange\\\"\",\n            children: \"    \\r\\nbinding_exchange_queue_path = management.bind(\\r\\n    ExchangeToExchangeBindingSpecification(\\r\\n        source_exchange=\\\"my-exchange\\\",\\r\\n        destination_exchange=\\\"my-other-exchange\\\",\\r\\n     )\\r\\n)\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-go\",\n            metastring: \"title=\\\"Binding a exchange to an exchange\\\"\",\n            children: \"// ExchangeToExchangeBindingSpecification implements BindingSpecification interface \\r\\nbindingPath, err := management.Bind(context.TODO(), &rmq.ExchangeToExchangeBindingSpecification{\\r\\n        SourceExchange:   \\\"my-exchange\\\",\\r\\n        DestinationExchange: \\\"my-other-exchange\\\",\\r\\n    })\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"It is also possible to unbind entities:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Deleting the binding between an exchange and a queue\\\"\",\n            children: \"management.unbind()\\r\\n    .sourceExchange(\\\"my-exchange\\\")\\r\\n    .destinationQueue(\\\"my-queue\\\")\\r\\n    .key(\\\"foo\\\")\\r\\n    .unbind();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Deleting the binding between an exchange and a queue\\\"\",\n            children: \"IBindingSpecification bindingSpec = management.Binding()\\r\\n    .SourceExchange(\\\"my-exchange\\\")\\r\\n    .DestinationQueue(\\\"my-queue\\\")\\r\\n    .Key(\\\"foo\\\");\\r\\nawait bindingSpec.UnbindAsync();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\"Deleting the binding between an exchange and a queue\\\"\",\n            children: \"management.unbind(BindingSpecification(\\r\\n    source_exchange=\\\"my-exchange\\\",\\r\\n    destination_queue=\\\"my-queue\\\",\\r\\n))\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-go\",\n            metastring: \"title=\\\"Deleting the binding between an exchange and a queue\\\"\",\n            children: \"// bindingPath is the bind result\\r\\nerr = management.Unbind(context.TODO(), bindingPath)\\r\\n\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"advanced-usage\",\n      children: \"Advanced Usage\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"lifecycle-listeners\",\n      children: \"Lifecycle Listeners\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Applications can react to state changes of some API components by adding listeners.\\r\\nAn application can add a listener to a connection to stop publishing messages when the connection is recovering after a connection.\\r\\nThe application can then resume publishing when the connection has recovered and is open again.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Here is how to set a listener on a connection:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Setting a listener on a connection\\\"\",\n            children: \"Connection connection = environment.connectionBuilder()\\r\\n    .listeners(context -> { // set one or several listeners\\r\\n        context.previousState(); // the previous state\\r\\n        context.currentState(); // the current (new) state\\r\\n        context.failureCause(); // the cause of the failure (in case of failure)\\r\\n        context.resource(); // the connection\\r\\n    }).build();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Attach an event to the ChangeState\\\"\",\n            children: \"connection.ChangeState += ( \\r\\n     sender, // the sender instance ( in this case the connection)\\r\\n     fromState, // the previous state\\r\\n     toState, // the current (new) state\\r\\n     e // the cause of the failure (in case of failure)\\r\\n     ) =>\\r\\n{\\r\\n  \\r\\n};\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\"Attach an event to the ChangeState\\\"\",\n            children: \"# CURRENTLY NOT IMPLEMENTED \\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-go\",\n            metastring: \"title=\\\"Register a channel to the StateChanged\\\"\",\n            children: \"stateChanged := make(chan *rmq.StateChanged, 1)\\r\\ngo func(ch chan *rmq.StateChanged) {\\r\\n        for statusChanged := range ch {\\r\\n            // statusChanged.From from status\\r\\n            // statusChanged.To to status \\r\\n            // StateClosed has the func GetError() in case of error \\r\\n\\r\\n        }\\r\\n    }(stateChanged)\\r\\n\\r\\nconnection.NotifyStatusChange(stateChanged)\\r\\n\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"It is also possible to set listeners on publisher instances:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Setting a listener on a publisher\\\"\",\n            children: \"Publisher publisher = connection.publisherBuilder()\\r\\n    .listeners(context -> {\\r\\n        // ...\\r\\n    })\\r\\n    .exchange(\\\"foo\\\").key(\\\"bar\\\")\\r\\n    .build();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Attach an event to the ChangeState\\\"\",\n            children: \"publisher.ChangeState += (sender, fromState, toState, e) =>\\r\\n{\\r\\n}\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\"Attach an event to the ChangeState\\\"\",\n            children: \"\\r\\n# CURRENTLY NOT IMPLEMENTED FOR PYTHON\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-go\",\n            metastring: \"title=\\\" \\\"\",\n            children: \"\\r\\n# CURRENTLY NOT IMPLEMENTED Due Of https://github.com/Azure/go-amqp/issues/99\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"And on consumer instances as well:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Setting a listener on a consumer\\\"\",\n            children: \"Consumer consumer = connection.consumerBuilder()\\r\\n    .listeners(context -> {\\r\\n        // ...\\r\\n    })\\r\\n    .queue(\\\"my-queue\\\")\\r\\n    .build();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Attach an event to the ChangeState\\\"\",\n            children: \"consumer.ChangeState += (sender, fromState, toState, e) =>\\r\\n{\\r\\n}\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\"Attach an event to the ChangeState\\\"\",\n            children: \"# CURRENTLY NOT IMPLEMENTED FOR PYTHON\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-go\",\n            metastring: \"title=\\\" \\\"\",\n            children: \"\\r\\n# CURRENTLY NOT IMPLEMENTED Due Of https://github.com/Azure/go-amqp/issues/99\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"automatic-connection-recovery\",\n      children: \"Automatic Connection Recovery\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Automatic connection recovery is activated by default: client libraries will automatically restore a connection after an unexpected closing (e.g. network glitch, node restart, etc).\\r\\nAutomatic topology recovery is also activated as soon as connection recovery is: client libraries will recreate AMQP entities, as well as publishers and consumers for the recovering connection.\\r\\nDevelopers have less to worry about network stability and node restart, as client libraries will take care of it.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The client tries to reconnect every 5 seconds until it succeeds. It is possible to change this behavior by customizing the back-off delay policy:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Setting a back-off policy for connection recovery\\\"\",\n            children: \"Connection connection = environment.connectionBuilder()\\r\\n    .recovery()\\r\\n    .backOffDelayPolicy(BackOffDelayPolicy.fixed(Duration.ofSeconds(2)))\\r\\n    .connectionBuilder().build();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Setting a back-off policy for connection recovery\\\"\",\n            children: \"class MyBackOffDelay : IBackOffDelayPolicy {\\r\\n    ...\\r\\n}\\r\\n\\r\\nawait AmqpConnection.CreateAsync(\\r\\n    ConnectionSettingBuilder.Create().RecoveryConfiguration(\\r\\n    RecoveryConfiguration.Create()\\r\\n    .BackOffDelayPolicy(new MyBackOffDelay())).Build());\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\" \\\"\",\n            children: \"    environment = Environment(\\r\\n        \\\"amqp://guest:guest@localhost:5672/\\\",\\r\\n        recovery_configuration=RecoveryConfiguration(back_off_reconnect_interval=timedelta(seconds=2)),\\r\\n    )\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-go\",\n            metastring: \"title=\\\" \\\"\",\n            children: \"    // to the BackOffReconnectInterval the client adds a random 500 ms \\r\\n    env := NewEnvironment(\\\"amqp://\\\", &AmqpConnOptions{\\r\\n            RecoveryConfiguration: &RecoveryConfiguration{\\r\\n                ActiveRecovery:           true,\\r\\n                BackOffReconnectInterval: 5 * time.Second,\\r\\n                MaxReconnectAttempts:     5,\\r\\n            },\\r\\n        })\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"It is also possible to deactivate topology recovery if it is not appropriate for a given application.\\r\\nThe application would usually register a connection \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#lifecycle-listeners\",\n        children: \"lifecycle listener\"\n      }), \" to know when the connection is recovered and recover its own state accordingly.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Deactivating topology recovery\\\"\",\n            children: \"Connection connection = environment.connectionBuilder()\\r\\n    .recovery()\\r\\n    .topology(false) // deactivate topology recovery\\r\\n    .connectionBuilder()\\r\\n    .listeners(context -> {\\r\\n        // set listener that restores application state when connection is recovered\\r\\n    })\\r\\n    .build();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Deactivating topology recovery\\\"\",\n            children: \"await AmqpConnection.CreateAsync(\\r\\n    ConnectionSettingBuilder.Create().RecoveryConfiguration(\\r\\n    RecoveryConfiguration.Create()\\r\\n    .Topology(false)) // deactivate topology recovery\\r\\n    .Build());\\r\\n\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\" \\\"\",\n            children: \"     # CURRENTLY NOT IMPLEMENTED\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-go\",\n            metastring: \"title=\\\" \\\"\",\n            children: \"     // CURRENTLY NOT IMPLEMENTED\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"It is also possible to deactivate recovery altogether:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"languages\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"java\",\n        label: \"Java\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-java\",\n            metastring: \"title=\\\"Deactivating recovery\\\"\",\n            children: \"Connection connection = environment.connectionBuilder()\\r\\n    .recovery()\\r\\n    .activated(false) // deactivate recovery\\r\\n    .connectionBuilder().build();\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"csharp\",\n        label: \"C#\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-csharp\",\n            metastring: \"title=\\\"Deactivating recovery\\\"\",\n            children: \"await AmqpConnection.CreateAsync(\\r\\n        ConnectionSettingBuilder.Create().RecoveryConfiguration(\\r\\n        RecoveryConfiguration.Create().\\r\\n        Activated(false)).// deactivate recovery\\r\\n        Build());\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Python\",\n        label: \"Python\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-python\",\n            metastring: \"title=\\\" \\\"\",\n            children: \"    environment = Environment(\\r\\n        \\\"amqp://guest:guest@localhost:5672/\\\",\\r\\n        recovery_configuration=RecoveryConfiguration(active_recovery=False),\\r\\n    )\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"Go\",\n        label: \"Go\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-go\",\n            metastring: \"title=\\\"Deactivating recovery\\\"\",\n            children: \"     env := NewEnvironment(\\\"amqp://\\\", &AmqpConnOptions{\\r\\n            RecoveryConfiguration: &RecoveryConfiguration{\\r\\n                ActiveRecovery:           false,\\r\\n            },\\r\\n        })\\n\"\n          })\n        })\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client-libraries/amqp-client-libraries.md\n");

/***/ })

}]);