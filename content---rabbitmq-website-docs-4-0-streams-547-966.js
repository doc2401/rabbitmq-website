"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkrabbitmq_website"] = globalThis["webpackChunkrabbitmq_website"] || []).push([["content---rabbitmq-website-docs-4-0-streams-547-966"],{

/***/ "./.docusaurus/docusaurus-plugin-content-docs/default/site-versioned-docs-version-4-0-streams-md-547.json":
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"id":"streams","title":"Streams and Super Streams (Partitioned Streams)","description":"<!--","source":"@site/versioned_docs/version-4.0/streams.md","sourceDirName":".","slug":"/streams","permalink":"/rabbitmq-website/docs/4.0/streams","draft":false,"unlisted":false,"editUrl":"https://github.com/rabbitmq/rabbitmq-website/tree/main/versioned_docs/version-4.0/streams.md","tags":[],"version":"4.0","frontMatter":{"title":"Streams and Super Streams (Partitioned Streams)"},"sidebar":"docsSidebar","previous":{"title":"Priority Queues","permalink":"/rabbitmq-website/docs/4.0/priority"},"next":{"title":"Channels","permalink":"/rabbitmq-website/docs/4.0/channels/"}}');

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanM/MjA0NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbXBvcnQge01EWENvbXBvbmVudHN9IGZyb20gJ21keC90eXBlcy5qcydcbiAqIEBpbXBvcnQge0NvbXBvbmVudCwgUmVhY3RFbGVtZW50LCBSZWFjdE5vZGV9IGZyb20gJ3JlYWN0J1xuICovXG5cbi8qKlxuICogQGNhbGxiYWNrIE1lcmdlQ29tcG9uZW50c1xuICogICBDdXN0b20gbWVyZ2UgZnVuY3Rpb24uXG4gKiBAcGFyYW0ge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSBjdXJyZW50Q29tcG9uZW50c1xuICogICBDdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgY29udGV4dC5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMuXG4gKlxuICogQHR5cGVkZWYgUHJvcHNcbiAqICAgQ29uZmlndXJhdGlvbiBmb3IgYE1EWFByb3ZpZGVyYC5cbiAqIEBwcm9wZXJ0eSB7UmVhY3ROb2RlIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NoaWxkcmVuXVxuICogICBDaGlsZHJlbiAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbiB8IG51bGwgfCB1bmRlZmluZWR9IFtkaXNhYmxlUGFyZW50Q29udGV4dD1mYWxzZV1cbiAqICAgVHVybiBvZmYgb3V0ZXIgY29tcG9uZW50IGNvbnRleHQgKGRlZmF1bHQ6IGBmYWxzZWApLlxuICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuLyoqIEB0eXBlIHtSZWFkb25seTxNRFhDb21wb25lbnRzPn0gKi9cbmNvbnN0IGVtcHR5Q29tcG9uZW50cyA9IHt9XG5cbmNvbnN0IE1EWENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KGVtcHR5Q29tcG9uZW50cylcblxuLyoqXG4gKiBHZXQgY3VycmVudCBjb21wb25lbnRzIGZyb20gdGhlIE1EWCBDb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz4gfCBNZXJnZUNvbXBvbmVudHMgfCBudWxsIHwgdW5kZWZpbmVkfSBbY29tcG9uZW50c11cbiAqICAgQWRkaXRpb25hbCBjb21wb25lbnRzIHRvIHVzZSBvciBhIGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyB0aGVtIChvcHRpb25hbCkuXG4gKiBAcmV0dXJucyB7TURYQ29tcG9uZW50c31cbiAqICAgQ3VycmVudCBjb21wb25lbnRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlTURYQ29tcG9uZW50cyhjb21wb25lbnRzKSB7XG4gIGNvbnN0IGNvbnRleHRDb21wb25lbnRzID0gUmVhY3QudXNlQ29udGV4dChNRFhDb250ZXh0KVxuXG4gIC8vIE1lbW9pemUgdG8gYXZvaWQgdW5uZWNlc3NhcnkgdG9wLWxldmVsIGNvbnRleHQgY2hhbmdlc1xuICByZXR1cm4gUmVhY3QudXNlTWVtbyhcbiAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBDdXN0b20gbWVyZ2UgdmlhIGEgZnVuY3Rpb24gcHJvcFxuICAgICAgaWYgKHR5cGVvZiBjb21wb25lbnRzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBjb21wb25lbnRzKGNvbnRleHRDb21wb25lbnRzKVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gey4uLmNvbnRleHRDb21wb25lbnRzLCAuLi5jb21wb25lbnRzfVxuICAgIH0sXG4gICAgW2NvbnRleHRDb21wb25lbnRzLCBjb21wb25lbnRzXVxuICApXG59XG5cbi8qKlxuICogUHJvdmlkZXIgZm9yIE1EWCBjb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8UHJvcHM+fSBwcm9wZXJ0aWVzXG4gKiAgIFByb3BlcnRpZXMuXG4gKiBAcmV0dXJucyB7UmVhY3RFbGVtZW50fVxuICogICBFbGVtZW50LlxuICogQHNhdGlzZmllcyB7Q29tcG9uZW50fVxuICovXG5leHBvcnQgZnVuY3Rpb24gTURYUHJvdmlkZXIocHJvcGVydGllcykge1xuICAvKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuICBsZXQgYWxsQ29tcG9uZW50c1xuXG4gIGlmIChwcm9wZXJ0aWVzLmRpc2FibGVQYXJlbnRDb250ZXh0KSB7XG4gICAgYWxsQ29tcG9uZW50cyA9XG4gICAgICB0eXBlb2YgcHJvcGVydGllcy5jb21wb25lbnRzID09PSAnZnVuY3Rpb24nXG4gICAgICAgID8gcHJvcGVydGllcy5jb21wb25lbnRzKGVtcHR5Q29tcG9uZW50cylcbiAgICAgICAgOiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgfHwgZW1wdHlDb21wb25lbnRzXG4gIH0gZWxzZSB7XG4gICAgYWxsQ29tcG9uZW50cyA9IHVzZU1EWENvbXBvbmVudHMocHJvcGVydGllcy5jb21wb25lbnRzKVxuICB9XG5cbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgTURYQ29udGV4dC5Qcm92aWRlcixcbiAgICB7dmFsdWU6IGFsbENvbXBvbmVudHN9LFxuICAgIHByb3BlcnRpZXMuY2hpbGRyZW5cbiAgKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ }),

/***/ "./versioned_docs/version-4.0/streams.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assets: () => (/* binding */ assets),\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   metadata: () => (/* reexport default export from named module */ _site_docusaurus_docusaurus_plugin_content_docs_default_site_versioned_docs_version_4_0_streams_md_547_json__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var _site_docusaurus_docusaurus_plugin_content_docs_default_site_versioned_docs_version_4_0_streams_md_547_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.docusaurus/docusaurus-plugin-content-docs/default/site-versioned-docs-version-4-0-streams-md-547.json\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n\n\nconst frontMatter = {\n\ttitle: 'Streams and Super Streams (Partitioned Streams)'\n};\nconst contentTitle = 'Streams and Super Streams (Partitioned Streams)';\n\nconst assets = {\n\n};\n\n\n\nconst toc = [{\n  \"value\": \"What is a Stream\",\n  \"id\": \"overview\",\n  \"level\": 2\n}, {\n  \"value\": \"Use Cases for Using Streams\",\n  \"id\": \"use-cases\",\n  \"level\": 3\n}, {\n  \"value\": \"How to Use RabbitMQ Streams\",\n  \"id\": \"usage\",\n  \"level\": 2\n}, {\n  \"value\": \"Declaring a RabbitMQ Stream\",\n  \"id\": \"declaring\",\n  \"level\": 3\n}, {\n  \"value\": \"Client Operations\",\n  \"id\": \"client-operations\",\n  \"level\": 3\n}, {\n  \"value\": \"Consuming\",\n  \"id\": \"consuming\",\n  \"level\": 4\n}, {\n  \"value\": \"Other Stream Operations\",\n  \"id\": \"other-stream-operations\",\n  \"level\": 4\n}, {\n  \"value\": \"Single Active Consumer Feature for Streams\",\n  \"id\": \"single-active-consumer\",\n  \"level\": 3\n}, {\n  \"value\": \"Super Streams\",\n  \"id\": \"super-streams\",\n  \"level\": 3\n}, {\n  \"value\": \"Filtering\",\n  \"id\": \"filtering\",\n  \"level\": 3\n}, {\n  \"value\": \"Feature Comparison: Regular Queues versus Streams\",\n  \"id\": \"feature-comparison\",\n  \"level\": 2\n}, {\n  \"value\": \"Feature Matrix\",\n  \"id\": \"feature-matrix\",\n  \"level\": 3\n}, {\n  \"value\": \"Non-durable Queues\",\n  \"id\": \"non-durable-queues\",\n  \"level\": 4\n}, {\n  \"value\": \"Exclusivity\",\n  \"id\": \"exclusivity\",\n  \"level\": 4\n}, {\n  \"value\": \"Global QoS\",\n  \"id\": \"global-qos\",\n  \"level\": 4\n}, {\n  \"value\": \"Data Retention\",\n  \"id\": \"retention\",\n  \"level\": 2\n}, {\n  \"value\": \"Performance Characteristics\",\n  \"id\": \"performance\",\n  \"level\": 2\n}, {\n  \"value\": \"Controlling the Initial Replication Factor\",\n  \"id\": \"replication-factor\",\n  \"level\": 3\n}, {\n  \"value\": \"Managing Stream Replicas\",\n  \"id\": \"member-management\",\n  \"level\": 3\n}, {\n  \"value\": \"Stream Behaviour\",\n  \"id\": \"behaviour\",\n  \"level\": 2\n}, {\n  \"value\": \"Leader Election and Failure Handling\",\n  \"id\": \"leader-election\",\n  \"level\": 3\n}, {\n  \"value\": \"Fault Tolerance and Minimum Number of Replicas Online\",\n  \"id\": \"quorum-requirements\",\n  \"level\": 3\n}, {\n  \"value\": \"Data Safety when using Streams\",\n  \"id\": \"data-safety\",\n  \"level\": 3\n}, {\n  \"value\": \"Stream Availability\",\n  \"id\": \"availability\",\n  \"level\": 3\n}, {\n  \"value\": \"Configuring Streams\",\n  \"id\": \"configuration\",\n  \"level\": 2\n}, {\n  \"value\": \"How Streams Use Resources\",\n  \"id\": \"resource-use\",\n  \"level\": 2\n}, {\n  \"value\": \"Offset Tracking when using Streams\",\n  \"id\": \"offset-tracking\",\n  \"level\": 2\n}, {\n  \"value\": \"Limitations\",\n  \"id\": \"limitations\",\n  \"level\": 2\n}, {\n  \"value\": \"Message Encoding\",\n  \"id\": \"limitations-message-encoding\",\n  \"level\": 3\n}, {\n  \"value\": \"UI Metric Accuracy\",\n  \"id\": \"limitations-ui-metrics\",\n  \"level\": 3\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    admonition: \"admonition\",\n    code: \"code\",\n    em: \"em\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    header: \"header\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ul: \"ul\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.header, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1, {\n        id: \"streams-and-super-streams-partitioned-streams\",\n        children: \"Streams and Super Streams (Partitioned Streams)\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"overview\",\n      children: \"What is a Stream\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"RabbitMQ Streams is a persistent replicated data structure that can complete the same tasks as queues: they buffer messages from producers that are read by consumers.\\r\\nHowever, streams differ from queues in two important ways: how messages are stored and consumed.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Streams model an append-only log of messages that can be repeatedly read until they expire.\\r\\nStreams are always persistent and replicated. A more technical description of this stream behavior is “non-destructive consumer semantics”.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"To read messages from a stream in RabbitMQ, one or more consumers subscribe to it and read the same messages as many times as they want.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Data in a stream can be used via a RabbitMQ client library or through a\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/rabbitmq-server/blob/main/deps/rabbitmq_stream/docs/PROTOCOL.adoc\",\n        children: \"dedicated binary protocol\"\n      }), \" plugin and associated client(s).\\r\\nThe latter option is \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"highly recommended\"\n      }), \" as it provides access to all stream-specific features and offers best possible throughput (performance).\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.admonition, {\n      type: \"info\",\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n        children: [\"In addition to streams, RabbitMQ supports partitioned streams called \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#super-streams\",\n          children: \"super streams\"\n        }), \". They are covered\\r\\nin more details further in this guide.\"]\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Now, you might be asking the following questions:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Do streams replace queues then?\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Should I move away from using queues?\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To answer these questions, streams were not introduced to replace queues but to complement them. Streams open up many opportunities for new RabbitMQ use cases which are described in \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#use-cases\",\n        children: \"Use Cases for Using Streams\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The following information details streams usage, and the administration and maintenance operations for streams.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"You should also review the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./stream\",\n        children: \"stream plugin\"\n      }), \" information to learn more about the usage of streams with the binary RabbitMQ Stream protocol and the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./stream-core-plugin-comparison\",\n        children: \"stream core and stream plugin comparison page\"\n      }), \" for the feature matrix.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"use-cases\",\n      children: \"Use Cases for Using Streams\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Streams were developed to initially cover 4 messaging use-cases that\\r\\nexisting queue types either can not provide or provide with downsides:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n          children: \"Large fan-outs\"\n        }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n          children: \"When wanting to deliver the same message to multiple subscribers users currently\\r\\nhave to bind a dedicated queue for each consumer. If the number of consumers is\\r\\nlarge this becomes potentially inefficient, especially when wanting persistence\\r\\nand/or replication. Streams will allow any number of consumers to consume\\r\\nthe same messages from the same queue in a non-destructive manner, negating the need\\r\\nto bind multiple queues. Stream consumers will also be able to read from replicas\\r\\nallowing read load to be spread across the cluster.\"\n        }), \"\\n\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n          children: \"Replay (Time-travelling)\"\n        }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n          children: \"As all current RabbitMQ queue types have destructive consume behaviour, i.e. messages\\r\\nare deleted from the queue when a consumer is finished with them, it is not\\r\\npossible to re-read messages that have been consumed. Streams will allow\\r\\nconsumers to attach at any point in the log and read from there.\"\n        }), \"\\n\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n          children: \"Throughput Performance\"\n        }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n          children: \"No persistent queue types are able to deliver throughput that can compete with\\r\\nany of the existing log based messaging systems. Streams have been designed\\r\\nwith performance as a major goal.\"\n        }), \"\\n\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n          children: \"Large backlogs\"\n        }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n          children: \"Most RabbitMQ queues are designed to converge towards the empty state and are\\r\\noptimised as such and can perform worse when there are millions of messages on a\\r\\ngiven queue. Streams are designed to store larger amounts of data in an\\r\\nefficient manner with minimal in-memory overhead.\"\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"usage\",\n      children: \"How to Use RabbitMQ Streams\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"An AMQP 0.9.1 client library that can specify \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./queues#optional-arguments\",\n        children: \"optional queue and consumer arguments\"\n      }), \"\\r\\nwill be able to use streams as regular AMQP 0.9.1 queues.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Just like queues, streams have to be declared first.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"declaring\",\n      children: \"Declaring a RabbitMQ Stream\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To declare a stream, set the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"x-queue-type\"\n      }), \" queue argument to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"stream\"\n      }), \"\\r\\n(the default is \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"classic\"\n      }), \"). This argument must be provided by a client\\r\\nat declaration time; it cannot be set or changed using a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./policies\",\n        children: \"policy\"\n      }), \".\\r\\nThis is because policy definition or applicable policy can be changed dynamically but\\r\\nqueue type cannot. It must be specified at the time of declaration.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The following snippet shows how to create a stream with the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/client-libraries/java-api-guide\",\n        children: \"AMQP 0.9.1 Java client\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-java\",\n        children: \"ConnectionFactory factory = new ConnectionFactory();\\r\\nConnection connection = factory.newConnection();\\r\\nChannel channel = connection.createChannel();\\r\\nchannel.queueDeclare(\\r\\n  \\\"my-stream\\\",\\r\\n  true,         // durable\\r\\n  false, false, // not exclusive, not auto-delete\\r\\n  Collections.singletonMap(\\\"x-queue-type\\\", \\\"stream\\\")\\r\\n);\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Declaring a queue with an \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"x-queue-type\"\n      }), \" argument set to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"stream\"\n      }), \" will create a stream\\r\\nwith a replica on each configured RabbitMQ node. Streams are quorum systems\\r\\nso uneven cluster sizes is strongly recommended.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"A stream remains an AMQP 0.9.1 queue, so it can be bound to any exchange after its creation,\\r\\njust as any other RabbitMQ queue.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"If declaring using \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./management\",\n        children: \"management UI\"\n      }), \", the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"stream\"\n      }), \" type must be specified using\\r\\nthe queue type drop down menu.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Streams support additional \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./queues#optional-arguments\",\n        children: \"queue arguments\"\n      }), \"\\r\\nthat also can be configured using a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./policies\",\n        children: \"policy\"\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"x-max-length-bytes\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Sets the maximum size of the stream in bytes. See \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#retention\",\n        children: \"retention\"\n      }), \". Default: not set.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"x-max-age\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Sets the maximum age of the stream. See \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#retention\",\n        children: \"retention\"\n      }), \". Default: not set.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"x-stream-max-segment-size-bytes\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"A stream is divided up into fixed size segment files on disk.\\r\\nThis setting controls the size in bytes of these.\\r\\nDefault: 500000000 bytes.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"x-stream-filter-size-bytes\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The size in bytes of the Bloom filter used for \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#filtering\",\n        children: \"filtering\"\n      }), \".\\r\\nThe value must be between 16 and 255.\\r\\nDefault: 16 bytes.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"While the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"x-stream-max-segment-size-bytes\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"x-stream-filter-size-bytes\"\n      }), \" arguments can be configured via a policy, they will \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"only\"\n      }), \" be applied to the stream if the policy is set (exists) at stream declaration time.\\r\\nIf these arguments are changed for a matching but pre-existing stream they \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"will not be changed\"\n      }), \" even if the effective policy of the queue record may indicate it is.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Hence it is best to only configure these via queue arguments.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The following example in Java demonstrates how the argument can be set\\r\\nat stream declaration time in application code:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-java\",\n        children: \"Map<String, Object> arguments = new HashMap<>();\\r\\narguments.put(\\\"x-queue-type\\\", \\\"stream\\\");\\r\\n// maximum stream size: 20 GB\\r\\narguments.put(\\\"x-max-length-bytes\\\", 20_000_000_000);\\r\\n// size of segment files: 100 MB\\r\\narguments.put(\\\"x-stream-max-segment-size-bytes\\\", 100_000_000);\\r\\n// size of stream bloom filter: 32\\r\\narguments.put(\\\"x-stream-filter-size-bytes\\\", 32);\\r\\n\\r\\nchannel.queueDeclare(\\r\\n  \\\"my-stream\\\",\\r\\n  true,         // durable\\r\\n  false, false, // not exclusive, not auto-delete\\r\\n  arguments\\r\\n);\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"client-operations\",\n      children: \"Client Operations\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"consuming\",\n      children: \"Consuming\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"As streams never delete any messages, any consumer can start reading/consuming\\r\\nfrom any point in the log. This is controlled by the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"x-stream-offset\"\n      }), \" consumer argument.\\r\\nIf it is unspecified the consumer will start reading from the next offset written\\r\\nto the log after the consumer starts. The following values are supported:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"first\"\n        }), \" - start from the first available message in the log\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"last\"\n        }), \" - this starts reading from the last written \\\"chunk\\\" of messages \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n          children: \"(a chunk\\r\\nis the storage and transportation unit used in streams, put simply it is a batch\\r\\nof messages made of several to a few thousands of messages, depending on the ingress)\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"next\"\n        }), \" - same as not specifying any offset\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Offset - a numerical value specifying an exact offset to attach to the log at.\\r\\nIf this offset does not exist it will clamp to either the start or end of the log respectively.\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Timestamp - a timestamp value specifying the point in time to attach to the log at.\\r\\nIt will clamp to the closest offset, if the timestamp is out of range for the stream it will clamp either the start or end of the log respectively.\\r\\nWith AMQP 0.9.1, the timestamp used is POSIX time with an accuracy of one second, that is the number of seconds since 00:00:00 UTC, 1970-01-01.\\r\\nBe aware consumers can receive messages published a bit before the specified timestamp.\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Interval - a string value specifying the time interval relative to current time to attach the log at. Uses the same specification as \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"x-max-age\"\n        }), \" (see \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#retention\",\n          children: \"Retention\"\n        }), \")\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The following snippet shows how to use the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"first\"\n      }), \" offset specification:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-java\",\n        children: \"channel.basicQos(100); // QoS must be specified\\r\\nchannel.basicConsume(\\r\\n  \\\"my-stream\\\",\\r\\n  false,\\r\\n  Collections.singletonMap(\\\"x-stream-offset\\\", \\\"first\\\"), // \\\"first\\\" offset specification\\r\\n  (consumerTag, message) -> {\\r\\n    // message processing\\r\\n    // ...\\r\\n   channel.basicAck(message.getEnvelope().getDeliveryTag(), false); // ack is required\\r\\n  },\\r\\n  consumerTag -> { });\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The following snippet shows how to specify a specific offset to consume from:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-java\",\n        children: \"channel.basicQos(100); // QoS must be specified\\r\\nchannel.basicConsume(\\r\\n  \\\"my-stream\\\",\\r\\n  false,\\r\\n  Collections.singletonMap(\\\"x-stream-offset\\\", 5000), // offset value\\r\\n  (consumerTag, message) -> {\\r\\n    // message processing\\r\\n    // ...\\r\\n   channel.basicAck(message.getEnvelope().getDeliveryTag(), false); // ack is required\\r\\n  },\\r\\n  consumerTag -> { });\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The following snippet shows how to specify a specific timestamp to consume from:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-java\",\n        children: \"// an hour ago\\r\\nDate timestamp = new Date(System.currentTimeMillis() - 60 * 60 * 1_000)\\r\\nchannel.basicQos(100); // QoS must be specified\\r\\nchannel.basicConsume(\\r\\n  \\\"my-stream\\\",\\r\\n  false,\\r\\n  Collections.singletonMap(\\\"x-stream-offset\\\", timestamp), // timestamp offset\\r\\n  (consumerTag, message) -> {\\r\\n    // message processing\\r\\n    // ...\\r\\n   channel.basicAck(message.getEnvelope().getDeliveryTag(), false); // ack is required\\r\\n  },\\r\\n  consumerTag -> { });\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"other-stream-operations\",\n      children: \"Other Stream Operations\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The following operations can be used in a similar way to classic and quorum queues\\r\\nbut some have some queue specific behaviour.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#declaring\",\n          children: \"Declaration\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Queue deletion\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./confirms#publisher-confirms\",\n          children: \"Publisher confirms\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./consumers\",\n          children: \"Consumption\"\n        }), \" (subscription): consumption requires QoS\\r\\nprefetch to be set. The acks works as a credit mechanism to advance the current\\r\\noffset of the consumer.\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Setting \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#global-qos\",\n          children: \"QoS prefetch\"\n        }), \" for consumers\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"./confirms\",\n          children: \"Consumer acknowledgements\"\n        }), \" (keep \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#global-qos\",\n          children: \"QoS Prefetch Limitations\"\n        }), \" in mind)\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Cancellation of consumers\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"single-active-consumer\",\n      children: \"Single Active Consumer Feature for Streams\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Single active consumer for streams is a feature available in RabbitMQ 3.11 and more.\\r\\nIt provides \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"exclusive consumption\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"consumption continuity\"\n      }), \" on a stream.\\r\\nWhen several consumer instances sharing the same stream and name enable single active consumer, only one of these instances will be active at a time and so will receive messages.\\r\\nThe other instances will be idle.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The single active consumer feature provides 2 benefits:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Messages are processed in order: there is only one consumer at a time.\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Consumption continuity is maintained: a consumer from the group will take over if the active one stops or crashes.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"A \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/blog/2022/07/05/rabbitmq-3-11-feature-preview-single-active-consumer-for-streams\",\n        children: \"blog post\"\n      }), \" provides more details on single active consumer for streams.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"super-streams\",\n      children: \"Super Streams\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Super streams are a way to scale out by partitioning a large stream into smaller streams.\\r\\nThey integrate with \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#single-active-consumer\",\n        children: \"single active consumer\"\n      }), \" to preserve message order within a partition.\\r\\nSuper streams are available starting with RabbitMQ 3.11.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"A super stream is a logical stream made of individual, regular streams.\\r\\nIt is a way to scale out publishing and consuming with RabbitMQ Streams: a large logical stream is divided into partition streams, splitting up the storage and the traffic on several cluster nodes.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"A super stream remains a logical entity: applications see it as one “large” stream, thanks to the smartness of client libraries.\\r\\nThe topology of a super stream is based on the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/tutorials/amqp-concepts\",\n        children: \"AMQP 0.9.1 model\"\n      }), \", that is exchange, queues, and bindings between them.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"It is possible to create the topology of a super stream with any AMQP 0.9.1 library or with the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./management\",\n        children: \"management plugin\"\n      }), \", it requires to create a direct exchange, the \\\"partition\\\" streams, and bind them together.\\r\\nIt may be easier to use the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-streams add_super_stream\"\n      }), \" command though.\\r\\nHere is how to use it to create an \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"invoices\"\n      }), \" super stream with 3 partitions:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmq-streams add_super_stream invoices --partitions 3\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Use \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-streams add_super_stream --help\"\n      }), \" to learn more about the command.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Super streams add complexity compared to individual streams, so they should not be considered the default solution for all use cases involving streams.\\r\\nConsider using super streams only if you are sure you reached the limits of individual streams.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"A \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/blog/2022/07/13/rabbitmq-3-11-feature-preview-super-streams\",\n        children: \"blog post\"\n      }), \" provides an overview of super streams.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"filtering\",\n      children: \"Filtering\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"RabbitMQ Stream provides a server-side filtering feature that avoids reading all the messages of a stream and filtering only on the client side.\\r\\nThis helps to save network bandwidth when a consuming application needs only a subset of messages, e.g. the messages from a given geographical region.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Stream filtering is supported with the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./stream\",\n        children: \"stream protocol\"\n      }), \", AMQP 0.9.1, and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./stomp#stream-support\",\n        children: \"STOMP\"\n      }), \".\\r\\nExamples will be using AMQP 0.9.1.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"A message must be published with an associated filter value for the filtering feature to work.\\r\\nThis value is specified with the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"x-stream-filter-value\"\n      }), \" header:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-java\",\n        children: \"channel.basicPublish(\\r\\n  \\\"\\\", // default exchange\\r\\n  \\\"my-stream\\\",\\r\\n  new AMQP.BasicProperties.Builder()\\r\\n    .headers(Collections.singletonMap(\\r\\n      \\\"x-stream-filter-value\\\", \\\"california\\\" // set filter value\\r\\n    ))\\r\\n    .build(),\\r\\n  body\\r\\n);\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"A consumer must use the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"x-stream-filter\"\n      }), \" argument if it wants to receive only messages for a given filter value:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-java\",\n        children: \"channel.basicQos(100); // QoS must be specified\\r\\nchannel.basicConsume(\\r\\n  \\\"my-stream\\\",\\r\\n  false,\\r\\n  Collections.singletonMap(\\\"x-stream-filter\\\", \\\"california\\\"), // set filter\\r\\n  (consumerTag, message) -> {\\r\\n    Map<String, Object> headers = message.getProperties().getHeaders();\\r\\n    // there must be some client-side filter logic\\r\\n    if (\\\"california\\\".equals(headers.get(\\\"x-stream-filter-value\\\"))) {\\r\\n      // message processing\\r\\n      // ...\\r\\n    }\\r\\n    channel.basicAck(message.getEnvelope().getDeliveryTag(), false); // ack is required\\r\\n  },\\r\\n  consumerTag -> { });\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"As shown in the snippet above, there must be some client-side filtering logic as well because server-side filtering is \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"probabilistic\"\n      }), \": messages that do not match the filter value can still be sent to the consumer.\\r\\nThe server uses a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://en.wikipedia.org/wiki/Bloom_filter\",\n        children: \"Bloom filter\"\n      }), \", a space-efficient probabilistic data structure, where false positives are possible.\\r\\nDespite this, the filtering saves some bandwidth, which is its primary goal.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Additional notes on filtering:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"It is possible to publish messages with and without a filter value in the same stream.\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Messages without a filter value are not sent when a filter is set by a consumer.\\r\\nSet the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"x-stream-match-unfiltered\"\n        }), \" argument to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"true\"\n        }), \" to change this behavior and receive \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n          children: \"unfiltered\"\n        }), \" messages as well.\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"The \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"x-stream-filter\"\n        }), \" consumer argument accepts a string but also an array of strings to receive messages for different filter values.\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"A \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/blog/2023/10/16/stream-filtering\",\n        children: \"first blog post\"\n      }), \" provides an overview of stream filtering and a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/blog/2023/10/24/stream-filtering-internals\",\n        children: \"second blog post\"\n      }), \" covers internals.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"feature-comparison\",\n      children: \"Feature Comparison: Regular Queues versus Streams\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Streams are not really queues in the traditional sense and thus do not\\r\\nalign very closely with AMQP 0.9.1 queue semantics. Many features that other queue types\\r\\nsupport are not supported and will never be due to the nature of the queue type.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"An AMQP 0.9.1 client library that can use \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./queues\",\n        children: \"regular queues\"\n      }), \" will be able to use streams\\r\\nas long as it uses consumer acknowledgements.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Many features will never be supported by streams due to their non-destructive\\r\\nread semantics.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"feature-matrix\",\n      children: \"Feature Matrix\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.table, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.thead, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.th, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"Feature\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.th, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"Classic\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.th, {\n            children: \"Stream\"\n          })]\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tbody, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n              href: \"./queues\",\n              children: \"Non-durable queues\"\n            })\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"yes\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            children: \"no\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n              href: \"./queues\",\n              children: \"Exclusivity\"\n            })\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"yes\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            children: \"no\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"Per message persistence\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"per message\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            children: \"always\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"Membership changes\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"no\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            children: \"manual\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n              href: \"./ttl\",\n              children: \"TTL\"\n            })\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"yes\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.td, {\n            children: [\"no (but see \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n              href: \"#retention\",\n              children: \"Retention\"\n            }), \")\"]\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n              href: \"./maxlength\",\n              children: \"Queue length limits\"\n            })\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"yes\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.td, {\n            children: [\"no (but see \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n              href: \"#retention\",\n              children: \"Retention\"\n            }), \")\"]\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"Keeps messages in memory\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: [\"see \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n              href: \"./classic-queues#memory\",\n              children: \"Classic Queues\"\n            })]\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            children: \"never\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n              href: \"./priority\",\n              children: \"Message priority\"\n            })\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"yes\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            children: \"no\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n              href: \"./consumer-priority\",\n              children: \"Consumer priority\"\n            })\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"yes\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            children: \"no\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n              href: \"./dlx\",\n              children: \"Dead letter exchanges\"\n            })\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"yes\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            children: \"no\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: [\"Adheres to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n              href: \"./policies\",\n              children: \"policies\"\n            })]\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"yes\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.td, {\n            children: [\"yes (see \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n              href: \"#retention\",\n              children: \"Retention\"\n            }), \")\"]\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: [\"Reacts to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n              href: \"./alarms\",\n              children: \"memory alarms\"\n            })]\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"yes\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            children: \"no (uses minimal RAM)\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"Poison message handling\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"no\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            children: \"no\"\n          })]\n        })]\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"non-durable-queues\",\n      children: \"Non-durable Queues\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Streams are always durable per their assumed \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#use-cases\",\n        children: \"use cases\"\n      }), \",\\r\\nthey cannot be \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./queues#properties\",\n        children: \"non-durable\"\n      }), \" like regular queues.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"exclusivity\",\n      children: \"Exclusivity\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Streams are always durable per their assumed \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#use-cases\",\n        children: \"use cases\"\n      }), \", they cannot be\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./queues#exclusive-queues\",\n        children: \"exclusive\"\n      }), \" like regular queues.\\r\\nThey are not meant to be used as \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./queues#temporary-queues\",\n        children: \"temporary queues\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"global-qos\",\n      children: \"Global QoS\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Streams do not support global \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./confirms#channel-qos-prefetch\",\n        children: \"QoS prefetch\"\n      }), \" where a channel sets a single\\r\\nprefetch limit for all consumers using that channel. If an attempt\\r\\nis made to consume from a stream from a channel with global QoS enabled\\r\\na channel error will be returned.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Use \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./consumer-prefetch\",\n        children: \"per-consumer QoS prefetch\"\n      }), \", which is the default in several popular clients.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"retention\",\n      children: \"Data Retention\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Streams are implemented as an immutable append-only disk log. This means that\\r\\nthe log will grow indefinitely until the disk runs out. To avoid this undesirable\\r\\nscenario it is possible to set a retention configuration per stream which will\\r\\ndiscard the oldest data in the log based on total log data size and/or age.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"There are two parameters that control the retention of a stream.\\r\\nThese can be combined.\\r\\nThese are either set at declaration time using a queue argument or as a policy which can be dynamically updated.\\r\\nThe policy takes precedence over queue arguments.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"max-age\"\n          }), \":\"]\n        }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n          children: \"valid units: Y, M, D, h, m, s\"\n        }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n          children: [\"e.g. \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"7D\"\n          }), \" for a week\"]\n        }), \"\\n\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"max-length-bytes\"\n          }), \":\"]\n        }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n          children: \"the max total size in bytes\"\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"NB: retention is evaluated on per segment basis so there is one more parameter\\r\\nthat comes into effect and that is the segment size of the stream. The stream will\\r\\nalways leave at least one segment in place as long as the segment contains at least\\r\\none message.\\r\\nWhen using broker-provided \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#offset-tracking\",\n        children: \"offset-tracking\"\n      }), \", offsets for each consumer\\r\\nare persisted in the stream itself as non-message data.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"performance\",\n      children: \"Performance Characteristics\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"As streams persist all data to disks before doing anything it is recommended\\r\\nto use the fastest disks possible.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Due to the disk I/O-heavy nature of streams, their throughput decreases\\r\\nas message sizes increase.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Just like quorum queues, streams are also affected by cluster sizes.\\r\\nThe more replicas a stream has, the lower its throughput generally will\\r\\nbe since more work has to be done to replicate data and achieve consensus.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"replication-factor\",\n      children: \"Controlling the Initial Replication Factor\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"x-initial-cluster-size\"\n      }), \" queue argument controls how many rabbit nodes the initial\\r\\nstream cluster should span.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"member-management\",\n      children: \"Managing Stream Replicas\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Replicas of a stream are explicitly managed by the operator. When a new node is added\\r\\nto the cluster, it will host no stream replicas unless the operator explicitly adds it\\r\\nto a replica set of a stream.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"When a node has to be decommissioned (permanently removed from the cluster), it must be explicitly\\r\\nremoved from the replica list of all streams it currently hosts replicas for.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Two \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./cli\",\n        children: \"CLI commands\"\n      }), \" are provided to perform the above operations,\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-streams add_replica\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq-streams delete_replica\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmq-streams add_replica [-p <vhost>] <stream-name> <node>\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmq-streams delete_replica [-p <vhost>] <stream-name> <node>\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"To successfully add and remove replicas the stream coordinator must be\\r\\navailable in the cluster.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Care needs to be taken not to accidentally make a stream unavailable by losing\\r\\nthe quorum whilst performing maintenance operations that involve membership changes.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Because the stream membership isn't embedded in the stream itself adding a replica\\r\\ncannot be made entirely safe at the current time. Hence if there at any time is an\\r\\nout of sync replica another replica cannot be added and an error will be returned.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"When replacing a cluster node, it is safer to first add a new node, wait for it\\r\\nto become in-sync and then de-commission the node it replaces.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The replication status of a stream can be queried using the following command:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmq-streams stream_status [-p <vhost>] <stream-name>\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"In addition streams can be restarted using:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmq-streams restart_stream [-p <vhost>] <stream-name>\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"behaviour\",\n      children: \"Stream Behaviour\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Every stream has a primary writer (the leader) and zero or more replicas.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"leader-election\",\n      children: \"Leader Election and Failure Handling\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"When a new stream is declared, the set of nodes that will host its\\r\\nreplicas is randomly picked, but will always include the node the client that declares the stream is connected to.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Which replica becomes the initial leader is controlled in three ways,\\r\\nnamely, using the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"x-queue-leader-locator\"\n      }), \" \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./queues#optional-arguments\",\n        children: \"optional queue argument\"\n      }), \", setting the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"queue-leader-locator\"\n      }), \"\\r\\npolicy key or by defining the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"queue_leader_locator\"\n      }), \"\\r\\nkey in \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./configure#configuration-files\",\n        children: \"the configuration file\"\n      }), \". Here are the possible values:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"client-local\"\n        }), \": Pick the node the client that declares the stream is connected to. This is the default value.\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"balanced\"\n        }), \": If there are overall less than 1000 queues (classic queues, quorum queues, and streams),\\r\\npick the node hosting the minimum number of stream leaders.\\r\\nIf there are overall more than 1000 queues, pick a random node.\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"A stream requires a quorum of the declared nodes to be available\\r\\nto function. When a RabbitMQ node hosting a stream's\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"leader\"\n      }), \" fails or is stopped another node hosting one of that\\r\\nstream's \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"replica\"\n      }), \" will be elected leader and resume\\r\\noperations.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Failed and rejoining replicas will re-synchronise (\\\"catch up\\\") with the leader.\\r\\nSimilarly to quorum queues queues, a temporary replica failure\\r\\ndoes not require a full re-synchronization from the currently elected leader. Only the delta\\r\\nwill be transferred if a re-joining replica is behind the leader. This \\\"catching up\\\" process\\r\\ndoes not affect leader availability.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Replicas must be explicitly added.\\r\\nWhen a new replica is \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#member-management\",\n        children: \"added\"\n      }), \", it will synchronise the entire stream state\\r\\nfrom the leader, similarly to newly added quorum queue replicas.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"quorum-requirements\",\n      children: \"Fault Tolerance and Minimum Number of Replicas Online\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Consensus systems can provide certain guarantees with regard to data safety.\\r\\nThese guarantees do mean that certain conditions need to be met before they\\r\\nbecome relevant such as requiring a minimum of three cluster nodes to provide\\r\\nfault tolerance and requiring more than half of members to be available to\\r\\nwork at all.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Failure tolerance characteristics of clusters of various size can be described\\r\\nin a table:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.table, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.thead, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.th, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"Cluster node count\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.th, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"Tolerated number of node failures\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.th, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"Tolerant to a network partition\"\n          })]\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tbody, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"1\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"0\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"not applicable\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"2\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"0\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"no\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"3\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"1\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"yes\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"4\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"1\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"yes if a majority exists on one side\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"5\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"2\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"yes\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"6\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"2\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"yes if a majority exists on one side\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"7\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"3\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"yes\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"8\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"3\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"yes if a majority exists on one side\"\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.tr, {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"9\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"4\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.td, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"yes\"\n          })]\n        })]\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"data-safety\",\n      children: \"Data Safety when using Streams\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Streams replicate data across multiple nodes and publisher confirms are only\\r\\nissued once the data has been replicated to a quorum of stream replicas.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Streams always store data on disk, however, they do not explicitly flush (fsync)\\r\\nthe data from the operating system page cache to the underlying storage\\r\\nmedium, instead they rely on the operating system to do as and when required.\\r\\nThis means that an uncontrolled shutdown of a server could result in data loss\\r\\nfor replicas hosted on that node. Although theoretically this opens up the possibility\\r\\nof confirmed data loss, the chances of this happening during normal operation is\\r\\nvery small and the loss of data on a single node would typically just be re-replicated\\r\\nfrom the other nodes in the system.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"If more data safety is required then consider using quorum queues instead as no\\r\\npublisher confirms are issued until at least a quorum of nodes have both written \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"and\"\n      }), \"\\r\\nflushed the data to disk.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n          children: \"No guarantees are provided for messages that have not been confirmed using\\r\\nthe publisher confirm mechanism\"\n        })\n      }), \". Such messages could be lost \\\"mid-way\\\", in an operating\\r\\nsystem buffer or otherwise fail to reach the stream leader.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"availability\",\n      children: \"Stream Availability\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"A stream should be able to tolerate a minority of stream replicas becoming unavailable\\r\\nwith no or little effect on availability.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Note that depending on the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./partitions\",\n        children: \"partition handling strategy\"\n      }), \"\\r\\nused RabbitMQ may restart itself during recovery and reset the node but as long as that\\r\\ndoes not happen, this availability guarantee should hold true.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"For example, a stream with three replicas can tolerate one node failure without losing availability.\\r\\nA stream with five replicas can tolerate two, and so on.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"If a quorum of nodes cannot be recovered (say if 2 out of 3 RabbitMQ nodes are\\r\\npermanently lost) the queue is permanently unavailable and\\r\\nwill most likely need operator involvement to be recovered.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"configuration\",\n      children: \"Configuring Streams\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"For stream protocol port, TLS and other configuration, see the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./stream\",\n        children: \"Stream plugin guide\"\n      }), \".\\r\\nFor required stream replication ports see the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./networking#ports\",\n        children: \"Networking guide\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"resource-use\",\n      children: \"How Streams Use Resources\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Streams usually will have lower CPU and memory footprint than quorum queues.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"All data is stored on disk with only unwritten data stored in memory.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"offset-tracking\",\n      children: \"Offset Tracking when using Streams\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"When using the broker provided offset tracking features (currently only available\\r\\nwhen using the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./stream\",\n        children: \"Stream plugin\"\n      }), \") offsets are persisted in the stream\\r\\nitself as non-message data. This means that as offset persistence is requested the\\r\\nstream will grow on disk by some small amount per offset persistence request.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"limitations\",\n      children: \"Limitations\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"limitations-message-encoding\",\n      children: \"Message Encoding\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Streams internally store their messages as AMQP 1.0 encoded data. This means when\\r\\npublishing using AMQP 0.9.1 a conversion takes place. Although the AMQP 1.0 data\\r\\nmodel is mostly capable of containing all of AMQP 0.9.1's data model there are some\\r\\nlimitations. If an AMQP 0.9.1 message contains header entries with complex values\\r\\nsuch as arrays or tables these headers will not be converted.\\r\\nThat is because headers are stored as application properties inside the AMQP 1.0 message and these can only\\r\\ncontain values of simple types, such as strings and numbers.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"limitations-ui-metrics\",\n      children: \"UI Metric Accuracy\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Management UI can show a message count that slightly exceeds the actual count in the stream.\\r\\nDue to the way stream storage is implemented, offset tracking information is also counted as messages, making the message count artificially larger than it is.\\r\\nThis should make no practical difference in most systems.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi92ZXJzaW9uZWRfZG9jcy92ZXJzaW9uLTQuMC9zdHJlYW1zLm1kIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFiYml0bXEtd2Vic2l0ZS8uL3ZlcnNpb25lZF9kb2NzL3ZlcnNpb24tNC4wL3N0cmVhbXMubWQ/N2IwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyID0ge1xuXHR0aXRsZTogJ1N0cmVhbXMgYW5kIFN1cGVyIFN0cmVhbXMgKFBhcnRpdGlvbmVkIFN0cmVhbXMpJ1xufTtcbmV4cG9ydCBjb25zdCBjb250ZW50VGl0bGUgPSAnU3RyZWFtcyBhbmQgU3VwZXIgU3RyZWFtcyAoUGFydGl0aW9uZWQgU3RyZWFtcyknO1xuZXhwb3J0IHtkZWZhdWx0IGFzIG1ldGFkYXRhfSBmcm9tICdAc2l0ZS8uZG9jdXNhdXJ1cy9kb2N1c2F1cnVzLXBsdWdpbi1jb250ZW50LWRvY3MvZGVmYXVsdC9zaXRlLXZlcnNpb25lZC1kb2NzLXZlcnNpb24tNC0wLXN0cmVhbXMtbWQtNTQ3Lmpzb24nXG5leHBvcnQgY29uc3QgYXNzZXRzID0ge1xuXG59O1xuXG5pbXBvcnQge0ZyYWdtZW50IGFzIF9GcmFnbWVudCwganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHN9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuaW1wb3J0IHt1c2VNRFhDb21wb25lbnRzIGFzIF9wcm92aWRlQ29tcG9uZW50c30gZnJvbSBcIkBtZHgtanMvcmVhY3RcIjtcbmV4cG9ydCBjb25zdCB0b2MgPSBbe1xuICBcInZhbHVlXCI6IFwiV2hhdCBpcyBhIFN0cmVhbVwiLFxuICBcImlkXCI6IFwib3ZlcnZpZXdcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJVc2UgQ2FzZXMgZm9yIFVzaW5nIFN0cmVhbXNcIixcbiAgXCJpZFwiOiBcInVzZS1jYXNlc1wiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkhvdyB0byBVc2UgUmFiYml0TVEgU3RyZWFtc1wiLFxuICBcImlkXCI6IFwidXNhZ2VcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJEZWNsYXJpbmcgYSBSYWJiaXRNUSBTdHJlYW1cIixcbiAgXCJpZFwiOiBcImRlY2xhcmluZ1wiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkNsaWVudCBPcGVyYXRpb25zXCIsXG4gIFwiaWRcIjogXCJjbGllbnQtb3BlcmF0aW9uc1wiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkNvbnN1bWluZ1wiLFxuICBcImlkXCI6IFwiY29uc3VtaW5nXCIsXG4gIFwibGV2ZWxcIjogNFxufSwge1xuICBcInZhbHVlXCI6IFwiT3RoZXIgU3RyZWFtIE9wZXJhdGlvbnNcIixcbiAgXCJpZFwiOiBcIm90aGVyLXN0cmVhbS1vcGVyYXRpb25zXCIsXG4gIFwibGV2ZWxcIjogNFxufSwge1xuICBcInZhbHVlXCI6IFwiU2luZ2xlIEFjdGl2ZSBDb25zdW1lciBGZWF0dXJlIGZvciBTdHJlYW1zXCIsXG4gIFwiaWRcIjogXCJzaW5nbGUtYWN0aXZlLWNvbnN1bWVyXCIsXG4gIFwibGV2ZWxcIjogM1xufSwge1xuICBcInZhbHVlXCI6IFwiU3VwZXIgU3RyZWFtc1wiLFxuICBcImlkXCI6IFwic3VwZXItc3RyZWFtc1wiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkZpbHRlcmluZ1wiLFxuICBcImlkXCI6IFwiZmlsdGVyaW5nXCIsXG4gIFwibGV2ZWxcIjogM1xufSwge1xuICBcInZhbHVlXCI6IFwiRmVhdHVyZSBDb21wYXJpc29uOiBSZWd1bGFyIFF1ZXVlcyB2ZXJzdXMgU3RyZWFtc1wiLFxuICBcImlkXCI6IFwiZmVhdHVyZS1jb21wYXJpc29uXCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwiRmVhdHVyZSBNYXRyaXhcIixcbiAgXCJpZFwiOiBcImZlYXR1cmUtbWF0cml4XCIsXG4gIFwibGV2ZWxcIjogM1xufSwge1xuICBcInZhbHVlXCI6IFwiTm9uLWR1cmFibGUgUXVldWVzXCIsXG4gIFwiaWRcIjogXCJub24tZHVyYWJsZS1xdWV1ZXNcIixcbiAgXCJsZXZlbFwiOiA0XG59LCB7XG4gIFwidmFsdWVcIjogXCJFeGNsdXNpdml0eVwiLFxuICBcImlkXCI6IFwiZXhjbHVzaXZpdHlcIixcbiAgXCJsZXZlbFwiOiA0XG59LCB7XG4gIFwidmFsdWVcIjogXCJHbG9iYWwgUW9TXCIsXG4gIFwiaWRcIjogXCJnbG9iYWwtcW9zXCIsXG4gIFwibGV2ZWxcIjogNFxufSwge1xuICBcInZhbHVlXCI6IFwiRGF0YSBSZXRlbnRpb25cIixcbiAgXCJpZFwiOiBcInJldGVudGlvblwiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIlBlcmZvcm1hbmNlIENoYXJhY3RlcmlzdGljc1wiLFxuICBcImlkXCI6IFwicGVyZm9ybWFuY2VcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJDb250cm9sbGluZyB0aGUgSW5pdGlhbCBSZXBsaWNhdGlvbiBGYWN0b3JcIixcbiAgXCJpZFwiOiBcInJlcGxpY2F0aW9uLWZhY3RvclwiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIk1hbmFnaW5nIFN0cmVhbSBSZXBsaWNhc1wiLFxuICBcImlkXCI6IFwibWVtYmVyLW1hbmFnZW1lbnRcIixcbiAgXCJsZXZlbFwiOiAzXG59LCB7XG4gIFwidmFsdWVcIjogXCJTdHJlYW0gQmVoYXZpb3VyXCIsXG4gIFwiaWRcIjogXCJiZWhhdmlvdXJcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJMZWFkZXIgRWxlY3Rpb24gYW5kIEZhaWx1cmUgSGFuZGxpbmdcIixcbiAgXCJpZFwiOiBcImxlYWRlci1lbGVjdGlvblwiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkZhdWx0IFRvbGVyYW5jZSBhbmQgTWluaW11bSBOdW1iZXIgb2YgUmVwbGljYXMgT25saW5lXCIsXG4gIFwiaWRcIjogXCJxdW9ydW0tcmVxdWlyZW1lbnRzXCIsXG4gIFwibGV2ZWxcIjogM1xufSwge1xuICBcInZhbHVlXCI6IFwiRGF0YSBTYWZldHkgd2hlbiB1c2luZyBTdHJlYW1zXCIsXG4gIFwiaWRcIjogXCJkYXRhLXNhZmV0eVwiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIlN0cmVhbSBBdmFpbGFiaWxpdHlcIixcbiAgXCJpZFwiOiBcImF2YWlsYWJpbGl0eVwiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkNvbmZpZ3VyaW5nIFN0cmVhbXNcIixcbiAgXCJpZFwiOiBcImNvbmZpZ3VyYXRpb25cIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJIb3cgU3RyZWFtcyBVc2UgUmVzb3VyY2VzXCIsXG4gIFwiaWRcIjogXCJyZXNvdXJjZS11c2VcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJPZmZzZXQgVHJhY2tpbmcgd2hlbiB1c2luZyBTdHJlYW1zXCIsXG4gIFwiaWRcIjogXCJvZmZzZXQtdHJhY2tpbmdcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJMaW1pdGF0aW9uc1wiLFxuICBcImlkXCI6IFwibGltaXRhdGlvbnNcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJNZXNzYWdlIEVuY29kaW5nXCIsXG4gIFwiaWRcIjogXCJsaW1pdGF0aW9ucy1tZXNzYWdlLWVuY29kaW5nXCIsXG4gIFwibGV2ZWxcIjogM1xufSwge1xuICBcInZhbHVlXCI6IFwiVUkgTWV0cmljIEFjY3VyYWN5XCIsXG4gIFwiaWRcIjogXCJsaW1pdGF0aW9ucy11aS1tZXRyaWNzXCIsXG4gIFwibGV2ZWxcIjogM1xufV07XG5mdW5jdGlvbiBfY3JlYXRlTWR4Q29udGVudChwcm9wcykge1xuICBjb25zdCBfY29tcG9uZW50cyA9IHtcbiAgICBhOiBcImFcIixcbiAgICBhZG1vbml0aW9uOiBcImFkbW9uaXRpb25cIixcbiAgICBjb2RlOiBcImNvZGVcIixcbiAgICBlbTogXCJlbVwiLFxuICAgIGgxOiBcImgxXCIsXG4gICAgaDI6IFwiaDJcIixcbiAgICBoMzogXCJoM1wiLFxuICAgIGg0OiBcImg0XCIsXG4gICAgaGVhZGVyOiBcImhlYWRlclwiLFxuICAgIGxpOiBcImxpXCIsXG4gICAgb2w6IFwib2xcIixcbiAgICBwOiBcInBcIixcbiAgICBwcmU6IFwicHJlXCIsXG4gICAgc3Ryb25nOiBcInN0cm9uZ1wiLFxuICAgIHRhYmxlOiBcInRhYmxlXCIsXG4gICAgdGJvZHk6IFwidGJvZHlcIixcbiAgICB0ZDogXCJ0ZFwiLFxuICAgIHRoOiBcInRoXCIsXG4gICAgdGhlYWQ6IFwidGhlYWRcIixcbiAgICB0cjogXCJ0clwiLFxuICAgIHVsOiBcInVsXCIsXG4gICAgLi4uX3Byb3ZpZGVDb21wb25lbnRzKCksXG4gICAgLi4ucHJvcHMuY29tcG9uZW50c1xuICB9O1xuICByZXR1cm4gX2pzeHMoX0ZyYWdtZW50LCB7XG4gICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmhlYWRlciwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuaDEsIHtcbiAgICAgICAgaWQ6IFwic3RyZWFtcy1hbmQtc3VwZXItc3RyZWFtcy1wYXJ0aXRpb25lZC1zdHJlYW1zXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIlN0cmVhbXMgYW5kIFN1cGVyIFN0cmVhbXMgKFBhcnRpdGlvbmVkIFN0cmVhbXMpXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcIm92ZXJ2aWV3XCIsXG4gICAgICBjaGlsZHJlbjogXCJXaGF0IGlzIGEgU3RyZWFtXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJSYWJiaXRNUSBTdHJlYW1zIGlzIGEgcGVyc2lzdGVudCByZXBsaWNhdGVkIGRhdGEgc3RydWN0dXJlIHRoYXQgY2FuIGNvbXBsZXRlIHRoZSBzYW1lIHRhc2tzIGFzIHF1ZXVlczogdGhleSBidWZmZXIgbWVzc2FnZXMgZnJvbSBwcm9kdWNlcnMgdGhhdCBhcmUgcmVhZCBieSBjb25zdW1lcnMuXFxyXFxuSG93ZXZlciwgc3RyZWFtcyBkaWZmZXIgZnJvbSBxdWV1ZXMgaW4gdHdvIGltcG9ydGFudCB3YXlzOiBob3cgbWVzc2FnZXMgYXJlIHN0b3JlZCBhbmQgY29uc3VtZWQuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJTdHJlYW1zIG1vZGVsIGFuIGFwcGVuZC1vbmx5IGxvZyBvZiBtZXNzYWdlcyB0aGF0IGNhbiBiZSByZXBlYXRlZGx5IHJlYWQgdW50aWwgdGhleSBleHBpcmUuXFxyXFxuU3RyZWFtcyBhcmUgYWx3YXlzIHBlcnNpc3RlbnQgYW5kIHJlcGxpY2F0ZWQuIEEgbW9yZSB0ZWNobmljYWwgZGVzY3JpcHRpb24gb2YgdGhpcyBzdHJlYW0gYmVoYXZpb3IgaXMg4oCcbm9uLWRlc3RydWN0aXZlIGNvbnN1bWVyIHNlbWFudGljc+KAnS5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIlRvIHJlYWQgbWVzc2FnZXMgZnJvbSBhIHN0cmVhbSBpbiBSYWJiaXRNUSwgb25lIG9yIG1vcmUgY29uc3VtZXJzIHN1YnNjcmliZSB0byBpdCBhbmQgcmVhZCB0aGUgc2FtZSBtZXNzYWdlcyBhcyBtYW55IHRpbWVzIGFzIHRoZXkgd2FudC5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiRGF0YSBpbiBhIHN0cmVhbSBjYW4gYmUgdXNlZCB2aWEgYSBSYWJiaXRNUSBjbGllbnQgbGlicmFyeSBvciB0aHJvdWdoIGFcXHJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiaHR0cHM6Ly9naXRodWIuY29tL3JhYmJpdG1xL3JhYmJpdG1xLXNlcnZlci9ibG9iL21haW4vZGVwcy9yYWJiaXRtcV9zdHJlYW0vZG9jcy9QUk9UT0NPTC5hZG9jXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImRlZGljYXRlZCBiaW5hcnkgcHJvdG9jb2xcIlxuICAgICAgfSksIFwiIHBsdWdpbiBhbmQgYXNzb2NpYXRlZCBjbGllbnQocykuXFxyXFxuVGhlIGxhdHRlciBvcHRpb24gaXMgXCIsIF9qc3goX2NvbXBvbmVudHMuc3Ryb25nLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcImhpZ2hseSByZWNvbW1lbmRlZFwiXG4gICAgICB9KSwgXCIgYXMgaXQgcHJvdmlkZXMgYWNjZXNzIHRvIGFsbCBzdHJlYW0tc3BlY2lmaWMgZmVhdHVyZXMgYW5kIG9mZmVycyBiZXN0IHBvc3NpYmxlIHRocm91Z2hwdXQgKHBlcmZvcm1hbmNlKS5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5hZG1vbml0aW9uLCB7XG4gICAgICB0eXBlOiBcImluZm9cIixcbiAgICAgIGNoaWxkcmVuOiBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJJbiBhZGRpdGlvbiB0byBzdHJlYW1zLCBSYWJiaXRNUSBzdXBwb3J0cyBwYXJ0aXRpb25lZCBzdHJlYW1zIGNhbGxlZCBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIjc3VwZXItc3RyZWFtc1wiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcInN1cGVyIHN0cmVhbXNcIlxuICAgICAgICB9KSwgXCIuIFRoZXkgYXJlIGNvdmVyZWRcXHJcXG5pbiBtb3JlIGRldGFpbHMgZnVydGhlciBpbiB0aGlzIGd1aWRlLlwiXVxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJOb3csIHlvdSBtaWdodCBiZSBhc2tpbmcgdGhlIGZvbGxvd2luZyBxdWVzdGlvbnM6XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMudWwsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJEbyBzdHJlYW1zIHJlcGxhY2UgcXVldWVzIHRoZW4/XCJcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIlNob3VsZCBJIG1vdmUgYXdheSBmcm9tIHVzaW5nIHF1ZXVlcz9cIlxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJUbyBhbnN3ZXIgdGhlc2UgcXVlc3Rpb25zLCBzdHJlYW1zIHdlcmUgbm90IGludHJvZHVjZWQgdG8gcmVwbGFjZSBxdWV1ZXMgYnV0IHRvIGNvbXBsZW1lbnQgdGhlbS4gU3RyZWFtcyBvcGVuIHVwIG1hbnkgb3Bwb3J0dW5pdGllcyBmb3IgbmV3IFJhYmJpdE1RIHVzZSBjYXNlcyB3aGljaCBhcmUgZGVzY3JpYmVkIGluIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIjdXNlLWNhc2VzXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIlVzZSBDYXNlcyBmb3IgVXNpbmcgU3RyZWFtc1wiXG4gICAgICB9KSwgXCIuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiVGhlIGZvbGxvd2luZyBpbmZvcm1hdGlvbiBkZXRhaWxzIHN0cmVhbXMgdXNhZ2UsIGFuZCB0aGUgYWRtaW5pc3RyYXRpb24gYW5kIG1haW50ZW5hbmNlIG9wZXJhdGlvbnMgZm9yIHN0cmVhbXMuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIllvdSBzaG91bGQgYWxzbyByZXZpZXcgdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL3N0cmVhbVwiLFxuICAgICAgICBjaGlsZHJlbjogXCJzdHJlYW0gcGx1Z2luXCJcbiAgICAgIH0pLCBcIiBpbmZvcm1hdGlvbiB0byBsZWFybiBtb3JlIGFib3V0IHRoZSB1c2FnZSBvZiBzdHJlYW1zIHdpdGggdGhlIGJpbmFyeSBSYWJiaXRNUSBTdHJlYW0gcHJvdG9jb2wgYW5kIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi9zdHJlYW0tY29yZS1wbHVnaW4tY29tcGFyaXNvblwiLFxuICAgICAgICBjaGlsZHJlbjogXCJzdHJlYW0gY29yZSBhbmQgc3RyZWFtIHBsdWdpbiBjb21wYXJpc29uIHBhZ2VcIlxuICAgICAgfSksIFwiIGZvciB0aGUgZmVhdHVyZSBtYXRyaXguXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDMsIHtcbiAgICAgIGlkOiBcInVzZS1jYXNlc1wiLFxuICAgICAgY2hpbGRyZW46IFwiVXNlIENhc2VzIGZvciBVc2luZyBTdHJlYW1zXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJTdHJlYW1zIHdlcmUgZGV2ZWxvcGVkIHRvIGluaXRpYWxseSBjb3ZlciA0IG1lc3NhZ2luZyB1c2UtY2FzZXMgdGhhdFxcclxcbmV4aXN0aW5nIHF1ZXVlIHR5cGVzIGVpdGhlciBjYW4gbm90IHByb3ZpZGUgb3IgcHJvdmlkZSB3aXRoIGRvd25zaWRlczpcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5vbCwge1xuICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW1wiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIkxhcmdlIGZhbi1vdXRzXCJcbiAgICAgICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIldoZW4gd2FudGluZyB0byBkZWxpdmVyIHRoZSBzYW1lIG1lc3NhZ2UgdG8gbXVsdGlwbGUgc3Vic2NyaWJlcnMgdXNlcnMgY3VycmVudGx5XFxyXFxuaGF2ZSB0byBiaW5kIGEgZGVkaWNhdGVkIHF1ZXVlIGZvciBlYWNoIGNvbnN1bWVyLiBJZiB0aGUgbnVtYmVyIG9mIGNvbnN1bWVycyBpc1xcclxcbmxhcmdlIHRoaXMgYmVjb21lcyBwb3RlbnRpYWxseSBpbmVmZmljaWVudCwgZXNwZWNpYWxseSB3aGVuIHdhbnRpbmcgcGVyc2lzdGVuY2VcXHJcXG5hbmQvb3IgcmVwbGljYXRpb24uIFN0cmVhbXMgd2lsbCBhbGxvdyBhbnkgbnVtYmVyIG9mIGNvbnN1bWVycyB0byBjb25zdW1lXFxyXFxudGhlIHNhbWUgbWVzc2FnZXMgZnJvbSB0aGUgc2FtZSBxdWV1ZSBpbiBhIG5vbi1kZXN0cnVjdGl2ZSBtYW5uZXIsIG5lZ2F0aW5nIHRoZSBuZWVkXFxyXFxudG8gYmluZCBtdWx0aXBsZSBxdWV1ZXMuIFN0cmVhbSBjb25zdW1lcnMgd2lsbCBhbHNvIGJlIGFibGUgdG8gcmVhZCBmcm9tIHJlcGxpY2FzXFxyXFxuYWxsb3dpbmcgcmVhZCBsb2FkIHRvIGJlIHNwcmVhZCBhY3Jvc3MgdGhlIGNsdXN0ZXIuXCJcbiAgICAgICAgfSksIFwiXFxuXCJdXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJSZXBsYXkgKFRpbWUtdHJhdmVsbGluZylcIlxuICAgICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiQXMgYWxsIGN1cnJlbnQgUmFiYml0TVEgcXVldWUgdHlwZXMgaGF2ZSBkZXN0cnVjdGl2ZSBjb25zdW1lIGJlaGF2aW91ciwgaS5lLiBtZXNzYWdlc1xcclxcbmFyZSBkZWxldGVkIGZyb20gdGhlIHF1ZXVlIHdoZW4gYSBjb25zdW1lciBpcyBmaW5pc2hlZCB3aXRoIHRoZW0sIGl0IGlzIG5vdFxcclxcbnBvc3NpYmxlIHRvIHJlLXJlYWQgbWVzc2FnZXMgdGhhdCBoYXZlIGJlZW4gY29uc3VtZWQuIFN0cmVhbXMgd2lsbCBhbGxvd1xcclxcbmNvbnN1bWVycyB0byBhdHRhY2ggYXQgYW55IHBvaW50IGluIHRoZSBsb2cgYW5kIHJlYWQgZnJvbSB0aGVyZS5cIlxuICAgICAgICB9KSwgXCJcXG5cIl1cbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW1wiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIlRocm91Z2hwdXQgUGVyZm9ybWFuY2VcIlxuICAgICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiTm8gcGVyc2lzdGVudCBxdWV1ZSB0eXBlcyBhcmUgYWJsZSB0byBkZWxpdmVyIHRocm91Z2hwdXQgdGhhdCBjYW4gY29tcGV0ZSB3aXRoXFxyXFxuYW55IG9mIHRoZSBleGlzdGluZyBsb2cgYmFzZWQgbWVzc2FnaW5nIHN5c3RlbXMuIFN0cmVhbXMgaGF2ZSBiZWVuIGRlc2lnbmVkXFxyXFxud2l0aCBwZXJmb3JtYW5jZSBhcyBhIG1ham9yIGdvYWwuXCJcbiAgICAgICAgfSksIFwiXFxuXCJdXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJMYXJnZSBiYWNrbG9nc1wiXG4gICAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJNb3N0IFJhYmJpdE1RIHF1ZXVlcyBhcmUgZGVzaWduZWQgdG8gY29udmVyZ2UgdG93YXJkcyB0aGUgZW1wdHkgc3RhdGUgYW5kIGFyZVxcclxcbm9wdGltaXNlZCBhcyBzdWNoIGFuZCBjYW4gcGVyZm9ybSB3b3JzZSB3aGVuIHRoZXJlIGFyZSBtaWxsaW9ucyBvZiBtZXNzYWdlcyBvbiBhXFxyXFxuZ2l2ZW4gcXVldWUuIFN0cmVhbXMgYXJlIGRlc2lnbmVkIHRvIHN0b3JlIGxhcmdlciBhbW91bnRzIG9mIGRhdGEgaW4gYW5cXHJcXG5lZmZpY2llbnQgbWFubmVyIHdpdGggbWluaW1hbCBpbi1tZW1vcnkgb3ZlcmhlYWQuXCJcbiAgICAgICAgfSksIFwiXFxuXCJdXG4gICAgICB9KSwgXCJcXG5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwidXNhZ2VcIixcbiAgICAgIGNoaWxkcmVuOiBcIkhvdyB0byBVc2UgUmFiYml0TVEgU3RyZWFtc1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJBbiBBTVFQIDAuOS4xIGNsaWVudCBsaWJyYXJ5IHRoYXQgY2FuIHNwZWNpZnkgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vcXVldWVzI29wdGlvbmFsLWFyZ3VtZW50c1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJvcHRpb25hbCBxdWV1ZSBhbmQgY29uc3VtZXIgYXJndW1lbnRzXCJcbiAgICAgIH0pLCBcIlxcclxcbndpbGwgYmUgYWJsZSB0byB1c2Ugc3RyZWFtcyBhcyByZWd1bGFyIEFNUVAgMC45LjEgcXVldWVzLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkp1c3QgbGlrZSBxdWV1ZXMsIHN0cmVhbXMgaGF2ZSB0byBiZSBkZWNsYXJlZCBmaXJzdC5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgzLCB7XG4gICAgICBpZDogXCJkZWNsYXJpbmdcIixcbiAgICAgIGNoaWxkcmVuOiBcIkRlY2xhcmluZyBhIFJhYmJpdE1RIFN0cmVhbVwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJUbyBkZWNsYXJlIGEgc3RyZWFtLCBzZXQgdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwieC1xdWV1ZS10eXBlXCJcbiAgICAgIH0pLCBcIiBxdWV1ZSBhcmd1bWVudCB0byBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInN0cmVhbVwiXG4gICAgICB9KSwgXCJcXHJcXG4odGhlIGRlZmF1bHQgaXMgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJjbGFzc2ljXCJcbiAgICAgIH0pLCBcIikuIFRoaXMgYXJndW1lbnQgbXVzdCBiZSBwcm92aWRlZCBieSBhIGNsaWVudFxcclxcbmF0IGRlY2xhcmF0aW9uIHRpbWU7IGl0IGNhbm5vdCBiZSBzZXQgb3IgY2hhbmdlZCB1c2luZyBhIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL3BvbGljaWVzXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInBvbGljeVwiXG4gICAgICB9KSwgXCIuXFxyXFxuVGhpcyBpcyBiZWNhdXNlIHBvbGljeSBkZWZpbml0aW9uIG9yIGFwcGxpY2FibGUgcG9saWN5IGNhbiBiZSBjaGFuZ2VkIGR5bmFtaWNhbGx5IGJ1dFxcclxcbnF1ZXVlIHR5cGUgY2Fubm90LiBJdCBtdXN0IGJlIHNwZWNpZmllZCBhdCB0aGUgdGltZSBvZiBkZWNsYXJhdGlvbi5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlRoZSBmb2xsb3dpbmcgc25pcHBldCBzaG93cyBob3cgdG8gY3JlYXRlIGEgc3RyZWFtIHdpdGggdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIvY2xpZW50LWxpYnJhcmllcy9qYXZhLWFwaS1ndWlkZVwiLFxuICAgICAgICBjaGlsZHJlbjogXCJBTVFQIDAuOS4xIEphdmEgY2xpZW50XCJcbiAgICAgIH0pLCBcIjpcIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWphdmFcIixcbiAgICAgICAgY2hpbGRyZW46IFwiQ29ubmVjdGlvbkZhY3RvcnkgZmFjdG9yeSA9IG5ldyBDb25uZWN0aW9uRmFjdG9yeSgpO1xcclxcbkNvbm5lY3Rpb24gY29ubmVjdGlvbiA9IGZhY3RvcnkubmV3Q29ubmVjdGlvbigpO1xcclxcbkNoYW5uZWwgY2hhbm5lbCA9IGNvbm5lY3Rpb24uY3JlYXRlQ2hhbm5lbCgpO1xcclxcbmNoYW5uZWwucXVldWVEZWNsYXJlKFxcclxcbiAgXFxcIm15LXN0cmVhbVxcXCIsXFxyXFxuICB0cnVlLCAgICAgICAgIC8vIGR1cmFibGVcXHJcXG4gIGZhbHNlLCBmYWxzZSwgLy8gbm90IGV4Y2x1c2l2ZSwgbm90IGF1dG8tZGVsZXRlXFxyXFxuICBDb2xsZWN0aW9ucy5zaW5nbGV0b25NYXAoXFxcIngtcXVldWUtdHlwZVxcXCIsIFxcXCJzdHJlYW1cXFwiKVxcclxcbik7XFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJEZWNsYXJpbmcgYSBxdWV1ZSB3aXRoIGFuIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwieC1xdWV1ZS10eXBlXCJcbiAgICAgIH0pLCBcIiBhcmd1bWVudCBzZXQgdG8gXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJzdHJlYW1cIlxuICAgICAgfSksIFwiIHdpbGwgY3JlYXRlIGEgc3RyZWFtXFxyXFxud2l0aCBhIHJlcGxpY2Egb24gZWFjaCBjb25maWd1cmVkIFJhYmJpdE1RIG5vZGUuIFN0cmVhbXMgYXJlIHF1b3J1bSBzeXN0ZW1zXFxyXFxuc28gdW5ldmVuIGNsdXN0ZXIgc2l6ZXMgaXMgc3Ryb25nbHkgcmVjb21tZW5kZWQuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiQSBzdHJlYW0gcmVtYWlucyBhbiBBTVFQIDAuOS4xIHF1ZXVlLCBzbyBpdCBjYW4gYmUgYm91bmQgdG8gYW55IGV4Y2hhbmdlIGFmdGVyIGl0cyBjcmVhdGlvbixcXHJcXG5qdXN0IGFzIGFueSBvdGhlciBSYWJiaXRNUSBxdWV1ZS5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiSWYgZGVjbGFyaW5nIHVzaW5nIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL21hbmFnZW1lbnRcIixcbiAgICAgICAgY2hpbGRyZW46IFwibWFuYWdlbWVudCBVSVwiXG4gICAgICB9KSwgXCIsIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInN0cmVhbVwiXG4gICAgICB9KSwgXCIgdHlwZSBtdXN0IGJlIHNwZWNpZmllZCB1c2luZ1xcclxcbnRoZSBxdWV1ZSB0eXBlIGRyb3AgZG93biBtZW51LlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiU3RyZWFtcyBzdXBwb3J0IGFkZGl0aW9uYWwgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vcXVldWVzI29wdGlvbmFsLWFyZ3VtZW50c1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJxdWV1ZSBhcmd1bWVudHNcIlxuICAgICAgfSksIFwiXFxyXFxudGhhdCBhbHNvIGNhbiBiZSBjb25maWd1cmVkIHVzaW5nIGEgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vcG9saWNpZXNcIixcbiAgICAgICAgY2hpbGRyZW46IFwicG9saWN5XCJcbiAgICAgIH0pXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy51bCwge1xuICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJ4LW1heC1sZW5ndGgtYnl0ZXNcIlxuICAgICAgICB9KVxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJTZXRzIHRoZSBtYXhpbXVtIHNpemUgb2YgdGhlIHN0cmVhbSBpbiBieXRlcy4gU2VlIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIjcmV0ZW50aW9uXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInJldGVudGlvblwiXG4gICAgICB9KSwgXCIuIERlZmF1bHQ6IG5vdCBzZXQuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnVsLCB7XG4gICAgICBjaGlsZHJlbjogW1wiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIngtbWF4LWFnZVwiXG4gICAgICAgIH0pXG4gICAgICB9KSwgXCJcXG5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlNldHMgdGhlIG1heGltdW0gYWdlIG9mIHRoZSBzdHJlYW0uIFNlZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiI3JldGVudGlvblwiLFxuICAgICAgICBjaGlsZHJlbjogXCJyZXRlbnRpb25cIlxuICAgICAgfSksIFwiLiBEZWZhdWx0OiBub3Qgc2V0LlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy51bCwge1xuICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJ4LXN0cmVhbS1tYXgtc2VnbWVudC1zaXplLWJ5dGVzXCJcbiAgICAgICAgfSlcbiAgICAgIH0pLCBcIlxcblwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkEgc3RyZWFtIGlzIGRpdmlkZWQgdXAgaW50byBmaXhlZCBzaXplIHNlZ21lbnQgZmlsZXMgb24gZGlzay5cXHJcXG5UaGlzIHNldHRpbmcgY29udHJvbHMgdGhlIHNpemUgaW4gYnl0ZXMgb2YgdGhlc2UuXFxyXFxuRGVmYXVsdDogNTAwMDAwMDAwIGJ5dGVzLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnVsLCB7XG4gICAgICBjaGlsZHJlbjogW1wiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIngtc3RyZWFtLWZpbHRlci1zaXplLWJ5dGVzXCJcbiAgICAgICAgfSlcbiAgICAgIH0pLCBcIlxcblwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVGhlIHNpemUgaW4gYnl0ZXMgb2YgdGhlIEJsb29tIGZpbHRlciB1c2VkIGZvciBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiI2ZpbHRlcmluZ1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJmaWx0ZXJpbmdcIlxuICAgICAgfSksIFwiLlxcclxcblRoZSB2YWx1ZSBtdXN0IGJlIGJldHdlZW4gMTYgYW5kIDI1NS5cXHJcXG5EZWZhdWx0OiAxNiBieXRlcy5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIldoaWxlIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIngtc3RyZWFtLW1heC1zZWdtZW50LXNpemUtYnl0ZXNcIlxuICAgICAgfSksIFwiIGFuZCBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIngtc3RyZWFtLWZpbHRlci1zaXplLWJ5dGVzXCJcbiAgICAgIH0pLCBcIiBhcmd1bWVudHMgY2FuIGJlIGNvbmZpZ3VyZWQgdmlhIGEgcG9saWN5LCB0aGV5IHdpbGwgXCIsIF9qc3goX2NvbXBvbmVudHMuZW0sIHtcbiAgICAgICAgY2hpbGRyZW46IFwib25seVwiXG4gICAgICB9KSwgXCIgYmUgYXBwbGllZCB0byB0aGUgc3RyZWFtIGlmIHRoZSBwb2xpY3kgaXMgc2V0IChleGlzdHMpIGF0IHN0cmVhbSBkZWNsYXJhdGlvbiB0aW1lLlxcclxcbklmIHRoZXNlIGFyZ3VtZW50cyBhcmUgY2hhbmdlZCBmb3IgYSBtYXRjaGluZyBidXQgcHJlLWV4aXN0aW5nIHN0cmVhbSB0aGV5IFwiLCBfanN4KF9jb21wb25lbnRzLnN0cm9uZywge1xuICAgICAgICBjaGlsZHJlbjogXCJ3aWxsIG5vdCBiZSBjaGFuZ2VkXCJcbiAgICAgIH0pLCBcIiBldmVuIGlmIHRoZSBlZmZlY3RpdmUgcG9saWN5IG9mIHRoZSBxdWV1ZSByZWNvcmQgbWF5IGluZGljYXRlIGl0IGlzLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkhlbmNlIGl0IGlzIGJlc3QgdG8gb25seSBjb25maWd1cmUgdGhlc2UgdmlhIHF1ZXVlIGFyZ3VtZW50cy5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIlRoZSBmb2xsb3dpbmcgZXhhbXBsZSBpbiBKYXZhIGRlbW9uc3RyYXRlcyBob3cgdGhlIGFyZ3VtZW50IGNhbiBiZSBzZXRcXHJcXG5hdCBzdHJlYW0gZGVjbGFyYXRpb24gdGltZSBpbiBhcHBsaWNhdGlvbiBjb2RlOlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1qYXZhXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIk1hcDxTdHJpbmcsIE9iamVjdD4gYXJndW1lbnRzID0gbmV3IEhhc2hNYXA8PigpO1xcclxcbmFyZ3VtZW50cy5wdXQoXFxcIngtcXVldWUtdHlwZVxcXCIsIFxcXCJzdHJlYW1cXFwiKTtcXHJcXG4vLyBtYXhpbXVtIHN0cmVhbSBzaXplOiAyMCBHQlxcclxcbmFyZ3VtZW50cy5wdXQoXFxcIngtbWF4LWxlbmd0aC1ieXRlc1xcXCIsIDIwXzAwMF8wMDBfMDAwKTtcXHJcXG4vLyBzaXplIG9mIHNlZ21lbnQgZmlsZXM6IDEwMCBNQlxcclxcbmFyZ3VtZW50cy5wdXQoXFxcIngtc3RyZWFtLW1heC1zZWdtZW50LXNpemUtYnl0ZXNcXFwiLCAxMDBfMDAwXzAwMCk7XFxyXFxuLy8gc2l6ZSBvZiBzdHJlYW0gYmxvb20gZmlsdGVyOiAzMlxcclxcbmFyZ3VtZW50cy5wdXQoXFxcIngtc3RyZWFtLWZpbHRlci1zaXplLWJ5dGVzXFxcIiwgMzIpO1xcclxcblxcclxcbmNoYW5uZWwucXVldWVEZWNsYXJlKFxcclxcbiAgXFxcIm15LXN0cmVhbVxcXCIsXFxyXFxuICB0cnVlLCAgICAgICAgIC8vIGR1cmFibGVcXHJcXG4gIGZhbHNlLCBmYWxzZSwgLy8gbm90IGV4Y2x1c2l2ZSwgbm90IGF1dG8tZGVsZXRlXFxyXFxuICBhcmd1bWVudHNcXHJcXG4pO1xcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgzLCB7XG4gICAgICBpZDogXCJjbGllbnQtb3BlcmF0aW9uc1wiLFxuICAgICAgY2hpbGRyZW46IFwiQ2xpZW50IE9wZXJhdGlvbnNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmg0LCB7XG4gICAgICBpZDogXCJjb25zdW1pbmdcIixcbiAgICAgIGNoaWxkcmVuOiBcIkNvbnN1bWluZ1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJBcyBzdHJlYW1zIG5ldmVyIGRlbGV0ZSBhbnkgbWVzc2FnZXMsIGFueSBjb25zdW1lciBjYW4gc3RhcnQgcmVhZGluZy9jb25zdW1pbmdcXHJcXG5mcm9tIGFueSBwb2ludCBpbiB0aGUgbG9nLiBUaGlzIGlzIGNvbnRyb2xsZWQgYnkgdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwieC1zdHJlYW0tb2Zmc2V0XCJcbiAgICAgIH0pLCBcIiBjb25zdW1lciBhcmd1bWVudC5cXHJcXG5JZiBpdCBpcyB1bnNwZWNpZmllZCB0aGUgY29uc3VtZXIgd2lsbCBzdGFydCByZWFkaW5nIGZyb20gdGhlIG5leHQgb2Zmc2V0IHdyaXR0ZW5cXHJcXG50byB0aGUgbG9nIGFmdGVyIHRoZSBjb25zdW1lciBzdGFydHMuIFRoZSBmb2xsb3dpbmcgdmFsdWVzIGFyZSBzdXBwb3J0ZWQ6XCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnVsLCB7XG4gICAgICBjaGlsZHJlbjogW1wiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiZmlyc3RcIlxuICAgICAgICB9KSwgXCIgLSBzdGFydCBmcm9tIHRoZSBmaXJzdCBhdmFpbGFibGUgbWVzc2FnZSBpbiB0aGUgbG9nXCJdXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJsYXN0XCJcbiAgICAgICAgfSksIFwiIC0gdGhpcyBzdGFydHMgcmVhZGluZyBmcm9tIHRoZSBsYXN0IHdyaXR0ZW4gXFxcImNodW5rXFxcIiBvZiBtZXNzYWdlcyBcIiwgX2pzeChfY29tcG9uZW50cy5lbSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIihhIGNodW5rXFxyXFxuaXMgdGhlIHN0b3JhZ2UgYW5kIHRyYW5zcG9ydGF0aW9uIHVuaXQgdXNlZCBpbiBzdHJlYW1zLCBwdXQgc2ltcGx5IGl0IGlzIGEgYmF0Y2hcXHJcXG5vZiBtZXNzYWdlcyBtYWRlIG9mIHNldmVyYWwgdG8gYSBmZXcgdGhvdXNhbmRzIG9mIG1lc3NhZ2VzLCBkZXBlbmRpbmcgb24gdGhlIGluZ3Jlc3MpXCJcbiAgICAgICAgfSldXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJuZXh0XCJcbiAgICAgICAgfSksIFwiIC0gc2FtZSBhcyBub3Qgc3BlY2lmeWluZyBhbnkgb2Zmc2V0XCJdXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJPZmZzZXQgLSBhIG51bWVyaWNhbCB2YWx1ZSBzcGVjaWZ5aW5nIGFuIGV4YWN0IG9mZnNldCB0byBhdHRhY2ggdG8gdGhlIGxvZyBhdC5cXHJcXG5JZiB0aGlzIG9mZnNldCBkb2VzIG5vdCBleGlzdCBpdCB3aWxsIGNsYW1wIHRvIGVpdGhlciB0aGUgc3RhcnQgb3IgZW5kIG9mIHRoZSBsb2cgcmVzcGVjdGl2ZWx5LlwiXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJUaW1lc3RhbXAgLSBhIHRpbWVzdGFtcCB2YWx1ZSBzcGVjaWZ5aW5nIHRoZSBwb2ludCBpbiB0aW1lIHRvIGF0dGFjaCB0byB0aGUgbG9nIGF0Llxcclxcbkl0IHdpbGwgY2xhbXAgdG8gdGhlIGNsb3Nlc3Qgb2Zmc2V0LCBpZiB0aGUgdGltZXN0YW1wIGlzIG91dCBvZiByYW5nZSBmb3IgdGhlIHN0cmVhbSBpdCB3aWxsIGNsYW1wIGVpdGhlciB0aGUgc3RhcnQgb3IgZW5kIG9mIHRoZSBsb2cgcmVzcGVjdGl2ZWx5LlxcclxcbldpdGggQU1RUCAwLjkuMSwgdGhlIHRpbWVzdGFtcCB1c2VkIGlzIFBPU0lYIHRpbWUgd2l0aCBhbiBhY2N1cmFjeSBvZiBvbmUgc2Vjb25kLCB0aGF0IGlzIHRoZSBudW1iZXIgb2Ygc2Vjb25kcyBzaW5jZSAwMDowMDowMCBVVEMsIDE5NzAtMDEtMDEuXFxyXFxuQmUgYXdhcmUgY29uc3VtZXJzIGNhbiByZWNlaXZlIG1lc3NhZ2VzIHB1Ymxpc2hlZCBhIGJpdCBiZWZvcmUgdGhlIHNwZWNpZmllZCB0aW1lc3RhbXAuXCJcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW1wiSW50ZXJ2YWwgLSBhIHN0cmluZyB2YWx1ZSBzcGVjaWZ5aW5nIHRoZSB0aW1lIGludGVydmFsIHJlbGF0aXZlIHRvIGN1cnJlbnQgdGltZSB0byBhdHRhY2ggdGhlIGxvZyBhdC4gVXNlcyB0aGUgc2FtZSBzcGVjaWZpY2F0aW9uIGFzIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJ4LW1heC1hZ2VcIlxuICAgICAgICB9KSwgXCIgKHNlZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIjcmV0ZW50aW9uXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwiUmV0ZW50aW9uXCJcbiAgICAgICAgfSksIFwiKVwiXVxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJUaGUgZm9sbG93aW5nIHNuaXBwZXQgc2hvd3MgaG93IHRvIHVzZSB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJmaXJzdFwiXG4gICAgICB9KSwgXCIgb2Zmc2V0IHNwZWNpZmljYXRpb246XCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1qYXZhXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImNoYW5uZWwuYmFzaWNRb3MoMTAwKTsgLy8gUW9TIG11c3QgYmUgc3BlY2lmaWVkXFxyXFxuY2hhbm5lbC5iYXNpY0NvbnN1bWUoXFxyXFxuICBcXFwibXktc3RyZWFtXFxcIixcXHJcXG4gIGZhbHNlLFxcclxcbiAgQ29sbGVjdGlvbnMuc2luZ2xldG9uTWFwKFxcXCJ4LXN0cmVhbS1vZmZzZXRcXFwiLCBcXFwiZmlyc3RcXFwiKSwgLy8gXFxcImZpcnN0XFxcIiBvZmZzZXQgc3BlY2lmaWNhdGlvblxcclxcbiAgKGNvbnN1bWVyVGFnLCBtZXNzYWdlKSAtPiB7XFxyXFxuICAgIC8vIG1lc3NhZ2UgcHJvY2Vzc2luZ1xcclxcbiAgICAvLyAuLi5cXHJcXG4gICBjaGFubmVsLmJhc2ljQWNrKG1lc3NhZ2UuZ2V0RW52ZWxvcGUoKS5nZXREZWxpdmVyeVRhZygpLCBmYWxzZSk7IC8vIGFjayBpcyByZXF1aXJlZFxcclxcbiAgfSxcXHJcXG4gIGNvbnN1bWVyVGFnIC0+IHsgfSk7XFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiVGhlIGZvbGxvd2luZyBzbmlwcGV0IHNob3dzIGhvdyB0byBzcGVjaWZ5IGEgc3BlY2lmaWMgb2Zmc2V0IHRvIGNvbnN1bWUgZnJvbTpcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtamF2YVwiLFxuICAgICAgICBjaGlsZHJlbjogXCJjaGFubmVsLmJhc2ljUW9zKDEwMCk7IC8vIFFvUyBtdXN0IGJlIHNwZWNpZmllZFxcclxcbmNoYW5uZWwuYmFzaWNDb25zdW1lKFxcclxcbiAgXFxcIm15LXN0cmVhbVxcXCIsXFxyXFxuICBmYWxzZSxcXHJcXG4gIENvbGxlY3Rpb25zLnNpbmdsZXRvbk1hcChcXFwieC1zdHJlYW0tb2Zmc2V0XFxcIiwgNTAwMCksIC8vIG9mZnNldCB2YWx1ZVxcclxcbiAgKGNvbnN1bWVyVGFnLCBtZXNzYWdlKSAtPiB7XFxyXFxuICAgIC8vIG1lc3NhZ2UgcHJvY2Vzc2luZ1xcclxcbiAgICAvLyAuLi5cXHJcXG4gICBjaGFubmVsLmJhc2ljQWNrKG1lc3NhZ2UuZ2V0RW52ZWxvcGUoKS5nZXREZWxpdmVyeVRhZygpLCBmYWxzZSk7IC8vIGFjayBpcyByZXF1aXJlZFxcclxcbiAgfSxcXHJcXG4gIGNvbnN1bWVyVGFnIC0+IHsgfSk7XFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiVGhlIGZvbGxvd2luZyBzbmlwcGV0IHNob3dzIGhvdyB0byBzcGVjaWZ5IGEgc3BlY2lmaWMgdGltZXN0YW1wIHRvIGNvbnN1bWUgZnJvbTpcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtamF2YVwiLFxuICAgICAgICBjaGlsZHJlbjogXCIvLyBhbiBob3VyIGFnb1xcclxcbkRhdGUgdGltZXN0YW1wID0gbmV3IERhdGUoU3lzdGVtLmN1cnJlbnRUaW1lTWlsbGlzKCkgLSA2MCAqIDYwICogMV8wMDApXFxyXFxuY2hhbm5lbC5iYXNpY1FvcygxMDApOyAvLyBRb1MgbXVzdCBiZSBzcGVjaWZpZWRcXHJcXG5jaGFubmVsLmJhc2ljQ29uc3VtZShcXHJcXG4gIFxcXCJteS1zdHJlYW1cXFwiLFxcclxcbiAgZmFsc2UsXFxyXFxuICBDb2xsZWN0aW9ucy5zaW5nbGV0b25NYXAoXFxcIngtc3RyZWFtLW9mZnNldFxcXCIsIHRpbWVzdGFtcCksIC8vIHRpbWVzdGFtcCBvZmZzZXRcXHJcXG4gIChjb25zdW1lclRhZywgbWVzc2FnZSkgLT4ge1xcclxcbiAgICAvLyBtZXNzYWdlIHByb2Nlc3NpbmdcXHJcXG4gICAgLy8gLi4uXFxyXFxuICAgY2hhbm5lbC5iYXNpY0FjayhtZXNzYWdlLmdldEVudmVsb3BlKCkuZ2V0RGVsaXZlcnlUYWcoKSwgZmFsc2UpOyAvLyBhY2sgaXMgcmVxdWlyZWRcXHJcXG4gIH0sXFxyXFxuICBjb25zdW1lclRhZyAtPiB7IH0pO1xcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmg0LCB7XG4gICAgICBpZDogXCJvdGhlci1zdHJlYW0tb3BlcmF0aW9uc1wiLFxuICAgICAgY2hpbGRyZW46IFwiT3RoZXIgU3RyZWFtIE9wZXJhdGlvbnNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIlRoZSBmb2xsb3dpbmcgb3BlcmF0aW9ucyBjYW4gYmUgdXNlZCBpbiBhIHNpbWlsYXIgd2F5IHRvIGNsYXNzaWMgYW5kIHF1b3J1bSBxdWV1ZXNcXHJcXG5idXQgc29tZSBoYXZlIHNvbWUgcXVldWUgc3BlY2lmaWMgYmVoYXZpb3VyLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnVsLCB7XG4gICAgICBjaGlsZHJlbjogW1wiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiI2RlY2xhcmluZ1wiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIkRlY2xhcmF0aW9uXCJcbiAgICAgICAgfSlcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIlF1ZXVlIGRlbGV0aW9uXCJcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIi4vY29uZmlybXMjcHVibGlzaGVyLWNvbmZpcm1zXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwiUHVibGlzaGVyIGNvbmZpcm1zXCJcbiAgICAgICAgfSlcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiLi9jb25zdW1lcnNcIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJDb25zdW1wdGlvblwiXG4gICAgICAgIH0pLCBcIiAoc3Vic2NyaXB0aW9uKTogY29uc3VtcHRpb24gcmVxdWlyZXMgUW9TXFxyXFxucHJlZmV0Y2ggdG8gYmUgc2V0LiBUaGUgYWNrcyB3b3JrcyBhcyBhIGNyZWRpdCBtZWNoYW5pc20gdG8gYWR2YW5jZSB0aGUgY3VycmVudFxcclxcbm9mZnNldCBvZiB0aGUgY29uc3VtZXIuXCJdXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtcIlNldHRpbmcgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiI2dsb2JhbC1xb3NcIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJRb1MgcHJlZmV0Y2hcIlxuICAgICAgICB9KSwgXCIgZm9yIGNvbnN1bWVyc1wiXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIuL2NvbmZpcm1zXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwiQ29uc3VtZXIgYWNrbm93bGVkZ2VtZW50c1wiXG4gICAgICAgIH0pLCBcIiAoa2VlcCBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIjZ2xvYmFsLXFvc1wiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIlFvUyBQcmVmZXRjaCBMaW1pdGF0aW9uc1wiXG4gICAgICAgIH0pLCBcIiBpbiBtaW5kKVwiXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFwiQ2FuY2VsbGF0aW9uIG9mIGNvbnN1bWVyc1wiXG4gICAgICB9KSwgXCJcXG5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwic2luZ2xlLWFjdGl2ZS1jb25zdW1lclwiLFxuICAgICAgY2hpbGRyZW46IFwiU2luZ2xlIEFjdGl2ZSBDb25zdW1lciBGZWF0dXJlIGZvciBTdHJlYW1zXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlNpbmdsZSBhY3RpdmUgY29uc3VtZXIgZm9yIHN0cmVhbXMgaXMgYSBmZWF0dXJlIGF2YWlsYWJsZSBpbiBSYWJiaXRNUSAzLjExIGFuZCBtb3JlLlxcclxcbkl0IHByb3ZpZGVzIFwiLCBfanN4KF9jb21wb25lbnRzLmVtLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcImV4Y2x1c2l2ZSBjb25zdW1wdGlvblwiXG4gICAgICB9KSwgXCIgYW5kIFwiLCBfanN4KF9jb21wb25lbnRzLmVtLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcImNvbnN1bXB0aW9uIGNvbnRpbnVpdHlcIlxuICAgICAgfSksIFwiIG9uIGEgc3RyZWFtLlxcclxcbldoZW4gc2V2ZXJhbCBjb25zdW1lciBpbnN0YW5jZXMgc2hhcmluZyB0aGUgc2FtZSBzdHJlYW0gYW5kIG5hbWUgZW5hYmxlIHNpbmdsZSBhY3RpdmUgY29uc3VtZXIsIG9ubHkgb25lIG9mIHRoZXNlIGluc3RhbmNlcyB3aWxsIGJlIGFjdGl2ZSBhdCBhIHRpbWUgYW5kIHNvIHdpbGwgcmVjZWl2ZSBtZXNzYWdlcy5cXHJcXG5UaGUgb3RoZXIgaW5zdGFuY2VzIHdpbGwgYmUgaWRsZS5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJUaGUgc2luZ2xlIGFjdGl2ZSBjb25zdW1lciBmZWF0dXJlIHByb3ZpZGVzIDIgYmVuZWZpdHM6XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMudWwsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJNZXNzYWdlcyBhcmUgcHJvY2Vzc2VkIGluIG9yZGVyOiB0aGVyZSBpcyBvbmx5IG9uZSBjb25zdW1lciBhdCBhIHRpbWUuXCJcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIkNvbnN1bXB0aW9uIGNvbnRpbnVpdHkgaXMgbWFpbnRhaW5lZDogYSBjb25zdW1lciBmcm9tIHRoZSBncm91cCB3aWxsIHRha2Ugb3ZlciBpZiB0aGUgYWN0aXZlIG9uZSBzdG9wcyBvciBjcmFzaGVzLlwiXG4gICAgICB9KSwgXCJcXG5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkEgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi9ibG9nLzIwMjIvMDcvMDUvcmFiYml0bXEtMy0xMS1mZWF0dXJlLXByZXZpZXctc2luZ2xlLWFjdGl2ZS1jb25zdW1lci1mb3Itc3RyZWFtc1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJibG9nIHBvc3RcIlxuICAgICAgfSksIFwiIHByb3ZpZGVzIG1vcmUgZGV0YWlscyBvbiBzaW5nbGUgYWN0aXZlIGNvbnN1bWVyIGZvciBzdHJlYW1zLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgzLCB7XG4gICAgICBpZDogXCJzdXBlci1zdHJlYW1zXCIsXG4gICAgICBjaGlsZHJlbjogXCJTdXBlciBTdHJlYW1zXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlN1cGVyIHN0cmVhbXMgYXJlIGEgd2F5IHRvIHNjYWxlIG91dCBieSBwYXJ0aXRpb25pbmcgYSBsYXJnZSBzdHJlYW0gaW50byBzbWFsbGVyIHN0cmVhbXMuXFxyXFxuVGhleSBpbnRlZ3JhdGUgd2l0aCBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiI3NpbmdsZS1hY3RpdmUtY29uc3VtZXJcIixcbiAgICAgICAgY2hpbGRyZW46IFwic2luZ2xlIGFjdGl2ZSBjb25zdW1lclwiXG4gICAgICB9KSwgXCIgdG8gcHJlc2VydmUgbWVzc2FnZSBvcmRlciB3aXRoaW4gYSBwYXJ0aXRpb24uXFxyXFxuU3VwZXIgc3RyZWFtcyBhcmUgYXZhaWxhYmxlIHN0YXJ0aW5nIHdpdGggUmFiYml0TVEgMy4xMS5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJBIHN1cGVyIHN0cmVhbSBpcyBhIGxvZ2ljYWwgc3RyZWFtIG1hZGUgb2YgaW5kaXZpZHVhbCwgcmVndWxhciBzdHJlYW1zLlxcclxcbkl0IGlzIGEgd2F5IHRvIHNjYWxlIG91dCBwdWJsaXNoaW5nIGFuZCBjb25zdW1pbmcgd2l0aCBSYWJiaXRNUSBTdHJlYW1zOiBhIGxhcmdlIGxvZ2ljYWwgc3RyZWFtIGlzIGRpdmlkZWQgaW50byBwYXJ0aXRpb24gc3RyZWFtcywgc3BsaXR0aW5nIHVwIHRoZSBzdG9yYWdlIGFuZCB0aGUgdHJhZmZpYyBvbiBzZXZlcmFsIGNsdXN0ZXIgbm9kZXMuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkEgc3VwZXIgc3RyZWFtIHJlbWFpbnMgYSBsb2dpY2FsIGVudGl0eTogYXBwbGljYXRpb25zIHNlZSBpdCBhcyBvbmUg4oCcbGFyZ2XigJ0gc3RyZWFtLCB0aGFua3MgdG8gdGhlIHNtYXJ0bmVzcyBvZiBjbGllbnQgbGlicmFyaWVzLlxcclxcblRoZSB0b3BvbG9neSBvZiBhIHN1cGVyIHN0cmVhbSBpcyBiYXNlZCBvbiB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi90dXRvcmlhbHMvYW1xcC1jb25jZXB0c1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJBTVFQIDAuOS4xIG1vZGVsXCJcbiAgICAgIH0pLCBcIiwgdGhhdCBpcyBleGNoYW5nZSwgcXVldWVzLCBhbmQgYmluZGluZ3MgYmV0d2VlbiB0aGVtLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiSXQgaXMgcG9zc2libGUgdG8gY3JlYXRlIHRoZSB0b3BvbG9neSBvZiBhIHN1cGVyIHN0cmVhbSB3aXRoIGFueSBBTVFQIDAuOS4xIGxpYnJhcnkgb3Igd2l0aCB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vbWFuYWdlbWVudFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJtYW5hZ2VtZW50IHBsdWdpblwiXG4gICAgICB9KSwgXCIsIGl0IHJlcXVpcmVzIHRvIGNyZWF0ZSBhIGRpcmVjdCBleGNoYW5nZSwgdGhlIFxcXCJwYXJ0aXRpb25cXFwiIHN0cmVhbXMsIGFuZCBiaW5kIHRoZW0gdG9nZXRoZXIuXFxyXFxuSXQgbWF5IGJlIGVhc2llciB0byB1c2UgdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXEtc3RyZWFtcyBhZGRfc3VwZXJfc3RyZWFtXCJcbiAgICAgIH0pLCBcIiBjb21tYW5kIHRob3VnaC5cXHJcXG5IZXJlIGlzIGhvdyB0byB1c2UgaXQgdG8gY3JlYXRlIGFuIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiaW52b2ljZXNcIlxuICAgICAgfSksIFwiIHN1cGVyIHN0cmVhbSB3aXRoIDMgcGFydGl0aW9uczpcIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWJhc2hcIixcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXEtc3RyZWFtcyBhZGRfc3VwZXJfc3RyZWFtIGludm9pY2VzIC0tcGFydGl0aW9ucyAzXFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJVc2UgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS1zdHJlYW1zIGFkZF9zdXBlcl9zdHJlYW0gLS1oZWxwXCJcbiAgICAgIH0pLCBcIiB0byBsZWFybiBtb3JlIGFib3V0IHRoZSBjb21tYW5kLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIlN1cGVyIHN0cmVhbXMgYWRkIGNvbXBsZXhpdHkgY29tcGFyZWQgdG8gaW5kaXZpZHVhbCBzdHJlYW1zLCBzbyB0aGV5IHNob3VsZCBub3QgYmUgY29uc2lkZXJlZCB0aGUgZGVmYXVsdCBzb2x1dGlvbiBmb3IgYWxsIHVzZSBjYXNlcyBpbnZvbHZpbmcgc3RyZWFtcy5cXHJcXG5Db25zaWRlciB1c2luZyBzdXBlciBzdHJlYW1zIG9ubHkgaWYgeW91IGFyZSBzdXJlIHlvdSByZWFjaGVkIHRoZSBsaW1pdHMgb2YgaW5kaXZpZHVhbCBzdHJlYW1zLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJBIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIvYmxvZy8yMDIyLzA3LzEzL3JhYmJpdG1xLTMtMTEtZmVhdHVyZS1wcmV2aWV3LXN1cGVyLXN0cmVhbXNcIixcbiAgICAgICAgY2hpbGRyZW46IFwiYmxvZyBwb3N0XCJcbiAgICAgIH0pLCBcIiBwcm92aWRlcyBhbiBvdmVydmlldyBvZiBzdXBlciBzdHJlYW1zLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgzLCB7XG4gICAgICBpZDogXCJmaWx0ZXJpbmdcIixcbiAgICAgIGNoaWxkcmVuOiBcIkZpbHRlcmluZ1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiUmFiYml0TVEgU3RyZWFtIHByb3ZpZGVzIGEgc2VydmVyLXNpZGUgZmlsdGVyaW5nIGZlYXR1cmUgdGhhdCBhdm9pZHMgcmVhZGluZyBhbGwgdGhlIG1lc3NhZ2VzIG9mIGEgc3RyZWFtIGFuZCBmaWx0ZXJpbmcgb25seSBvbiB0aGUgY2xpZW50IHNpZGUuXFxyXFxuVGhpcyBoZWxwcyB0byBzYXZlIG5ldHdvcmsgYmFuZHdpZHRoIHdoZW4gYSBjb25zdW1pbmcgYXBwbGljYXRpb24gbmVlZHMgb25seSBhIHN1YnNldCBvZiBtZXNzYWdlcywgZS5nLiB0aGUgbWVzc2FnZXMgZnJvbSBhIGdpdmVuIGdlb2dyYXBoaWNhbCByZWdpb24uXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlN0cmVhbSBmaWx0ZXJpbmcgaXMgc3VwcG9ydGVkIHdpdGggdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL3N0cmVhbVwiLFxuICAgICAgICBjaGlsZHJlbjogXCJzdHJlYW0gcHJvdG9jb2xcIlxuICAgICAgfSksIFwiLCBBTVFQIDAuOS4xLCBhbmQgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vc3RvbXAjc3RyZWFtLXN1cHBvcnRcIixcbiAgICAgICAgY2hpbGRyZW46IFwiU1RPTVBcIlxuICAgICAgfSksIFwiLlxcclxcbkV4YW1wbGVzIHdpbGwgYmUgdXNpbmcgQU1RUCAwLjkuMS5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkEgbWVzc2FnZSBtdXN0IGJlIHB1Ymxpc2hlZCB3aXRoIGFuIGFzc29jaWF0ZWQgZmlsdGVyIHZhbHVlIGZvciB0aGUgZmlsdGVyaW5nIGZlYXR1cmUgdG8gd29yay5cXHJcXG5UaGlzIHZhbHVlIGlzIHNwZWNpZmllZCB3aXRoIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIngtc3RyZWFtLWZpbHRlci12YWx1ZVwiXG4gICAgICB9KSwgXCIgaGVhZGVyOlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtamF2YVwiLFxuICAgICAgICBjaGlsZHJlbjogXCJjaGFubmVsLmJhc2ljUHVibGlzaChcXHJcXG4gIFxcXCJcXFwiLCAvLyBkZWZhdWx0IGV4Y2hhbmdlXFxyXFxuICBcXFwibXktc3RyZWFtXFxcIixcXHJcXG4gIG5ldyBBTVFQLkJhc2ljUHJvcGVydGllcy5CdWlsZGVyKClcXHJcXG4gICAgLmhlYWRlcnMoQ29sbGVjdGlvbnMuc2luZ2xldG9uTWFwKFxcclxcbiAgICAgIFxcXCJ4LXN0cmVhbS1maWx0ZXItdmFsdWVcXFwiLCBcXFwiY2FsaWZvcm5pYVxcXCIgLy8gc2V0IGZpbHRlciB2YWx1ZVxcclxcbiAgICApKVxcclxcbiAgICAuYnVpbGQoKSxcXHJcXG4gIGJvZHlcXHJcXG4pO1xcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiQSBjb25zdW1lciBtdXN0IHVzZSB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJ4LXN0cmVhbS1maWx0ZXJcIlxuICAgICAgfSksIFwiIGFyZ3VtZW50IGlmIGl0IHdhbnRzIHRvIHJlY2VpdmUgb25seSBtZXNzYWdlcyBmb3IgYSBnaXZlbiBmaWx0ZXIgdmFsdWU6XCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1qYXZhXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImNoYW5uZWwuYmFzaWNRb3MoMTAwKTsgLy8gUW9TIG11c3QgYmUgc3BlY2lmaWVkXFxyXFxuY2hhbm5lbC5iYXNpY0NvbnN1bWUoXFxyXFxuICBcXFwibXktc3RyZWFtXFxcIixcXHJcXG4gIGZhbHNlLFxcclxcbiAgQ29sbGVjdGlvbnMuc2luZ2xldG9uTWFwKFxcXCJ4LXN0cmVhbS1maWx0ZXJcXFwiLCBcXFwiY2FsaWZvcm5pYVxcXCIpLCAvLyBzZXQgZmlsdGVyXFxyXFxuICAoY29uc3VtZXJUYWcsIG1lc3NhZ2UpIC0+IHtcXHJcXG4gICAgTWFwPFN0cmluZywgT2JqZWN0PiBoZWFkZXJzID0gbWVzc2FnZS5nZXRQcm9wZXJ0aWVzKCkuZ2V0SGVhZGVycygpO1xcclxcbiAgICAvLyB0aGVyZSBtdXN0IGJlIHNvbWUgY2xpZW50LXNpZGUgZmlsdGVyIGxvZ2ljXFxyXFxuICAgIGlmIChcXFwiY2FsaWZvcm5pYVxcXCIuZXF1YWxzKGhlYWRlcnMuZ2V0KFxcXCJ4LXN0cmVhbS1maWx0ZXItdmFsdWVcXFwiKSkpIHtcXHJcXG4gICAgICAvLyBtZXNzYWdlIHByb2Nlc3NpbmdcXHJcXG4gICAgICAvLyAuLi5cXHJcXG4gICAgfVxcclxcbiAgICBjaGFubmVsLmJhc2ljQWNrKG1lc3NhZ2UuZ2V0RW52ZWxvcGUoKS5nZXREZWxpdmVyeVRhZygpLCBmYWxzZSk7IC8vIGFjayBpcyByZXF1aXJlZFxcclxcbiAgfSxcXHJcXG4gIGNvbnN1bWVyVGFnIC0+IHsgfSk7XFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJBcyBzaG93biBpbiB0aGUgc25pcHBldCBhYm92ZSwgdGhlcmUgbXVzdCBiZSBzb21lIGNsaWVudC1zaWRlIGZpbHRlcmluZyBsb2dpYyBhcyB3ZWxsIGJlY2F1c2Ugc2VydmVyLXNpZGUgZmlsdGVyaW5nIGlzIFwiLCBfanN4KF9jb21wb25lbnRzLmVtLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInByb2JhYmlsaXN0aWNcIlxuICAgICAgfSksIFwiOiBtZXNzYWdlcyB0aGF0IGRvIG5vdCBtYXRjaCB0aGUgZmlsdGVyIHZhbHVlIGNhbiBzdGlsbCBiZSBzZW50IHRvIHRoZSBjb25zdW1lci5cXHJcXG5UaGUgc2VydmVyIHVzZXMgYSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQmxvb21fZmlsdGVyXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIkJsb29tIGZpbHRlclwiXG4gICAgICB9KSwgXCIsIGEgc3BhY2UtZWZmaWNpZW50IHByb2JhYmlsaXN0aWMgZGF0YSBzdHJ1Y3R1cmUsIHdoZXJlIGZhbHNlIHBvc2l0aXZlcyBhcmUgcG9zc2libGUuXFxyXFxuRGVzcGl0ZSB0aGlzLCB0aGUgZmlsdGVyaW5nIHNhdmVzIHNvbWUgYmFuZHdpZHRoLCB3aGljaCBpcyBpdHMgcHJpbWFyeSBnb2FsLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkFkZGl0aW9uYWwgbm90ZXMgb24gZmlsdGVyaW5nOlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnVsLCB7XG4gICAgICBjaGlsZHJlbjogW1wiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFwiSXQgaXMgcG9zc2libGUgdG8gcHVibGlzaCBtZXNzYWdlcyB3aXRoIGFuZCB3aXRob3V0IGEgZmlsdGVyIHZhbHVlIGluIHRoZSBzYW1lIHN0cmVhbS5cIlxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJNZXNzYWdlcyB3aXRob3V0IGEgZmlsdGVyIHZhbHVlIGFyZSBub3Qgc2VudCB3aGVuIGEgZmlsdGVyIGlzIHNldCBieSBhIGNvbnN1bWVyLlxcclxcblNldCB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIngtc3RyZWFtLW1hdGNoLXVuZmlsdGVyZWRcIlxuICAgICAgICB9KSwgXCIgYXJndW1lbnQgdG8gXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcInRydWVcIlxuICAgICAgICB9KSwgXCIgdG8gY2hhbmdlIHRoaXMgYmVoYXZpb3IgYW5kIHJlY2VpdmUgXCIsIF9qc3goX2NvbXBvbmVudHMuZW0sIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJ1bmZpbHRlcmVkXCJcbiAgICAgICAgfSksIFwiIG1lc3NhZ2VzIGFzIHdlbGwuXCJdXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtcIlRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwieC1zdHJlYW0tZmlsdGVyXCJcbiAgICAgICAgfSksIFwiIGNvbnN1bWVyIGFyZ3VtZW50IGFjY2VwdHMgYSBzdHJpbmcgYnV0IGFsc28gYW4gYXJyYXkgb2Ygc3RyaW5ncyB0byByZWNlaXZlIG1lc3NhZ2VzIGZvciBkaWZmZXJlbnQgZmlsdGVyIHZhbHVlcy5cIl1cbiAgICAgIH0pLCBcIlxcblwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiQSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiL2Jsb2cvMjAyMy8xMC8xNi9zdHJlYW0tZmlsdGVyaW5nXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImZpcnN0IGJsb2cgcG9zdFwiXG4gICAgICB9KSwgXCIgcHJvdmlkZXMgYW4gb3ZlcnZpZXcgb2Ygc3RyZWFtIGZpbHRlcmluZyBhbmQgYSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiL2Jsb2cvMjAyMy8xMC8yNC9zdHJlYW0tZmlsdGVyaW5nLWludGVybmFsc1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJzZWNvbmQgYmxvZyBwb3N0XCJcbiAgICAgIH0pLCBcIiBjb3ZlcnMgaW50ZXJuYWxzLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJmZWF0dXJlLWNvbXBhcmlzb25cIixcbiAgICAgIGNoaWxkcmVuOiBcIkZlYXR1cmUgQ29tcGFyaXNvbjogUmVndWxhciBRdWV1ZXMgdmVyc3VzIFN0cmVhbXNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIlN0cmVhbXMgYXJlIG5vdCByZWFsbHkgcXVldWVzIGluIHRoZSB0cmFkaXRpb25hbCBzZW5zZSBhbmQgdGh1cyBkbyBub3RcXHJcXG5hbGlnbiB2ZXJ5IGNsb3NlbHkgd2l0aCBBTVFQIDAuOS4xIHF1ZXVlIHNlbWFudGljcy4gTWFueSBmZWF0dXJlcyB0aGF0IG90aGVyIHF1ZXVlIHR5cGVzXFxyXFxuc3VwcG9ydCBhcmUgbm90IHN1cHBvcnRlZCBhbmQgd2lsbCBuZXZlciBiZSBkdWUgdG8gdGhlIG5hdHVyZSBvZiB0aGUgcXVldWUgdHlwZS5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiQW4gQU1RUCAwLjkuMSBjbGllbnQgbGlicmFyeSB0aGF0IGNhbiB1c2UgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vcXVldWVzXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInJlZ3VsYXIgcXVldWVzXCJcbiAgICAgIH0pLCBcIiB3aWxsIGJlIGFibGUgdG8gdXNlIHN0cmVhbXNcXHJcXG5hcyBsb25nIGFzIGl0IHVzZXMgY29uc3VtZXIgYWNrbm93bGVkZ2VtZW50cy5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJNYW55IGZlYXR1cmVzIHdpbGwgbmV2ZXIgYmUgc3VwcG9ydGVkIGJ5IHN0cmVhbXMgZHVlIHRvIHRoZWlyIG5vbi1kZXN0cnVjdGl2ZVxcclxcbnJlYWQgc2VtYW50aWNzLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDMsIHtcbiAgICAgIGlkOiBcImZlYXR1cmUtbWF0cml4XCIsXG4gICAgICBjaGlsZHJlbjogXCJGZWF0dXJlIE1hdHJpeFwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnRhYmxlLCB7XG4gICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMudGhlYWQsIHtcbiAgICAgICAgY2hpbGRyZW46IF9qc3hzKF9jb21wb25lbnRzLnRyLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLnRoLCB7XG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwibGVmdFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46IFwiRmVhdHVyZVwiXG4gICAgICAgICAgfSksIF9qc3goX2NvbXBvbmVudHMudGgsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJsZWZ0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogXCJDbGFzc2ljXCJcbiAgICAgICAgICB9KSwgX2pzeChfY29tcG9uZW50cy50aCwge1xuICAgICAgICAgICAgY2hpbGRyZW46IFwiU3RyZWFtXCJcbiAgICAgICAgICB9KV1cbiAgICAgICAgfSlcbiAgICAgIH0pLCBfanN4cyhfY29tcG9uZW50cy50Ym9keSwge1xuICAgICAgICBjaGlsZHJlbjogW19qc3hzKF9jb21wb25lbnRzLnRyLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLnRkLCB7XG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwibGVmdFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgICAgICBocmVmOiBcIi4vcXVldWVzXCIsXG4gICAgICAgICAgICAgIGNoaWxkcmVuOiBcIk5vbi1kdXJhYmxlIHF1ZXVlc1wiXG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH0pLCBfanN4KF9jb21wb25lbnRzLnRkLCB7XG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwibGVmdFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46IFwieWVzXCJcbiAgICAgICAgICB9KSwgX2pzeChfY29tcG9uZW50cy50ZCwge1xuICAgICAgICAgICAgY2hpbGRyZW46IFwibm9cIlxuICAgICAgICAgIH0pXVxuICAgICAgICB9KSwgX2pzeHMoX2NvbXBvbmVudHMudHIsIHtcbiAgICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJsZWZ0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgICAgIGhyZWY6IFwiLi9xdWV1ZXNcIixcbiAgICAgICAgICAgICAgY2hpbGRyZW46IFwiRXhjbHVzaXZpdHlcIlxuICAgICAgICAgICAgfSlcbiAgICAgICAgICB9KSwgX2pzeChfY29tcG9uZW50cy50ZCwge1xuICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgdGV4dEFsaWduOiBcImxlZnRcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcInllc1wiXG4gICAgICAgICAgfSksIF9qc3goX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcIm5vXCJcbiAgICAgICAgICB9KV1cbiAgICAgICAgfSksIF9qc3hzKF9jb21wb25lbnRzLnRyLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLnRkLCB7XG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwibGVmdFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46IFwiUGVyIG1lc3NhZ2UgcGVyc2lzdGVuY2VcIlxuICAgICAgICAgIH0pLCBfanN4KF9jb21wb25lbnRzLnRkLCB7XG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwibGVmdFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46IFwicGVyIG1lc3NhZ2VcIlxuICAgICAgICAgIH0pLCBfanN4KF9jb21wb25lbnRzLnRkLCB7XG4gICAgICAgICAgICBjaGlsZHJlbjogXCJhbHdheXNcIlxuICAgICAgICAgIH0pXVxuICAgICAgICB9KSwgX2pzeHMoX2NvbXBvbmVudHMudHIsIHtcbiAgICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJsZWZ0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogXCJNZW1iZXJzaGlwIGNoYW5nZXNcIlxuICAgICAgICAgIH0pLCBfanN4KF9jb21wb25lbnRzLnRkLCB7XG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwibGVmdFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46IFwibm9cIlxuICAgICAgICAgIH0pLCBfanN4KF9jb21wb25lbnRzLnRkLCB7XG4gICAgICAgICAgICBjaGlsZHJlbjogXCJtYW51YWxcIlxuICAgICAgICAgIH0pXVxuICAgICAgICB9KSwgX2pzeHMoX2NvbXBvbmVudHMudHIsIHtcbiAgICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJsZWZ0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgICAgIGhyZWY6IFwiLi90dGxcIixcbiAgICAgICAgICAgICAgY2hpbGRyZW46IFwiVFRMXCJcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfSksIF9qc3goX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJsZWZ0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogXCJ5ZXNcIlxuICAgICAgICAgIH0pLCBfanN4cyhfY29tcG9uZW50cy50ZCwge1xuICAgICAgICAgICAgY2hpbGRyZW46IFtcIm5vIChidXQgc2VlIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICAgICAgaHJlZjogXCIjcmV0ZW50aW9uXCIsXG4gICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlJldGVudGlvblwiXG4gICAgICAgICAgICB9KSwgXCIpXCJdXG4gICAgICAgICAgfSldXG4gICAgICAgIH0pLCBfanN4cyhfY29tcG9uZW50cy50ciwge1xuICAgICAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy50ZCwge1xuICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgdGV4dEFsaWduOiBcImxlZnRcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICAgICAgaHJlZjogXCIuL21heGxlbmd0aFwiLFxuICAgICAgICAgICAgICBjaGlsZHJlbjogXCJRdWV1ZSBsZW5ndGggbGltaXRzXCJcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfSksIF9qc3goX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJsZWZ0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogXCJ5ZXNcIlxuICAgICAgICAgIH0pLCBfanN4cyhfY29tcG9uZW50cy50ZCwge1xuICAgICAgICAgICAgY2hpbGRyZW46IFtcIm5vIChidXQgc2VlIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICAgICAgaHJlZjogXCIjcmV0ZW50aW9uXCIsXG4gICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlJldGVudGlvblwiXG4gICAgICAgICAgICB9KSwgXCIpXCJdXG4gICAgICAgICAgfSldXG4gICAgICAgIH0pLCBfanN4cyhfY29tcG9uZW50cy50ciwge1xuICAgICAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy50ZCwge1xuICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgdGV4dEFsaWduOiBcImxlZnRcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcIktlZXBzIG1lc3NhZ2VzIGluIG1lbW9yeVwiXG4gICAgICAgICAgfSksIF9qc3hzKF9jb21wb25lbnRzLnRkLCB7XG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwibGVmdFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46IFtcInNlZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgICAgIGhyZWY6IFwiLi9jbGFzc2ljLXF1ZXVlcyNtZW1vcnlcIixcbiAgICAgICAgICAgICAgY2hpbGRyZW46IFwiQ2xhc3NpYyBRdWV1ZXNcIlxuICAgICAgICAgICAgfSldXG4gICAgICAgICAgfSksIF9qc3goX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcIm5ldmVyXCJcbiAgICAgICAgICB9KV1cbiAgICAgICAgfSksIF9qc3hzKF9jb21wb25lbnRzLnRyLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLnRkLCB7XG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwibGVmdFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgICAgICBocmVmOiBcIi4vcHJpb3JpdHlcIixcbiAgICAgICAgICAgICAgY2hpbGRyZW46IFwiTWVzc2FnZSBwcmlvcml0eVwiXG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH0pLCBfanN4KF9jb21wb25lbnRzLnRkLCB7XG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwibGVmdFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46IFwieWVzXCJcbiAgICAgICAgICB9KSwgX2pzeChfY29tcG9uZW50cy50ZCwge1xuICAgICAgICAgICAgY2hpbGRyZW46IFwibm9cIlxuICAgICAgICAgIH0pXVxuICAgICAgICB9KSwgX2pzeHMoX2NvbXBvbmVudHMudHIsIHtcbiAgICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJsZWZ0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgICAgIGhyZWY6IFwiLi9jb25zdW1lci1wcmlvcml0eVwiLFxuICAgICAgICAgICAgICBjaGlsZHJlbjogXCJDb25zdW1lciBwcmlvcml0eVwiXG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH0pLCBfanN4KF9jb21wb25lbnRzLnRkLCB7XG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwibGVmdFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46IFwieWVzXCJcbiAgICAgICAgICB9KSwgX2pzeChfY29tcG9uZW50cy50ZCwge1xuICAgICAgICAgICAgY2hpbGRyZW46IFwibm9cIlxuICAgICAgICAgIH0pXVxuICAgICAgICB9KSwgX2pzeHMoX2NvbXBvbmVudHMudHIsIHtcbiAgICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJsZWZ0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgICAgIGhyZWY6IFwiLi9kbHhcIixcbiAgICAgICAgICAgICAgY2hpbGRyZW46IFwiRGVhZCBsZXR0ZXIgZXhjaGFuZ2VzXCJcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfSksIF9qc3goX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJsZWZ0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogXCJ5ZXNcIlxuICAgICAgICAgIH0pLCBfanN4KF9jb21wb25lbnRzLnRkLCB7XG4gICAgICAgICAgICBjaGlsZHJlbjogXCJub1wiXG4gICAgICAgICAgfSldXG4gICAgICAgIH0pLCBfanN4cyhfY29tcG9uZW50cy50ciwge1xuICAgICAgICAgIGNoaWxkcmVuOiBbX2pzeHMoX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJsZWZ0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogW1wiQWRoZXJlcyB0byBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgICAgIGhyZWY6IFwiLi9wb2xpY2llc1wiLFxuICAgICAgICAgICAgICBjaGlsZHJlbjogXCJwb2xpY2llc1wiXG4gICAgICAgICAgICB9KV1cbiAgICAgICAgICB9KSwgX2pzeChfY29tcG9uZW50cy50ZCwge1xuICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgdGV4dEFsaWduOiBcImxlZnRcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcInllc1wiXG4gICAgICAgICAgfSksIF9qc3hzKF9jb21wb25lbnRzLnRkLCB7XG4gICAgICAgICAgICBjaGlsZHJlbjogW1wieWVzIChzZWUgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgICAgICBocmVmOiBcIiNyZXRlbnRpb25cIixcbiAgICAgICAgICAgICAgY2hpbGRyZW46IFwiUmV0ZW50aW9uXCJcbiAgICAgICAgICAgIH0pLCBcIilcIl1cbiAgICAgICAgICB9KV1cbiAgICAgICAgfSksIF9qc3hzKF9jb21wb25lbnRzLnRyLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFtfanN4cyhfY29tcG9uZW50cy50ZCwge1xuICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgdGV4dEFsaWduOiBcImxlZnRcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXCJSZWFjdHMgdG8gXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgICAgICBocmVmOiBcIi4vYWxhcm1zXCIsXG4gICAgICAgICAgICAgIGNoaWxkcmVuOiBcIm1lbW9yeSBhbGFybXNcIlxuICAgICAgICAgICAgfSldXG4gICAgICAgICAgfSksIF9qc3goX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJsZWZ0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogXCJ5ZXNcIlxuICAgICAgICAgIH0pLCBfanN4KF9jb21wb25lbnRzLnRkLCB7XG4gICAgICAgICAgICBjaGlsZHJlbjogXCJubyAodXNlcyBtaW5pbWFsIFJBTSlcIlxuICAgICAgICAgIH0pXVxuICAgICAgICB9KSwgX2pzeHMoX2NvbXBvbmVudHMudHIsIHtcbiAgICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJsZWZ0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogXCJQb2lzb24gbWVzc2FnZSBoYW5kbGluZ1wiXG4gICAgICAgICAgfSksIF9qc3goX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJsZWZ0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogXCJub1wiXG4gICAgICAgICAgfSksIF9qc3goX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcIm5vXCJcbiAgICAgICAgICB9KV1cbiAgICAgICAgfSldXG4gICAgICB9KV1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oNCwge1xuICAgICAgaWQ6IFwibm9uLWR1cmFibGUtcXVldWVzXCIsXG4gICAgICBjaGlsZHJlbjogXCJOb24tZHVyYWJsZSBRdWV1ZXNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiU3RyZWFtcyBhcmUgYWx3YXlzIGR1cmFibGUgcGVyIHRoZWlyIGFzc3VtZWQgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIiN1c2UtY2FzZXNcIixcbiAgICAgICAgY2hpbGRyZW46IFwidXNlIGNhc2VzXCJcbiAgICAgIH0pLCBcIixcXHJcXG50aGV5IGNhbm5vdCBiZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi9xdWV1ZXMjcHJvcGVydGllc1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJub24tZHVyYWJsZVwiXG4gICAgICB9KSwgXCIgbGlrZSByZWd1bGFyIHF1ZXVlcy5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oNCwge1xuICAgICAgaWQ6IFwiZXhjbHVzaXZpdHlcIixcbiAgICAgIGNoaWxkcmVuOiBcIkV4Y2x1c2l2aXR5XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlN0cmVhbXMgYXJlIGFsd2F5cyBkdXJhYmxlIHBlciB0aGVpciBhc3N1bWVkIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIjdXNlLWNhc2VzXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInVzZSBjYXNlc1wiXG4gICAgICB9KSwgXCIsIHRoZXkgY2Fubm90IGJlXFxyXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vcXVldWVzI2V4Y2x1c2l2ZS1xdWV1ZXNcIixcbiAgICAgICAgY2hpbGRyZW46IFwiZXhjbHVzaXZlXCJcbiAgICAgIH0pLCBcIiBsaWtlIHJlZ3VsYXIgcXVldWVzLlxcclxcblRoZXkgYXJlIG5vdCBtZWFudCB0byBiZSB1c2VkIGFzIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL3F1ZXVlcyN0ZW1wb3JhcnktcXVldWVzXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInRlbXBvcmFyeSBxdWV1ZXNcIlxuICAgICAgfSksIFwiLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmg0LCB7XG4gICAgICBpZDogXCJnbG9iYWwtcW9zXCIsXG4gICAgICBjaGlsZHJlbjogXCJHbG9iYWwgUW9TXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlN0cmVhbXMgZG8gbm90IHN1cHBvcnQgZ2xvYmFsIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL2NvbmZpcm1zI2NoYW5uZWwtcW9zLXByZWZldGNoXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIlFvUyBwcmVmZXRjaFwiXG4gICAgICB9KSwgXCIgd2hlcmUgYSBjaGFubmVsIHNldHMgYSBzaW5nbGVcXHJcXG5wcmVmZXRjaCBsaW1pdCBmb3IgYWxsIGNvbnN1bWVycyB1c2luZyB0aGF0IGNoYW5uZWwuIElmIGFuIGF0dGVtcHRcXHJcXG5pcyBtYWRlIHRvIGNvbnN1bWUgZnJvbSBhIHN0cmVhbSBmcm9tIGEgY2hhbm5lbCB3aXRoIGdsb2JhbCBRb1MgZW5hYmxlZFxcclxcbmEgY2hhbm5lbCBlcnJvciB3aWxsIGJlIHJldHVybmVkLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVXNlIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL2NvbnN1bWVyLXByZWZldGNoXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInBlci1jb25zdW1lciBRb1MgcHJlZmV0Y2hcIlxuICAgICAgfSksIFwiLCB3aGljaCBpcyB0aGUgZGVmYXVsdCBpbiBzZXZlcmFsIHBvcHVsYXIgY2xpZW50cy5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwicmV0ZW50aW9uXCIsXG4gICAgICBjaGlsZHJlbjogXCJEYXRhIFJldGVudGlvblwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiU3RyZWFtcyBhcmUgaW1wbGVtZW50ZWQgYXMgYW4gaW1tdXRhYmxlIGFwcGVuZC1vbmx5IGRpc2sgbG9nLiBUaGlzIG1lYW5zIHRoYXRcXHJcXG50aGUgbG9nIHdpbGwgZ3JvdyBpbmRlZmluaXRlbHkgdW50aWwgdGhlIGRpc2sgcnVucyBvdXQuIFRvIGF2b2lkIHRoaXMgdW5kZXNpcmFibGVcXHJcXG5zY2VuYXJpbyBpdCBpcyBwb3NzaWJsZSB0byBzZXQgYSByZXRlbnRpb24gY29uZmlndXJhdGlvbiBwZXIgc3RyZWFtIHdoaWNoIHdpbGxcXHJcXG5kaXNjYXJkIHRoZSBvbGRlc3QgZGF0YSBpbiB0aGUgbG9nIGJhc2VkIG9uIHRvdGFsIGxvZyBkYXRhIHNpemUgYW5kL29yIGFnZS5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIlRoZXJlIGFyZSB0d28gcGFyYW1ldGVycyB0aGF0IGNvbnRyb2wgdGhlIHJldGVudGlvbiBvZiBhIHN0cmVhbS5cXHJcXG5UaGVzZSBjYW4gYmUgY29tYmluZWQuXFxyXFxuVGhlc2UgYXJlIGVpdGhlciBzZXQgYXQgZGVjbGFyYXRpb24gdGltZSB1c2luZyBhIHF1ZXVlIGFyZ3VtZW50IG9yIGFzIGEgcG9saWN5IHdoaWNoIGNhbiBiZSBkeW5hbWljYWxseSB1cGRhdGVkLlxcclxcblRoZSBwb2xpY3kgdGFrZXMgcHJlY2VkZW5jZSBvdmVyIHF1ZXVlIGFyZ3VtZW50cy5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy51bCwge1xuICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW1wiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgICAgY2hpbGRyZW46IFwibWF4LWFnZVwiXG4gICAgICAgICAgfSksIFwiOlwiXVxuICAgICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwidmFsaWQgdW5pdHM6IFksIE0sIEQsIGgsIG0sIHNcIlxuICAgICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgICAgIGNoaWxkcmVuOiBbXCJlLmcuIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcIjdEXCJcbiAgICAgICAgICB9KSwgXCIgZm9yIGEgd2Vla1wiXVxuICAgICAgICB9KSwgXCJcXG5cIl1cbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW1wiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgICAgY2hpbGRyZW46IFwibWF4LWxlbmd0aC1ieXRlc1wiXG4gICAgICAgICAgfSksIFwiOlwiXVxuICAgICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwidGhlIG1heCB0b3RhbCBzaXplIGluIGJ5dGVzXCJcbiAgICAgICAgfSksIFwiXFxuXCJdXG4gICAgICB9KSwgXCJcXG5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIk5COiByZXRlbnRpb24gaXMgZXZhbHVhdGVkIG9uIHBlciBzZWdtZW50IGJhc2lzIHNvIHRoZXJlIGlzIG9uZSBtb3JlIHBhcmFtZXRlclxcclxcbnRoYXQgY29tZXMgaW50byBlZmZlY3QgYW5kIHRoYXQgaXMgdGhlIHNlZ21lbnQgc2l6ZSBvZiB0aGUgc3RyZWFtLiBUaGUgc3RyZWFtIHdpbGxcXHJcXG5hbHdheXMgbGVhdmUgYXQgbGVhc3Qgb25lIHNlZ21lbnQgaW4gcGxhY2UgYXMgbG9uZyBhcyB0aGUgc2VnbWVudCBjb250YWlucyBhdCBsZWFzdFxcclxcbm9uZSBtZXNzYWdlLlxcclxcbldoZW4gdXNpbmcgYnJva2VyLXByb3ZpZGVkIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIjb2Zmc2V0LXRyYWNraW5nXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIm9mZnNldC10cmFja2luZ1wiXG4gICAgICB9KSwgXCIsIG9mZnNldHMgZm9yIGVhY2ggY29uc3VtZXJcXHJcXG5hcmUgcGVyc2lzdGVkIGluIHRoZSBzdHJlYW0gaXRzZWxmIGFzIG5vbi1tZXNzYWdlIGRhdGEuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcInBlcmZvcm1hbmNlXCIsXG4gICAgICBjaGlsZHJlbjogXCJQZXJmb3JtYW5jZSBDaGFyYWN0ZXJpc3RpY3NcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkFzIHN0cmVhbXMgcGVyc2lzdCBhbGwgZGF0YSB0byBkaXNrcyBiZWZvcmUgZG9pbmcgYW55dGhpbmcgaXQgaXMgcmVjb21tZW5kZWRcXHJcXG50byB1c2UgdGhlIGZhc3Rlc3QgZGlza3MgcG9zc2libGUuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJEdWUgdG8gdGhlIGRpc2sgSS9PLWhlYXZ5IG5hdHVyZSBvZiBzdHJlYW1zLCB0aGVpciB0aHJvdWdocHV0IGRlY3JlYXNlc1xcclxcbmFzIG1lc3NhZ2Ugc2l6ZXMgaW5jcmVhc2UuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJKdXN0IGxpa2UgcXVvcnVtIHF1ZXVlcywgc3RyZWFtcyBhcmUgYWxzbyBhZmZlY3RlZCBieSBjbHVzdGVyIHNpemVzLlxcclxcblRoZSBtb3JlIHJlcGxpY2FzIGEgc3RyZWFtIGhhcywgdGhlIGxvd2VyIGl0cyB0aHJvdWdocHV0IGdlbmVyYWxseSB3aWxsXFxyXFxuYmUgc2luY2UgbW9yZSB3b3JrIGhhcyB0byBiZSBkb25lIHRvIHJlcGxpY2F0ZSBkYXRhIGFuZCBhY2hpZXZlIGNvbnNlbnN1cy5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgzLCB7XG4gICAgICBpZDogXCJyZXBsaWNhdGlvbi1mYWN0b3JcIixcbiAgICAgIGNoaWxkcmVuOiBcIkNvbnRyb2xsaW5nIHRoZSBJbml0aWFsIFJlcGxpY2F0aW9uIEZhY3RvclwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJUaGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJ4LWluaXRpYWwtY2x1c3Rlci1zaXplXCJcbiAgICAgIH0pLCBcIiBxdWV1ZSBhcmd1bWVudCBjb250cm9scyBob3cgbWFueSByYWJiaXQgbm9kZXMgdGhlIGluaXRpYWxcXHJcXG5zdHJlYW0gY2x1c3RlciBzaG91bGQgc3Bhbi5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwibWVtYmVyLW1hbmFnZW1lbnRcIixcbiAgICAgIGNoaWxkcmVuOiBcIk1hbmFnaW5nIFN0cmVhbSBSZXBsaWNhc1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiUmVwbGljYXMgb2YgYSBzdHJlYW0gYXJlIGV4cGxpY2l0bHkgbWFuYWdlZCBieSB0aGUgb3BlcmF0b3IuIFdoZW4gYSBuZXcgbm9kZSBpcyBhZGRlZFxcclxcbnRvIHRoZSBjbHVzdGVyLCBpdCB3aWxsIGhvc3Qgbm8gc3RyZWFtIHJlcGxpY2FzIHVubGVzcyB0aGUgb3BlcmF0b3IgZXhwbGljaXRseSBhZGRzIGl0XFxyXFxudG8gYSByZXBsaWNhIHNldCBvZiBhIHN0cmVhbS5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIldoZW4gYSBub2RlIGhhcyB0byBiZSBkZWNvbW1pc3Npb25lZCAocGVybWFuZW50bHkgcmVtb3ZlZCBmcm9tIHRoZSBjbHVzdGVyKSwgaXQgbXVzdCBiZSBleHBsaWNpdGx5XFxyXFxucmVtb3ZlZCBmcm9tIHRoZSByZXBsaWNhIGxpc3Qgb2YgYWxsIHN0cmVhbXMgaXQgY3VycmVudGx5IGhvc3RzIHJlcGxpY2FzIGZvci5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVHdvIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL2NsaVwiLFxuICAgICAgICBjaGlsZHJlbjogXCJDTEkgY29tbWFuZHNcIlxuICAgICAgfSksIFwiIGFyZSBwcm92aWRlZCB0byBwZXJmb3JtIHRoZSBhYm92ZSBvcGVyYXRpb25zLFxcclxcblwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXEtc3RyZWFtcyBhZGRfcmVwbGljYVwiXG4gICAgICB9KSwgXCIgYW5kIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwicmFiYml0bXEtc3RyZWFtcyBkZWxldGVfcmVwbGljYVwiXG4gICAgICB9KSwgXCI6XCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1iYXNoXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLXN0cmVhbXMgYWRkX3JlcGxpY2EgWy1wIDx2aG9zdD5dIDxzdHJlYW0tbmFtZT4gPG5vZGU+XFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1iYXNoXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLXN0cmVhbXMgZGVsZXRlX3JlcGxpY2EgWy1wIDx2aG9zdD5dIDxzdHJlYW0tbmFtZT4gPG5vZGU+XFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiVG8gc3VjY2Vzc2Z1bGx5IGFkZCBhbmQgcmVtb3ZlIHJlcGxpY2FzIHRoZSBzdHJlYW0gY29vcmRpbmF0b3IgbXVzdCBiZVxcclxcbmF2YWlsYWJsZSBpbiB0aGUgY2x1c3Rlci5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkNhcmUgbmVlZHMgdG8gYmUgdGFrZW4gbm90IHRvIGFjY2lkZW50YWxseSBtYWtlIGEgc3RyZWFtIHVuYXZhaWxhYmxlIGJ5IGxvc2luZ1xcclxcbnRoZSBxdW9ydW0gd2hpbHN0IHBlcmZvcm1pbmcgbWFpbnRlbmFuY2Ugb3BlcmF0aW9ucyB0aGF0IGludm9sdmUgbWVtYmVyc2hpcCBjaGFuZ2VzLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiQmVjYXVzZSB0aGUgc3RyZWFtIG1lbWJlcnNoaXAgaXNuJ3QgZW1iZWRkZWQgaW4gdGhlIHN0cmVhbSBpdHNlbGYgYWRkaW5nIGEgcmVwbGljYVxcclxcbmNhbm5vdCBiZSBtYWRlIGVudGlyZWx5IHNhZmUgYXQgdGhlIGN1cnJlbnQgdGltZS4gSGVuY2UgaWYgdGhlcmUgYXQgYW55IHRpbWUgaXMgYW5cXHJcXG5vdXQgb2Ygc3luYyByZXBsaWNhIGFub3RoZXIgcmVwbGljYSBjYW5ub3QgYmUgYWRkZWQgYW5kIGFuIGVycm9yIHdpbGwgYmUgcmV0dXJuZWQuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJXaGVuIHJlcGxhY2luZyBhIGNsdXN0ZXIgbm9kZSwgaXQgaXMgc2FmZXIgdG8gZmlyc3QgYWRkIGEgbmV3IG5vZGUsIHdhaXQgZm9yIGl0XFxyXFxudG8gYmVjb21lIGluLXN5bmMgYW5kIHRoZW4gZGUtY29tbWlzc2lvbiB0aGUgbm9kZSBpdCByZXBsYWNlcy5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIlRoZSByZXBsaWNhdGlvbiBzdGF0dXMgb2YgYSBzdHJlYW0gY2FuIGJlIHF1ZXJpZWQgdXNpbmcgdGhlIGZvbGxvd2luZyBjb21tYW5kOlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1iYXNoXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInJhYmJpdG1xLXN0cmVhbXMgc3RyZWFtX3N0YXR1cyBbLXAgPHZob3N0Pl0gPHN0cmVhbS1uYW1lPlxcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkluIGFkZGl0aW9uIHN0cmVhbXMgY2FuIGJlIHJlc3RhcnRlZCB1c2luZzpcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtYmFzaFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJyYWJiaXRtcS1zdHJlYW1zIHJlc3RhcnRfc3RyZWFtIFstcCA8dmhvc3Q+XSA8c3RyZWFtLW5hbWU+XFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcImJlaGF2aW91clwiLFxuICAgICAgY2hpbGRyZW46IFwiU3RyZWFtIEJlaGF2aW91clwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiRXZlcnkgc3RyZWFtIGhhcyBhIHByaW1hcnkgd3JpdGVyICh0aGUgbGVhZGVyKSBhbmQgemVybyBvciBtb3JlIHJlcGxpY2FzLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDMsIHtcbiAgICAgIGlkOiBcImxlYWRlci1lbGVjdGlvblwiLFxuICAgICAgY2hpbGRyZW46IFwiTGVhZGVyIEVsZWN0aW9uIGFuZCBGYWlsdXJlIEhhbmRsaW5nXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJXaGVuIGEgbmV3IHN0cmVhbSBpcyBkZWNsYXJlZCwgdGhlIHNldCBvZiBub2RlcyB0aGF0IHdpbGwgaG9zdCBpdHNcXHJcXG5yZXBsaWNhcyBpcyByYW5kb21seSBwaWNrZWQsIGJ1dCB3aWxsIGFsd2F5cyBpbmNsdWRlIHRoZSBub2RlIHRoZSBjbGllbnQgdGhhdCBkZWNsYXJlcyB0aGUgc3RyZWFtIGlzIGNvbm5lY3RlZCB0by5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiV2hpY2ggcmVwbGljYSBiZWNvbWVzIHRoZSBpbml0aWFsIGxlYWRlciBpcyBjb250cm9sbGVkIGluIHRocmVlIHdheXMsXFxyXFxubmFtZWx5LCB1c2luZyB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJ4LXF1ZXVlLWxlYWRlci1sb2NhdG9yXCJcbiAgICAgIH0pLCBcIiBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi9xdWV1ZXMjb3B0aW9uYWwtYXJndW1lbnRzXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIm9wdGlvbmFsIHF1ZXVlIGFyZ3VtZW50XCJcbiAgICAgIH0pLCBcIiwgc2V0dGluZyB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJxdWV1ZS1sZWFkZXItbG9jYXRvclwiXG4gICAgICB9KSwgXCJcXHJcXG5wb2xpY3kga2V5IG9yIGJ5IGRlZmluaW5nIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInF1ZXVlX2xlYWRlcl9sb2NhdG9yXCJcbiAgICAgIH0pLCBcIlxcclxcbmtleSBpbiBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi9jb25maWd1cmUjY29uZmlndXJhdGlvbi1maWxlc1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJ0aGUgY29uZmlndXJhdGlvbiBmaWxlXCJcbiAgICAgIH0pLCBcIi4gSGVyZSBhcmUgdGhlIHBvc3NpYmxlIHZhbHVlczpcIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMudWwsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJjbGllbnQtbG9jYWxcIlxuICAgICAgICB9KSwgXCI6IFBpY2sgdGhlIG5vZGUgdGhlIGNsaWVudCB0aGF0IGRlY2xhcmVzIHRoZSBzdHJlYW0gaXMgY29ubmVjdGVkIHRvLiBUaGlzIGlzIHRoZSBkZWZhdWx0IHZhbHVlLlwiXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiYmFsYW5jZWRcIlxuICAgICAgICB9KSwgXCI6IElmIHRoZXJlIGFyZSBvdmVyYWxsIGxlc3MgdGhhbiAxMDAwIHF1ZXVlcyAoY2xhc3NpYyBxdWV1ZXMsIHF1b3J1bSBxdWV1ZXMsIGFuZCBzdHJlYW1zKSxcXHJcXG5waWNrIHRoZSBub2RlIGhvc3RpbmcgdGhlIG1pbmltdW0gbnVtYmVyIG9mIHN0cmVhbSBsZWFkZXJzLlxcclxcbklmIHRoZXJlIGFyZSBvdmVyYWxsIG1vcmUgdGhhbiAxMDAwIHF1ZXVlcywgcGljayBhIHJhbmRvbSBub2RlLlwiXVxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJBIHN0cmVhbSByZXF1aXJlcyBhIHF1b3J1bSBvZiB0aGUgZGVjbGFyZWQgbm9kZXMgdG8gYmUgYXZhaWxhYmxlXFxyXFxudG8gZnVuY3Rpb24uIFdoZW4gYSBSYWJiaXRNUSBub2RlIGhvc3RpbmcgYSBzdHJlYW0nc1xcclxcblwiLCBfanN4KF9jb21wb25lbnRzLmVtLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcImxlYWRlclwiXG4gICAgICB9KSwgXCIgZmFpbHMgb3IgaXMgc3RvcHBlZCBhbm90aGVyIG5vZGUgaG9zdGluZyBvbmUgb2YgdGhhdFxcclxcbnN0cmVhbSdzIFwiLCBfanN4KF9jb21wb25lbnRzLmVtLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInJlcGxpY2FcIlxuICAgICAgfSksIFwiIHdpbGwgYmUgZWxlY3RlZCBsZWFkZXIgYW5kIHJlc3VtZVxcclxcbm9wZXJhdGlvbnMuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiRmFpbGVkIGFuZCByZWpvaW5pbmcgcmVwbGljYXMgd2lsbCByZS1zeW5jaHJvbmlzZSAoXFxcImNhdGNoIHVwXFxcIikgd2l0aCB0aGUgbGVhZGVyLlxcclxcblNpbWlsYXJseSB0byBxdW9ydW0gcXVldWVzIHF1ZXVlcywgYSB0ZW1wb3JhcnkgcmVwbGljYSBmYWlsdXJlXFxyXFxuZG9lcyBub3QgcmVxdWlyZSBhIGZ1bGwgcmUtc3luY2hyb25pemF0aW9uIGZyb20gdGhlIGN1cnJlbnRseSBlbGVjdGVkIGxlYWRlci4gT25seSB0aGUgZGVsdGFcXHJcXG53aWxsIGJlIHRyYW5zZmVycmVkIGlmIGEgcmUtam9pbmluZyByZXBsaWNhIGlzIGJlaGluZCB0aGUgbGVhZGVyLiBUaGlzIFxcXCJjYXRjaGluZyB1cFxcXCIgcHJvY2Vzc1xcclxcbmRvZXMgbm90IGFmZmVjdCBsZWFkZXIgYXZhaWxhYmlsaXR5LlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJSZXBsaWNhcyBtdXN0IGJlIGV4cGxpY2l0bHkgYWRkZWQuXFxyXFxuV2hlbiBhIG5ldyByZXBsaWNhIGlzIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIjbWVtYmVyLW1hbmFnZW1lbnRcIixcbiAgICAgICAgY2hpbGRyZW46IFwiYWRkZWRcIlxuICAgICAgfSksIFwiLCBpdCB3aWxsIHN5bmNocm9uaXNlIHRoZSBlbnRpcmUgc3RyZWFtIHN0YXRlXFxyXFxuZnJvbSB0aGUgbGVhZGVyLCBzaW1pbGFybHkgdG8gbmV3bHkgYWRkZWQgcXVvcnVtIHF1ZXVlIHJlcGxpY2FzLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgzLCB7XG4gICAgICBpZDogXCJxdW9ydW0tcmVxdWlyZW1lbnRzXCIsXG4gICAgICBjaGlsZHJlbjogXCJGYXVsdCBUb2xlcmFuY2UgYW5kIE1pbmltdW0gTnVtYmVyIG9mIFJlcGxpY2FzIE9ubGluZVwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiQ29uc2Vuc3VzIHN5c3RlbXMgY2FuIHByb3ZpZGUgY2VydGFpbiBndWFyYW50ZWVzIHdpdGggcmVnYXJkIHRvIGRhdGEgc2FmZXR5LlxcclxcblRoZXNlIGd1YXJhbnRlZXMgZG8gbWVhbiB0aGF0IGNlcnRhaW4gY29uZGl0aW9ucyBuZWVkIHRvIGJlIG1ldCBiZWZvcmUgdGhleVxcclxcbmJlY29tZSByZWxldmFudCBzdWNoIGFzIHJlcXVpcmluZyBhIG1pbmltdW0gb2YgdGhyZWUgY2x1c3RlciBub2RlcyB0byBwcm92aWRlXFxyXFxuZmF1bHQgdG9sZXJhbmNlIGFuZCByZXF1aXJpbmcgbW9yZSB0aGFuIGhhbGYgb2YgbWVtYmVycyB0byBiZSBhdmFpbGFibGUgdG9cXHJcXG53b3JrIGF0IGFsbC5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkZhaWx1cmUgdG9sZXJhbmNlIGNoYXJhY3RlcmlzdGljcyBvZiBjbHVzdGVycyBvZiB2YXJpb3VzIHNpemUgY2FuIGJlIGRlc2NyaWJlZFxcclxcbmluIGEgdGFibGU6XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMudGFibGUsIHtcbiAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy50aGVhZCwge1xuICAgICAgICBjaGlsZHJlbjogX2pzeHMoX2NvbXBvbmVudHMudHIsIHtcbiAgICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMudGgsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJjZW50ZXJcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcIkNsdXN0ZXIgbm9kZSBjb3VudFwiXG4gICAgICAgICAgfSksIF9qc3goX2NvbXBvbmVudHMudGgsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJjZW50ZXJcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcIlRvbGVyYXRlZCBudW1iZXIgb2Ygbm9kZSBmYWlsdXJlc1wiXG4gICAgICAgICAgfSksIF9qc3goX2NvbXBvbmVudHMudGgsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJjZW50ZXJcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcIlRvbGVyYW50IHRvIGEgbmV0d29yayBwYXJ0aXRpb25cIlxuICAgICAgICAgIH0pXVxuICAgICAgICB9KVxuICAgICAgfSksIF9qc3hzKF9jb21wb25lbnRzLnRib2R5LCB7XG4gICAgICAgIGNoaWxkcmVuOiBbX2pzeHMoX2NvbXBvbmVudHMudHIsIHtcbiAgICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJjZW50ZXJcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcIjFcIlxuICAgICAgICAgIH0pLCBfanN4KF9jb21wb25lbnRzLnRkLCB7XG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogXCIwXCJcbiAgICAgICAgICB9KSwgX2pzeChfY29tcG9uZW50cy50ZCwge1xuICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgdGV4dEFsaWduOiBcImNlbnRlclwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46IFwibm90IGFwcGxpY2FibGVcIlxuICAgICAgICAgIH0pXVxuICAgICAgICB9KSwgX2pzeHMoX2NvbXBvbmVudHMudHIsIHtcbiAgICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJjZW50ZXJcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcIjJcIlxuICAgICAgICAgIH0pLCBfanN4KF9jb21wb25lbnRzLnRkLCB7XG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogXCIwXCJcbiAgICAgICAgICB9KSwgX2pzeChfY29tcG9uZW50cy50ZCwge1xuICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgdGV4dEFsaWduOiBcImNlbnRlclwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46IFwibm9cIlxuICAgICAgICAgIH0pXVxuICAgICAgICB9KSwgX2pzeHMoX2NvbXBvbmVudHMudHIsIHtcbiAgICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJjZW50ZXJcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcIjNcIlxuICAgICAgICAgIH0pLCBfanN4KF9jb21wb25lbnRzLnRkLCB7XG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogXCIxXCJcbiAgICAgICAgICB9KSwgX2pzeChfY29tcG9uZW50cy50ZCwge1xuICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgdGV4dEFsaWduOiBcImNlbnRlclwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46IFwieWVzXCJcbiAgICAgICAgICB9KV1cbiAgICAgICAgfSksIF9qc3hzKF9jb21wb25lbnRzLnRyLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLnRkLCB7XG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogXCI0XCJcbiAgICAgICAgICB9KSwgX2pzeChfY29tcG9uZW50cy50ZCwge1xuICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgdGV4dEFsaWduOiBcImNlbnRlclwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46IFwiMVwiXG4gICAgICAgICAgfSksIF9qc3goX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJjZW50ZXJcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcInllcyBpZiBhIG1ham9yaXR5IGV4aXN0cyBvbiBvbmUgc2lkZVwiXG4gICAgICAgICAgfSldXG4gICAgICAgIH0pLCBfanN4cyhfY29tcG9uZW50cy50ciwge1xuICAgICAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy50ZCwge1xuICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgdGV4dEFsaWduOiBcImNlbnRlclwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46IFwiNVwiXG4gICAgICAgICAgfSksIF9qc3goX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJjZW50ZXJcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcIjJcIlxuICAgICAgICAgIH0pLCBfanN4KF9jb21wb25lbnRzLnRkLCB7XG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogXCJ5ZXNcIlxuICAgICAgICAgIH0pXVxuICAgICAgICB9KSwgX2pzeHMoX2NvbXBvbmVudHMudHIsIHtcbiAgICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJjZW50ZXJcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcIjZcIlxuICAgICAgICAgIH0pLCBfanN4KF9jb21wb25lbnRzLnRkLCB7XG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogXCIyXCJcbiAgICAgICAgICB9KSwgX2pzeChfY29tcG9uZW50cy50ZCwge1xuICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgdGV4dEFsaWduOiBcImNlbnRlclwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46IFwieWVzIGlmIGEgbWFqb3JpdHkgZXhpc3RzIG9uIG9uZSBzaWRlXCJcbiAgICAgICAgICB9KV1cbiAgICAgICAgfSksIF9qc3hzKF9jb21wb25lbnRzLnRyLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLnRkLCB7XG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogXCI3XCJcbiAgICAgICAgICB9KSwgX2pzeChfY29tcG9uZW50cy50ZCwge1xuICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgdGV4dEFsaWduOiBcImNlbnRlclwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46IFwiM1wiXG4gICAgICAgICAgfSksIF9qc3goX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJjZW50ZXJcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcInllc1wiXG4gICAgICAgICAgfSldXG4gICAgICAgIH0pLCBfanN4cyhfY29tcG9uZW50cy50ciwge1xuICAgICAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy50ZCwge1xuICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgdGV4dEFsaWduOiBcImNlbnRlclwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46IFwiOFwiXG4gICAgICAgICAgfSksIF9qc3goX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJjZW50ZXJcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcIjNcIlxuICAgICAgICAgIH0pLCBfanN4KF9jb21wb25lbnRzLnRkLCB7XG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogXCJ5ZXMgaWYgYSBtYWpvcml0eSBleGlzdHMgb24gb25lIHNpZGVcIlxuICAgICAgICAgIH0pXVxuICAgICAgICB9KSwgX2pzeHMoX2NvbXBvbmVudHMudHIsIHtcbiAgICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMudGQsIHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHRleHRBbGlnbjogXCJjZW50ZXJcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcIjlcIlxuICAgICAgICAgIH0pLCBfanN4KF9jb21wb25lbnRzLnRkLCB7XG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogXCI0XCJcbiAgICAgICAgICB9KSwgX2pzeChfY29tcG9uZW50cy50ZCwge1xuICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgdGV4dEFsaWduOiBcImNlbnRlclwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46IFwieWVzXCJcbiAgICAgICAgICB9KV1cbiAgICAgICAgfSldXG4gICAgICB9KV1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwiZGF0YS1zYWZldHlcIixcbiAgICAgIGNoaWxkcmVuOiBcIkRhdGEgU2FmZXR5IHdoZW4gdXNpbmcgU3RyZWFtc1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiU3RyZWFtcyByZXBsaWNhdGUgZGF0YSBhY3Jvc3MgbXVsdGlwbGUgbm9kZXMgYW5kIHB1Ymxpc2hlciBjb25maXJtcyBhcmUgb25seVxcclxcbmlzc3VlZCBvbmNlIHRoZSBkYXRhIGhhcyBiZWVuIHJlcGxpY2F0ZWQgdG8gYSBxdW9ydW0gb2Ygc3RyZWFtIHJlcGxpY2FzLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiU3RyZWFtcyBhbHdheXMgc3RvcmUgZGF0YSBvbiBkaXNrLCBob3dldmVyLCB0aGV5IGRvIG5vdCBleHBsaWNpdGx5IGZsdXNoIChmc3luYylcXHJcXG50aGUgZGF0YSBmcm9tIHRoZSBvcGVyYXRpbmcgc3lzdGVtIHBhZ2UgY2FjaGUgdG8gdGhlIHVuZGVybHlpbmcgc3RvcmFnZVxcclxcbm1lZGl1bSwgaW5zdGVhZCB0aGV5IHJlbHkgb24gdGhlIG9wZXJhdGluZyBzeXN0ZW0gdG8gZG8gYXMgYW5kIHdoZW4gcmVxdWlyZWQuXFxyXFxuVGhpcyBtZWFucyB0aGF0IGFuIHVuY29udHJvbGxlZCBzaHV0ZG93biBvZiBhIHNlcnZlciBjb3VsZCByZXN1bHQgaW4gZGF0YSBsb3NzXFxyXFxuZm9yIHJlcGxpY2FzIGhvc3RlZCBvbiB0aGF0IG5vZGUuIEFsdGhvdWdoIHRoZW9yZXRpY2FsbHkgdGhpcyBvcGVucyB1cCB0aGUgcG9zc2liaWxpdHlcXHJcXG5vZiBjb25maXJtZWQgZGF0YSBsb3NzLCB0aGUgY2hhbmNlcyBvZiB0aGlzIGhhcHBlbmluZyBkdXJpbmcgbm9ybWFsIG9wZXJhdGlvbiBpc1xcclxcbnZlcnkgc21hbGwgYW5kIHRoZSBsb3NzIG9mIGRhdGEgb24gYSBzaW5nbGUgbm9kZSB3b3VsZCB0eXBpY2FsbHkganVzdCBiZSByZS1yZXBsaWNhdGVkXFxyXFxuZnJvbSB0aGUgb3RoZXIgbm9kZXMgaW4gdGhlIHN5c3RlbS5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiSWYgbW9yZSBkYXRhIHNhZmV0eSBpcyByZXF1aXJlZCB0aGVuIGNvbnNpZGVyIHVzaW5nIHF1b3J1bSBxdWV1ZXMgaW5zdGVhZCBhcyBub1xcclxcbnB1Ymxpc2hlciBjb25maXJtcyBhcmUgaXNzdWVkIHVudGlsIGF0IGxlYXN0IGEgcXVvcnVtIG9mIG5vZGVzIGhhdmUgYm90aCB3cml0dGVuIFwiLCBfanN4KF9jb21wb25lbnRzLmVtLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcImFuZFwiXG4gICAgICB9KSwgXCJcXHJcXG5mbHVzaGVkIHRoZSBkYXRhIHRvIGRpc2suXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5lbSwge1xuICAgICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5lbSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIk5vIGd1YXJhbnRlZXMgYXJlIHByb3ZpZGVkIGZvciBtZXNzYWdlcyB0aGF0IGhhdmUgbm90IGJlZW4gY29uZmlybWVkIHVzaW5nXFxyXFxudGhlIHB1Ymxpc2hlciBjb25maXJtIG1lY2hhbmlzbVwiXG4gICAgICAgIH0pXG4gICAgICB9KSwgXCIuIFN1Y2ggbWVzc2FnZXMgY291bGQgYmUgbG9zdCBcXFwibWlkLXdheVxcXCIsIGluIGFuIG9wZXJhdGluZ1xcclxcbnN5c3RlbSBidWZmZXIgb3Igb3RoZXJ3aXNlIGZhaWwgdG8gcmVhY2ggdGhlIHN0cmVhbSBsZWFkZXIuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDMsIHtcbiAgICAgIGlkOiBcImF2YWlsYWJpbGl0eVwiLFxuICAgICAgY2hpbGRyZW46IFwiU3RyZWFtIEF2YWlsYWJpbGl0eVwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiQSBzdHJlYW0gc2hvdWxkIGJlIGFibGUgdG8gdG9sZXJhdGUgYSBtaW5vcml0eSBvZiBzdHJlYW0gcmVwbGljYXMgYmVjb21pbmcgdW5hdmFpbGFibGVcXHJcXG53aXRoIG5vIG9yIGxpdHRsZSBlZmZlY3Qgb24gYXZhaWxhYmlsaXR5LlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJOb3RlIHRoYXQgZGVwZW5kaW5nIG9uIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi9wYXJ0aXRpb25zXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInBhcnRpdGlvbiBoYW5kbGluZyBzdHJhdGVneVwiXG4gICAgICB9KSwgXCJcXHJcXG51c2VkIFJhYmJpdE1RIG1heSByZXN0YXJ0IGl0c2VsZiBkdXJpbmcgcmVjb3ZlcnkgYW5kIHJlc2V0IHRoZSBub2RlIGJ1dCBhcyBsb25nIGFzIHRoYXRcXHJcXG5kb2VzIG5vdCBoYXBwZW4sIHRoaXMgYXZhaWxhYmlsaXR5IGd1YXJhbnRlZSBzaG91bGQgaG9sZCB0cnVlLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkZvciBleGFtcGxlLCBhIHN0cmVhbSB3aXRoIHRocmVlIHJlcGxpY2FzIGNhbiB0b2xlcmF0ZSBvbmUgbm9kZSBmYWlsdXJlIHdpdGhvdXQgbG9zaW5nIGF2YWlsYWJpbGl0eS5cXHJcXG5BIHN0cmVhbSB3aXRoIGZpdmUgcmVwbGljYXMgY2FuIHRvbGVyYXRlIHR3bywgYW5kIHNvIG9uLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiSWYgYSBxdW9ydW0gb2Ygbm9kZXMgY2Fubm90IGJlIHJlY292ZXJlZCAoc2F5IGlmIDIgb3V0IG9mIDMgUmFiYml0TVEgbm9kZXMgYXJlXFxyXFxucGVybWFuZW50bHkgbG9zdCkgdGhlIHF1ZXVlIGlzIHBlcm1hbmVudGx5IHVuYXZhaWxhYmxlIGFuZFxcclxcbndpbGwgbW9zdCBsaWtlbHkgbmVlZCBvcGVyYXRvciBpbnZvbHZlbWVudCB0byBiZSByZWNvdmVyZWQuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwiY29uZmlndXJhdGlvblwiLFxuICAgICAgY2hpbGRyZW46IFwiQ29uZmlndXJpbmcgU3RyZWFtc1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJGb3Igc3RyZWFtIHByb3RvY29sIHBvcnQsIFRMUyBhbmQgb3RoZXIgY29uZmlndXJhdGlvbiwgc2VlIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiLi9zdHJlYW1cIixcbiAgICAgICAgY2hpbGRyZW46IFwiU3RyZWFtIHBsdWdpbiBndWlkZVwiXG4gICAgICB9KSwgXCIuXFxyXFxuRm9yIHJlcXVpcmVkIHN0cmVhbSByZXBsaWNhdGlvbiBwb3J0cyBzZWUgdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL25ldHdvcmtpbmcjcG9ydHNcIixcbiAgICAgICAgY2hpbGRyZW46IFwiTmV0d29ya2luZyBndWlkZVwiXG4gICAgICB9KSwgXCIuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcInJlc291cmNlLXVzZVwiLFxuICAgICAgY2hpbGRyZW46IFwiSG93IFN0cmVhbXMgVXNlIFJlc291cmNlc1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiU3RyZWFtcyB1c3VhbGx5IHdpbGwgaGF2ZSBsb3dlciBDUFUgYW5kIG1lbW9yeSBmb290cHJpbnQgdGhhbiBxdW9ydW0gcXVldWVzLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiQWxsIGRhdGEgaXMgc3RvcmVkIG9uIGRpc2sgd2l0aCBvbmx5IHVud3JpdHRlbiBkYXRhIHN0b3JlZCBpbiBtZW1vcnkuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwib2Zmc2V0LXRyYWNraW5nXCIsXG4gICAgICBjaGlsZHJlbjogXCJPZmZzZXQgVHJhY2tpbmcgd2hlbiB1c2luZyBTdHJlYW1zXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIldoZW4gdXNpbmcgdGhlIGJyb2tlciBwcm92aWRlZCBvZmZzZXQgdHJhY2tpbmcgZmVhdHVyZXMgKGN1cnJlbnRseSBvbmx5IGF2YWlsYWJsZVxcclxcbndoZW4gdXNpbmcgdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIuL3N0cmVhbVwiLFxuICAgICAgICBjaGlsZHJlbjogXCJTdHJlYW0gcGx1Z2luXCJcbiAgICAgIH0pLCBcIikgb2Zmc2V0cyBhcmUgcGVyc2lzdGVkIGluIHRoZSBzdHJlYW1cXHJcXG5pdHNlbGYgYXMgbm9uLW1lc3NhZ2UgZGF0YS4gVGhpcyBtZWFucyB0aGF0IGFzIG9mZnNldCBwZXJzaXN0ZW5jZSBpcyByZXF1ZXN0ZWQgdGhlXFxyXFxuc3RyZWFtIHdpbGwgZ3JvdyBvbiBkaXNrIGJ5IHNvbWUgc21hbGwgYW1vdW50IHBlciBvZmZzZXQgcGVyc2lzdGVuY2UgcmVxdWVzdC5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwibGltaXRhdGlvbnNcIixcbiAgICAgIGNoaWxkcmVuOiBcIkxpbWl0YXRpb25zXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwibGltaXRhdGlvbnMtbWVzc2FnZS1lbmNvZGluZ1wiLFxuICAgICAgY2hpbGRyZW46IFwiTWVzc2FnZSBFbmNvZGluZ1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiU3RyZWFtcyBpbnRlcm5hbGx5IHN0b3JlIHRoZWlyIG1lc3NhZ2VzIGFzIEFNUVAgMS4wIGVuY29kZWQgZGF0YS4gVGhpcyBtZWFucyB3aGVuXFxyXFxucHVibGlzaGluZyB1c2luZyBBTVFQIDAuOS4xIGEgY29udmVyc2lvbiB0YWtlcyBwbGFjZS4gQWx0aG91Z2ggdGhlIEFNUVAgMS4wIGRhdGFcXHJcXG5tb2RlbCBpcyBtb3N0bHkgY2FwYWJsZSBvZiBjb250YWluaW5nIGFsbCBvZiBBTVFQIDAuOS4xJ3MgZGF0YSBtb2RlbCB0aGVyZSBhcmUgc29tZVxcclxcbmxpbWl0YXRpb25zLiBJZiBhbiBBTVFQIDAuOS4xIG1lc3NhZ2UgY29udGFpbnMgaGVhZGVyIGVudHJpZXMgd2l0aCBjb21wbGV4IHZhbHVlc1xcclxcbnN1Y2ggYXMgYXJyYXlzIG9yIHRhYmxlcyB0aGVzZSBoZWFkZXJzIHdpbGwgbm90IGJlIGNvbnZlcnRlZC5cXHJcXG5UaGF0IGlzIGJlY2F1c2UgaGVhZGVycyBhcmUgc3RvcmVkIGFzIGFwcGxpY2F0aW9uIHByb3BlcnRpZXMgaW5zaWRlIHRoZSBBTVFQIDEuMCBtZXNzYWdlIGFuZCB0aGVzZSBjYW4gb25seVxcclxcbmNvbnRhaW4gdmFsdWVzIG9mIHNpbXBsZSB0eXBlcywgc3VjaCBhcyBzdHJpbmdzIGFuZCBudW1iZXJzLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDMsIHtcbiAgICAgIGlkOiBcImxpbWl0YXRpb25zLXVpLW1ldHJpY3NcIixcbiAgICAgIGNoaWxkcmVuOiBcIlVJIE1ldHJpYyBBY2N1cmFjeVwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiTWFuYWdlbWVudCBVSSBjYW4gc2hvdyBhIG1lc3NhZ2UgY291bnQgdGhhdCBzbGlnaHRseSBleGNlZWRzIHRoZSBhY3R1YWwgY291bnQgaW4gdGhlIHN0cmVhbS5cXHJcXG5EdWUgdG8gdGhlIHdheSBzdHJlYW0gc3RvcmFnZSBpcyBpbXBsZW1lbnRlZCwgb2Zmc2V0IHRyYWNraW5nIGluZm9ybWF0aW9uIGlzIGFsc28gY291bnRlZCBhcyBtZXNzYWdlcywgbWFraW5nIHRoZSBtZXNzYWdlIGNvdW50IGFydGlmaWNpYWxseSBsYXJnZXIgdGhhbiBpdCBpcy5cXHJcXG5UaGlzIHNob3VsZCBtYWtlIG5vIHByYWN0aWNhbCBkaWZmZXJlbmNlIGluIG1vc3Qgc3lzdGVtcy5cIlxuICAgIH0pXVxuICB9KTtcbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQocHJvcHMgPSB7fSkge1xuICBjb25zdCB7d3JhcHBlcjogTURYTGF5b3V0fSA9IHtcbiAgICAuLi5fcHJvdmlkZUNvbXBvbmVudHMoKSxcbiAgICAuLi5wcm9wcy5jb21wb25lbnRzXG4gIH07XG4gIHJldHVybiBNRFhMYXlvdXQgPyBfanN4KE1EWExheW91dCwge1xuICAgIC4uLnByb3BzLFxuICAgIGNoaWxkcmVuOiBfanN4KF9jcmVhdGVNZHhDb250ZW50LCB7XG4gICAgICAuLi5wcm9wc1xuICAgIH0pXG4gIH0pIDogX2NyZWF0ZU1keENvbnRlbnQocHJvcHMpO1xufVxuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./versioned_docs/version-4.0/streams.md\n");

/***/ })

}]);