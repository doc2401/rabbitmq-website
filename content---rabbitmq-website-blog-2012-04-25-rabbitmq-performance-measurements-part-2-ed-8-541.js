"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkrabbitmq_website"] = globalThis["webpackChunkrabbitmq_website"] || []).push([["content---rabbitmq-website-blog-2012-04-25-rabbitmq-performance-measurements-part-2-ed-8-541"],{

/***/ "./.docusaurus/docusaurus-plugin-content-blog/default/site-blog-2012-04-25-rabbitmq-performance-measurements-part-2-index-md-ed8.json":
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"permalink":"/rabbitmq-website/blog/2012/04/25/rabbitmq-performance-measurements-part-2","editUrl":"https://github.com/rabbitmq/rabbitmq-website/tree/main/blog/2012-04-25-rabbitmq-performance-measurements-part-2/index.md","source":"@site/blog/2012-04-25-rabbitmq-performance-measurements-part-2/index.md","title":"RabbitMQ Performance Measurements, part 2","description":"Welcome back! Last time we talked about flow control and","date":"2012-04-25T00:00:00.000Z","tags":[{"inline":true,"label":"Performance","permalink":"/rabbitmq-website/blog/tags/performance"}],"readingTime":6.135,"hasTruncateMarker":true,"authors":[{"name":"Simon MacMullen","key":"simon","page":null}],"frontMatter":{"title":"RabbitMQ Performance Measurements, part 2","tags":["Performance"],"authors":["simon"]},"unlisted":false,"prevItem":{"title":"Some queuing theory: throughput, latency and bandwidth","permalink":"/rabbitmq-website/blog/2012/05/11/some-queuing-theory-throughput-latency-and-bandwidth"},"nextItem":{"title":"London Realtime hackweekend","permalink":"/rabbitmq-website/blog/2012/04/17/london-realtime-hackweekend"}}');

/***/ }),

/***/ "./blog/2012-04-25-rabbitmq-performance-measurements-part-2/index.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assets: () => (/* binding */ assets),\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   metadata: () => (/* reexport default export from named module */ _site_docusaurus_docusaurus_plugin_content_blog_default_site_blog_2012_04_25_rabbitmq_performance_measurements_part_2_index_md_ed8_json__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var _site_docusaurus_docusaurus_plugin_content_blog_default_site_blog_2012_04_25_rabbitmq_performance_measurements_part_2_index_md_ed8_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.docusaurus/docusaurus-plugin-content-blog/default/site-blog-2012-04-25-rabbitmq-performance-measurements-part-2-index-md-ed8.json\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n\n\nconst frontMatter = {\n\ttitle: 'RabbitMQ Performance Measurements, part 2',\n\ttags: [\n\t\t'Performance'\n\t],\n\tauthors: [\n\t\t'simon'\n\t]\n};\nconst contentTitle = undefined;\n\nconst assets = {\n\"authorsImageUrls\": [undefined],\n};\n\n\n\nconst toc = [{\n  \"value\": \"Some Simple Scenarios\",\n  \"id\": \"some-simple-scenarios\",\n  \"level\": 2\n}, {\n  \"value\": \"Message Sizes\",\n  \"id\": \"message-sizes\",\n  \"level\": 2\n}, {\n  \"value\": \"1 -&gt; 1 sending rate message sizes\",\n  \"id\": \"1---1-sending-rate-message-sizes\",\n  \"level\": 3\n}, {\n  \"value\": \"n -&gt; 0 sending msg rate vs number of producers, for various message sizes\",\n  \"id\": \"n---0-sending-msg-rate-vs-number-of-producers-for-various-message-sizes\",\n  \"level\": 3\n}, {\n  \"value\": \"n -&gt; 0 sending bytes rate vs number of producers, for various message sizes\",\n  \"id\": \"n---0-sending-bytes-rate-vs-number-of-producers-for-various-message-sizes\",\n  \"level\": 3\n}, {\n  \"value\": \"1 -&gt; n receiving rate vs consumer count / prefetch count\",\n  \"id\": \"1---n-receiving-rate-vs-consumer-count--prefetch-count\",\n  \"level\": 3\n}, {\n  \"value\": \"Large queues\",\n  \"id\": \"large-queues\",\n  \"level\": 2\n}, {\n  \"value\": \"Queue load / drain 500k messages\",\n  \"id\": \"queue-load--drain-500k-messages\",\n  \"level\": 3\n}, {\n  \"value\": \"Queue load / drain 10M messages\",\n  \"id\": \"queue-load--drain-10m-messages\",\n  \"level\": 3\n}, {\n  \"value\": \"Learn More\",\n  \"id\": \"learn-more\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    img: \"img\",\n    li: \"li\",\n    p: \"p\",\n    ul: \"ul\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Welcome back! \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/blog/2012/04/16/rabbitmq-performance-measurements-part-1\",\n        children: \"Last time\"\n      }), \" we talked about flow control and\\r\\nlatency; today let's talk about how different features affect\\r\\nthe performance we see. Here are some simple scenarios. As\\r\\nbefore, they're all variations on the theme of one publisher and\\r\\none consumer publishing as fast as they can.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"some-simple-scenarios\",\n      children: \"Some Simple Scenarios\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n        src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-01.png\")[\"default\"]) + \"\",\n        width: \"415\",\n        height: \"142\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This first scenario is the simplest - just one producer and\\r\\none consumer. So we have a baseline.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n        src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-02.png\")[\"default\"]) + \"\",\n        width: \"408\",\n        height: \"145\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Of course we want to produce impressive figures. So we can go\\r\\na bit faster than that - if we don't consume anything then we\\r\\ncan publish faster.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n        src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-03.png\")[\"default\"]) + \"\",\n        width: \"410\",\n        height: \"143\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This uses a couple of the cores on our server - but not all of\\r\\nthem. So for the best headline-grabbing rate, we start a\\r\\nnumber of parallel producers, all publishing into nothing.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n        src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-04.png\")[\"default\"]) + \"\",\n        width: \"408\",\n        height: \"143\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Of course, consuming is rather important! So for the headline\\r\\nconsuming rate, we publish to a large number of consumers in\\r\\nparallel.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Of course to some extent this quest for large numbers is a bit\\r\\nsilly, we're more interested in relative performance. So let's\\r\\nrevert to one producer and one consumer.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n        src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-05.png\")[\"default\"]) + \"\",\n        width: \"410\",\n        height: \"136\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Now let's try publishing with the mandatory flag set. We drop\\r\\nto about 40% of the non-mandatory rate. The reason for this is\\r\\nthat the channel we're publishing to can't just asynchronously\\r\\nstream messages at queues any more; it synchronously checks\\r\\nwith the queues to make sure they're still there. (Yes, we\\r\\ncould probably make mandatory publishing faster, but it's not\\r\\nvery heavily used.)\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n        src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-06.png\")[\"default\"]) + \"\",\n        width: \"400\",\n        height: \"139\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The immediate flag gives us almost exactly the same drop in\\r\\nperformance. This isn't hugely surprising - it has to make the\\r\\nsame synchronous check with the queue.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n        src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-07.png\")[\"default\"]) + \"\",\n        width: \"400\",\n        height: \"140\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Scrapping the rarely-used mandatory and immediate flags, let's\\r\\ntry turning on acknowledgements for delivered messages. We still\\r\\nsee a performance drop compared to delivering without\\r\\nacknowledgements (the server has to do more bookkeeping after\\r\\nall) but it's less noticeable.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n        src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-08.png\")[\"default\"]) + \"\",\n        width: \"403\",\n        height: \"135\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Now we turn on publish confirms as well. Performance drops a\\r\\nlittle more but we're still at over 60% the speed of neither\\r\\nacks nor confirms.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n        src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-09.png\")[\"default\"]) + \"\",\n        width: \"402\",\n        height: \"139\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Finally, we enable message persistence. The rate becomes much\\r\\nlower, since we're throwing all those messages at the disk as\\r\\nwell.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"message-sizes\",\n      children: \"Message Sizes\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Notably, all the messages we've been sending until now have only\\r\\nbeen a few bytes long. There are a couple of reasons for this:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Quite a lot of the work done by RabbitMQ is per-message, not\\r\\nper-byte-of-message.\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"It's always nice to look at big numbers.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"But in the real world we will often want to send bigger\\r\\nmessages. So let's look at the next chart:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"1---1-sending-rate-message-sizes\",\n      children: \"1 -> 1 sending rate message sizes\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n        src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-10.png\")[\"default\"]) + \"\",\n        width: \"832\",\n        height: \"354\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Here (again) we're sending unacked / unconfirmed messages as\\r\\nfast as possible, but this time we vary the message size. We\\r\\ncan see that (of course) the message rate drops further as the\\r\\nsize increases, but the actual number of bytes sent increases as\\r\\nwe have less and less routing overhead.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"So how does the message size affect horizontal scaling? Let's\\r\\nvary the number of producers with different message sizes. Just\\r\\nfor a change, in this test we're not going to have any consumers\\r\\nar all.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"n---0-sending-msg-rate-vs-number-of-producers-for-various-message-sizes\",\n      children: \"n -> 0 sending msg rate vs number of producers, for various message sizes\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n        src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-11.png\")[\"default\"]) + \"\",\n        width: \"731\",\n        height: \"345\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"n---0-sending-bytes-rate-vs-number-of-producers-for-various-message-sizes\",\n      children: \"n -> 0 sending bytes rate vs number of producers, for various message sizes\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n        src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-12.png\")[\"default\"]) + \"\",\n        width: \"727\",\n        height: \"342\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"In these tests we can see that for small messages it only takes\\r\\na couple of producers to reach an upper bound on how many\\r\\nmessages we can publish, but that for larger messages we need\\r\\nmore producers to use the available bandwidth.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Another frequently confusing issue is performance around\\r\\nconsumers with a prefetch count. RabbitMQ (well, AMQP) defaults\\r\\nto sending all the messages it can to any consumer that looks\\r\\nready to accept them. The maximum number of these unacknowledged\\r\\nmessages per channel can be limited by setting the prefetch\\r\\ncount. However, small prefetch counts can hurt performance\\r\\n(since we can be waiting for acks to arrive before sending out\\r\\nmore messages).\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"So let's have a look at prefetch count and, while we're there,\\r\\nalso consider the number of consumers consuming from a single\\r\\nqueue. This chart contains some deliberately absurd extremes.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"1---n-receiving-rate-vs-consumer-count--prefetch-count\",\n      children: \"1 -> n receiving rate vs consumer count / prefetch count\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n        src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-13.png\")[\"default\"]) + \"\",\n        width: \"738\",\n        height: \"350\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The first thing to notice is that tiny prefetch counts really\\r\\nhurt performance. Note the large difference in performance\\r\\nbetween prefetch = 1 and prefetch = 2! But we also get into\\r\\ndiminishing returns - notice that the difference between\\r\\nprefetch = 20 and prefetch = 50 is hard to see, and the\\r\\ndifference between prefetch = 50 and prefetch = 10000 is almost\\r\\ninvisible. Of course, this is because for our particular network\\r\\nlink prefetch = 50 already ensures that we never starve the\\r\\nconsumer while waiting for acks. Of course, this test was run\\r\\nover a low latency link - more latent links will benefit from a\\r\\nhigher prefetch count.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The second thing to notice is that when we have a small number\\r\\nof consumers, adding one more will increase performance (we get\\r\\nmore parallellism). And with a tiny prefetch count, increasing\\r\\nconsumers even up to a large number has benefits (since each\\r\\nindividual consumer spends much of its time starved). But when\\r\\nwe have a larger prefetch count, increasing the number of\\r\\nconsumers is not so helpful, since even a small number can kept\\r\\nbusy enough to max out our queue, but the more consumers we have\\r\\nthe more work RabbitMQ has to do to keep track of all of them.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"large-queues\",\n      children: \"Large queues\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"All the examples we've looked at so far have one thing in\\r\\ncommon: very few messages actually get queued. In general we've\\r\\nlooked at scenarios where messages get consumed as quickly as\\r\\nthey get produced, and thus each queue has an average length of\\r\\n0.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"So what happens whe queues get big? When queues are small(ish)\\r\\nthey will reside entirely within memory. Persistent messages\\r\\nwill also get written to disc, but they will only get read again\\r\\nif the broker restarts.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"But when queues get larger, they will get paged to disc,\\r\\npersistent or not. In this case performance can take a hit as\\r\\nsuddenly we need to access the disc to send messages to\\r\\nconsumers. So let's run a test: publish a lot of non-persistent\\r\\nmessages to a queue, and then consume them all.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"queue-load--drain-500k-messages\",\n      children: \"Queue load / drain 500k messages\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n        src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-14.png\")[\"default\"]) + \"\",\n        width: \"724\",\n        height: \"340\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"In this small case we can see fairly consistent performance:\\r\\nthe messages go into the queue fairly quickly and then come out\\r\\neven more quickly.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"queue-load--drain-10m-messages\",\n      children: \"Queue load / drain 10M messages\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n        src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-15.png\")[\"default\"]) + \"\",\n        width: \"725\",\n        height: \"339\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"But when we have a larger queue we see that the performance\\r\\nvaries a lot more. We see that when loading the queue we\\r\\ninitially get a very high throughput, then a pause while some of\\r\\nthe queue is paged out to disc, then a more consistent lower\\r\\nthroughput. Similarly when draining the queue we see a much\\r\\nlower rate when pulling the messages from disc.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Performance of disc-bound queues is a complex topic -\\r\\nsee \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/blog/2011/10/27/performance-of-queues-when-less-is-more\",\n        children: \"Matthew's\\r\\nblog post on the subject\"\n      }), \" for some more talk on the subject.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"learn-more\",\n      children: \"Learn More\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Webinar: \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"https://content.pivotal.io/webinars/may-23-what-s-new-in-rabbitmq-3-8-webinar?utm_campaign=rabbitmq-blog-3.8-webinar-q319&utm_source=rabbitmq&utm_medium=website\",\n          children: \"What's new in RabbitMQ 3.8?\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Webinar: \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"https://content.pivotal.io/webinars/dec-12-10-things-every-developer-using-rabbitmq-should-know-webinar?utm_campaign=rabbitmq-blog-10-things-q319&utm_source=rabbitmq&utm_medium=website\",\n          children: \"10 Things Every Developer Using RabbitMQ Should Know\"\n        })]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./blog/2012-04-25-rabbitmq-performance-measurements-part-2/index.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanM/MjA0NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbXBvcnQge01EWENvbXBvbmVudHN9IGZyb20gJ21keC90eXBlcy5qcydcbiAqIEBpbXBvcnQge0NvbXBvbmVudCwgUmVhY3RFbGVtZW50LCBSZWFjdE5vZGV9IGZyb20gJ3JlYWN0J1xuICovXG5cbi8qKlxuICogQGNhbGxiYWNrIE1lcmdlQ29tcG9uZW50c1xuICogICBDdXN0b20gbWVyZ2UgZnVuY3Rpb24uXG4gKiBAcGFyYW0ge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSBjdXJyZW50Q29tcG9uZW50c1xuICogICBDdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgY29udGV4dC5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMuXG4gKlxuICogQHR5cGVkZWYgUHJvcHNcbiAqICAgQ29uZmlndXJhdGlvbiBmb3IgYE1EWFByb3ZpZGVyYC5cbiAqIEBwcm9wZXJ0eSB7UmVhY3ROb2RlIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NoaWxkcmVuXVxuICogICBDaGlsZHJlbiAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbiB8IG51bGwgfCB1bmRlZmluZWR9IFtkaXNhYmxlUGFyZW50Q29udGV4dD1mYWxzZV1cbiAqICAgVHVybiBvZmYgb3V0ZXIgY29tcG9uZW50IGNvbnRleHQgKGRlZmF1bHQ6IGBmYWxzZWApLlxuICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuLyoqIEB0eXBlIHtSZWFkb25seTxNRFhDb21wb25lbnRzPn0gKi9cbmNvbnN0IGVtcHR5Q29tcG9uZW50cyA9IHt9XG5cbmNvbnN0IE1EWENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KGVtcHR5Q29tcG9uZW50cylcblxuLyoqXG4gKiBHZXQgY3VycmVudCBjb21wb25lbnRzIGZyb20gdGhlIE1EWCBDb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz4gfCBNZXJnZUNvbXBvbmVudHMgfCBudWxsIHwgdW5kZWZpbmVkfSBbY29tcG9uZW50c11cbiAqICAgQWRkaXRpb25hbCBjb21wb25lbnRzIHRvIHVzZSBvciBhIGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyB0aGVtIChvcHRpb25hbCkuXG4gKiBAcmV0dXJucyB7TURYQ29tcG9uZW50c31cbiAqICAgQ3VycmVudCBjb21wb25lbnRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlTURYQ29tcG9uZW50cyhjb21wb25lbnRzKSB7XG4gIGNvbnN0IGNvbnRleHRDb21wb25lbnRzID0gUmVhY3QudXNlQ29udGV4dChNRFhDb250ZXh0KVxuXG4gIC8vIE1lbW9pemUgdG8gYXZvaWQgdW5uZWNlc3NhcnkgdG9wLWxldmVsIGNvbnRleHQgY2hhbmdlc1xuICByZXR1cm4gUmVhY3QudXNlTWVtbyhcbiAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBDdXN0b20gbWVyZ2UgdmlhIGEgZnVuY3Rpb24gcHJvcFxuICAgICAgaWYgKHR5cGVvZiBjb21wb25lbnRzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBjb21wb25lbnRzKGNvbnRleHRDb21wb25lbnRzKVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gey4uLmNvbnRleHRDb21wb25lbnRzLCAuLi5jb21wb25lbnRzfVxuICAgIH0sXG4gICAgW2NvbnRleHRDb21wb25lbnRzLCBjb21wb25lbnRzXVxuICApXG59XG5cbi8qKlxuICogUHJvdmlkZXIgZm9yIE1EWCBjb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8UHJvcHM+fSBwcm9wZXJ0aWVzXG4gKiAgIFByb3BlcnRpZXMuXG4gKiBAcmV0dXJucyB7UmVhY3RFbGVtZW50fVxuICogICBFbGVtZW50LlxuICogQHNhdGlzZmllcyB7Q29tcG9uZW50fVxuICovXG5leHBvcnQgZnVuY3Rpb24gTURYUHJvdmlkZXIocHJvcGVydGllcykge1xuICAvKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuICBsZXQgYWxsQ29tcG9uZW50c1xuXG4gIGlmIChwcm9wZXJ0aWVzLmRpc2FibGVQYXJlbnRDb250ZXh0KSB7XG4gICAgYWxsQ29tcG9uZW50cyA9XG4gICAgICB0eXBlb2YgcHJvcGVydGllcy5jb21wb25lbnRzID09PSAnZnVuY3Rpb24nXG4gICAgICAgID8gcHJvcGVydGllcy5jb21wb25lbnRzKGVtcHR5Q29tcG9uZW50cylcbiAgICAgICAgOiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgfHwgZW1wdHlDb21wb25lbnRzXG4gIH0gZWxzZSB7XG4gICAgYWxsQ29tcG9uZW50cyA9IHVzZU1EWENvbXBvbmVudHMocHJvcGVydGllcy5jb21wb25lbnRzKVxuICB9XG5cbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgTURYQ29udGV4dC5Qcm92aWRlcixcbiAgICB7dmFsdWU6IGFsbENvbXBvbmVudHN9LFxuICAgIHByb3BlcnRpZXMuY2hpbGRyZW5cbiAgKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-01.png":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/performance-01-53e4b7f8479b6d209098da2993a696b8.png\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYmxvZy8yMDEyLTA0LTI1LXJhYmJpdG1xLXBlcmZvcm1hbmNlLW1lYXN1cmVtZW50cy1wYXJ0LTIvcGVyZm9ybWFuY2UtMDEucG5nIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ibG9nLzIwMTItMDQtMjUtcmFiYml0bXEtcGVyZm9ybWFuY2UtbWVhc3VyZW1lbnRzLXBhcnQtMi9wZXJmb3JtYW5jZS0wMS5wbmc/OWVjNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy9wZXJmb3JtYW5jZS0wMS01M2U0YjdmODQ3OWI2ZDIwOTA5OGRhMjk5M2E2OTZiOC5wbmdcIjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-01.png\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-02.png":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/performance-02-482b0e11f1d846aea783163a1aae5682.png\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYmxvZy8yMDEyLTA0LTI1LXJhYmJpdG1xLXBlcmZvcm1hbmNlLW1lYXN1cmVtZW50cy1wYXJ0LTIvcGVyZm9ybWFuY2UtMDIucG5nIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ibG9nLzIwMTItMDQtMjUtcmFiYml0bXEtcGVyZm9ybWFuY2UtbWVhc3VyZW1lbnRzLXBhcnQtMi9wZXJmb3JtYW5jZS0wMi5wbmc/OGYxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy9wZXJmb3JtYW5jZS0wMi00ODJiMGUxMWYxZDg0NmFlYTc4MzE2M2ExYWFlNTY4Mi5wbmdcIjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-02.png\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-03.png":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/performance-03-c0437f57dca2256d5cef354b08ca9e81.png\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYmxvZy8yMDEyLTA0LTI1LXJhYmJpdG1xLXBlcmZvcm1hbmNlLW1lYXN1cmVtZW50cy1wYXJ0LTIvcGVyZm9ybWFuY2UtMDMucG5nIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ibG9nLzIwMTItMDQtMjUtcmFiYml0bXEtcGVyZm9ybWFuY2UtbWVhc3VyZW1lbnRzLXBhcnQtMi9wZXJmb3JtYW5jZS0wMy5wbmc/YWI2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy9wZXJmb3JtYW5jZS0wMy1jMDQzN2Y1N2RjYTIyNTZkNWNlZjM1NGIwOGNhOWU4MS5wbmdcIjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-03.png\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-04.png":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/performance-04-be367a387efb33ba2862444654259159.png\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYmxvZy8yMDEyLTA0LTI1LXJhYmJpdG1xLXBlcmZvcm1hbmNlLW1lYXN1cmVtZW50cy1wYXJ0LTIvcGVyZm9ybWFuY2UtMDQucG5nIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ibG9nLzIwMTItMDQtMjUtcmFiYml0bXEtcGVyZm9ybWFuY2UtbWVhc3VyZW1lbnRzLXBhcnQtMi9wZXJmb3JtYW5jZS0wNC5wbmc/M2RkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy9wZXJmb3JtYW5jZS0wNC1iZTM2N2EzODdlZmIzM2JhMjg2MjQ0NDY1NDI1OTE1OS5wbmdcIjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-04.png\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-05.png":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/performance-05-5379baad074750e08a2310d058dd76ee.png\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYmxvZy8yMDEyLTA0LTI1LXJhYmJpdG1xLXBlcmZvcm1hbmNlLW1lYXN1cmVtZW50cy1wYXJ0LTIvcGVyZm9ybWFuY2UtMDUucG5nIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ibG9nLzIwMTItMDQtMjUtcmFiYml0bXEtcGVyZm9ybWFuY2UtbWVhc3VyZW1lbnRzLXBhcnQtMi9wZXJmb3JtYW5jZS0wNS5wbmc/NjUwYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy9wZXJmb3JtYW5jZS0wNS01Mzc5YmFhZDA3NDc1MGUwOGEyMzEwZDA1OGRkNzZlZS5wbmdcIjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-05.png\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-06.png":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/performance-06-6d211bb97d15f77782754bc587237624.png\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYmxvZy8yMDEyLTA0LTI1LXJhYmJpdG1xLXBlcmZvcm1hbmNlLW1lYXN1cmVtZW50cy1wYXJ0LTIvcGVyZm9ybWFuY2UtMDYucG5nIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ibG9nLzIwMTItMDQtMjUtcmFiYml0bXEtcGVyZm9ybWFuY2UtbWVhc3VyZW1lbnRzLXBhcnQtMi9wZXJmb3JtYW5jZS0wNi5wbmc/YWZlYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy9wZXJmb3JtYW5jZS0wNi02ZDIxMWJiOTdkMTVmNzc3ODI3NTRiYzU4NzIzNzYyNC5wbmdcIjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-06.png\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-07.png":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/performance-07-1dfce12b11895830f5736b73bafb6be5.png\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYmxvZy8yMDEyLTA0LTI1LXJhYmJpdG1xLXBlcmZvcm1hbmNlLW1lYXN1cmVtZW50cy1wYXJ0LTIvcGVyZm9ybWFuY2UtMDcucG5nIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ibG9nLzIwMTItMDQtMjUtcmFiYml0bXEtcGVyZm9ybWFuY2UtbWVhc3VyZW1lbnRzLXBhcnQtMi9wZXJmb3JtYW5jZS0wNy5wbmc/YTU4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy9wZXJmb3JtYW5jZS0wNy0xZGZjZTEyYjExODk1ODMwZjU3MzZiNzNiYWZiNmJlNS5wbmdcIjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-07.png\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-08.png":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/performance-08-5588a9e86dcb353e3fa0d24ddbea1afe.png\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYmxvZy8yMDEyLTA0LTI1LXJhYmJpdG1xLXBlcmZvcm1hbmNlLW1lYXN1cmVtZW50cy1wYXJ0LTIvcGVyZm9ybWFuY2UtMDgucG5nIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ibG9nLzIwMTItMDQtMjUtcmFiYml0bXEtcGVyZm9ybWFuY2UtbWVhc3VyZW1lbnRzLXBhcnQtMi9wZXJmb3JtYW5jZS0wOC5wbmc/MTVjZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy9wZXJmb3JtYW5jZS0wOC01NTg4YTllODZkY2IzNTNlM2ZhMGQyNGRkYmVhMWFmZS5wbmdcIjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-08.png\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-09.png":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/performance-09-184a1e18a0b660da058a98fdd7736e68.png\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYmxvZy8yMDEyLTA0LTI1LXJhYmJpdG1xLXBlcmZvcm1hbmNlLW1lYXN1cmVtZW50cy1wYXJ0LTIvcGVyZm9ybWFuY2UtMDkucG5nIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ibG9nLzIwMTItMDQtMjUtcmFiYml0bXEtcGVyZm9ybWFuY2UtbWVhc3VyZW1lbnRzLXBhcnQtMi9wZXJmb3JtYW5jZS0wOS5wbmc/NTIwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy9wZXJmb3JtYW5jZS0wOS0xODRhMWUxOGEwYjY2MGRhMDU4YTk4ZmRkNzczNmU2OC5wbmdcIjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-09.png\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-10.png":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/performance-10-ac43101451b729984424e08171c63af5.png\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYmxvZy8yMDEyLTA0LTI1LXJhYmJpdG1xLXBlcmZvcm1hbmNlLW1lYXN1cmVtZW50cy1wYXJ0LTIvcGVyZm9ybWFuY2UtMTAucG5nIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ibG9nLzIwMTItMDQtMjUtcmFiYml0bXEtcGVyZm9ybWFuY2UtbWVhc3VyZW1lbnRzLXBhcnQtMi9wZXJmb3JtYW5jZS0xMC5wbmc/NzQ0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy9wZXJmb3JtYW5jZS0xMC1hYzQzMTAxNDUxYjcyOTk4NDQyNGUwODE3MWM2M2FmNS5wbmdcIjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-10.png\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-11.png":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/performance-11-cbd67ffebbbf90366d94e113bf5db09c.png\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYmxvZy8yMDEyLTA0LTI1LXJhYmJpdG1xLXBlcmZvcm1hbmNlLW1lYXN1cmVtZW50cy1wYXJ0LTIvcGVyZm9ybWFuY2UtMTEucG5nIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ibG9nLzIwMTItMDQtMjUtcmFiYml0bXEtcGVyZm9ybWFuY2UtbWVhc3VyZW1lbnRzLXBhcnQtMi9wZXJmb3JtYW5jZS0xMS5wbmc/YjI1OCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy9wZXJmb3JtYW5jZS0xMS1jYmQ2N2ZmZWJiYmY5MDM2NmQ5NGUxMTNiZjVkYjA5Yy5wbmdcIjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-11.png\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-12.png":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/performance-12-d5c8a7ec98f67a502b2aa7e1bc9e403f.png\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYmxvZy8yMDEyLTA0LTI1LXJhYmJpdG1xLXBlcmZvcm1hbmNlLW1lYXN1cmVtZW50cy1wYXJ0LTIvcGVyZm9ybWFuY2UtMTIucG5nIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ibG9nLzIwMTItMDQtMjUtcmFiYml0bXEtcGVyZm9ybWFuY2UtbWVhc3VyZW1lbnRzLXBhcnQtMi9wZXJmb3JtYW5jZS0xMi5wbmc/M2FmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy9wZXJmb3JtYW5jZS0xMi1kNWM4YTdlYzk4ZjY3YTUwMmIyYWE3ZTFiYzllNDAzZi5wbmdcIjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-12.png\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-13.png":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/performance-13-d2660027218e3060b1600026ce809a07.png\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYmxvZy8yMDEyLTA0LTI1LXJhYmJpdG1xLXBlcmZvcm1hbmNlLW1lYXN1cmVtZW50cy1wYXJ0LTIvcGVyZm9ybWFuY2UtMTMucG5nIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ibG9nLzIwMTItMDQtMjUtcmFiYml0bXEtcGVyZm9ybWFuY2UtbWVhc3VyZW1lbnRzLXBhcnQtMi9wZXJmb3JtYW5jZS0xMy5wbmc/OGU4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy9wZXJmb3JtYW5jZS0xMy1kMjY2MDAyNzIxOGUzMDYwYjE2MDAwMjZjZTgwOWEwNy5wbmdcIjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-13.png\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-14.png":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/performance-14-d0e62e3609a920eb9a95fa2b78c4291a.png\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYmxvZy8yMDEyLTA0LTI1LXJhYmJpdG1xLXBlcmZvcm1hbmNlLW1lYXN1cmVtZW50cy1wYXJ0LTIvcGVyZm9ybWFuY2UtMTQucG5nIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ibG9nLzIwMTItMDQtMjUtcmFiYml0bXEtcGVyZm9ybWFuY2UtbWVhc3VyZW1lbnRzLXBhcnQtMi9wZXJmb3JtYW5jZS0xNC5wbmc/NTNmNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy9wZXJmb3JtYW5jZS0xNC1kMGU2MmUzNjA5YTkyMGViOWE5NWZhMmI3OGM0MjkxYS5wbmdcIjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-14.png\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-15.png":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/performance-15-68dd5922019e7bd8231b40234c7efc41.png\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYmxvZy8yMDEyLTA0LTI1LXJhYmJpdG1xLXBlcmZvcm1hbmNlLW1lYXN1cmVtZW50cy1wYXJ0LTIvcGVyZm9ybWFuY2UtMTUucG5nIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ibG9nLzIwMTItMDQtMjUtcmFiYml0bXEtcGVyZm9ybWFuY2UtbWVhc3VyZW1lbnRzLXBhcnQtMi9wZXJmb3JtYW5jZS0xNS5wbmc/YzY5NSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy9wZXJmb3JtYW5jZS0xNS02OGRkNTkyMjAxOWU3YmQ4MjMxYjQwMjM0YzdlZmM0MS5wbmdcIjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2012-04-25-rabbitmq-performance-measurements-part-2/performance-15.png\n");

/***/ })

}]);