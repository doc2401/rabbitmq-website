"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkrabbitmq_website"] = globalThis["webpackChunkrabbitmq_website"] || []).push([["content---rabbitmq-website-client-libraries-dotnet-api-guide-5-c-2-eb5"],{

/***/ "./.docusaurus/docusaurus-plugin-content-docs/client-libraries/site-client-libraries-dotnet-api-guide-md-5c2.json":
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"id":"dotnet-api-guide","title":".NET/C# Client API Guide","description":"<!--","source":"@site/client-libraries/dotnet-api-guide.md","sourceDirName":".","slug":"/dotnet-api-guide","permalink":"/rabbitmq-website/client-libraries/dotnet-api-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/rabbitmq/rabbitmq-website/tree/main/client-libraries/dotnet-api-guide.md","tags":[],"version":"current","frontMatter":{"title":".NET/C# Client API Guide"},"sidebar":"clientLibsSidebar","previous":{"title":".NET/C# RabbitMQ Client Library","permalink":"/rabbitmq-website/client-libraries/dotnet"},"next":{"title":"Erlang RabbitMQ client Library","permalink":"/rabbitmq-website/client-libraries/erlang-client"}}');

/***/ }),

/***/ "./client-libraries/dotnet-api-guide.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assets: () => (/* binding */ assets),\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   metadata: () => (/* reexport default export from named module */ _site_docusaurus_docusaurus_plugin_content_docs_client_libraries_site_client_libraries_dotnet_api_guide_md_5c2_json__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var _site_docusaurus_docusaurus_plugin_content_docs_client_libraries_site_client_libraries_dotnet_api_guide_md_5c2_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.docusaurus/docusaurus-plugin-content-docs/client-libraries/site-client-libraries-dotnet-api-guide-md-5c2.json\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n\n\nconst frontMatter = {\n\ttitle: '.NET/C# Client API Guide'\n};\nconst contentTitle = '.NET/C# Client API Guide';\n\nconst assets = {\n\n};\n\n\n\nconst toc = [{\n  \"value\": \"Overview\",\n  \"id\": \"overview\",\n  \"level\": 2\n}, {\n  \"value\": \".NET Version Requirements\",\n  \"id\": \"dotnet-versions\",\n  \"level\": 2\n}, {\n  \"value\": \"License\",\n  \"id\": \"license\",\n  \"level\": 2\n}, {\n  \"value\": \"Major namespaces, interfaces and classes\",\n  \"id\": \"major-api-elements\",\n  \"level\": 2\n}, {\n  \"value\": \"Limitations\",\n  \"id\": \"limitations\",\n  \"level\": 2\n}, {\n  \"value\": \"Connecting to RabbitMQ\",\n  \"id\": \"connecting\",\n  \"level\": 2\n}, {\n  \"value\": \"Using Lists of Endpoints\",\n  \"id\": \"endpoints-list\",\n  \"level\": 3\n}, {\n  \"value\": \"Disconnecting from RabbitMQ\",\n  \"id\": \"disconnecting\",\n  \"level\": 2\n}, {\n  \"value\": \"Connection and Channel Lifespan\",\n  \"id\": \"connection-and-channel-lifespan\",\n  \"level\": 2\n}, {\n  \"value\": \"Client-Provided Connection Name\",\n  \"id\": \"client-provided-names\",\n  \"level\": 2\n}, {\n  \"value\": \"Using Exchanges and Queues\",\n  \"id\": \"exchanges-and-queues\",\n  \"level\": 2\n}, {\n  \"value\": \"Passive Declaration\",\n  \"id\": \"passive-declaration\",\n  \"level\": 3\n}, {\n  \"value\": \"Operations with Optional Responses\",\n  \"id\": \"nowait-methods\",\n  \"level\": 3\n}, {\n  \"value\": \"Deleting Entities and Purging Messages\",\n  \"id\": \"deleting-entities\",\n  \"level\": 3\n}, {\n  \"value\": \"Publishing Messages\",\n  \"id\": \"publishing\",\n  \"level\": 2\n}, {\n  \"value\": \"Retrieving Messages By Subscription (&quot;push API&quot;)\",\n  \"id\": \"consuming\",\n  \"level\": 2\n}, {\n  \"value\": \"Consumer Memory Safety Requirements\",\n  \"id\": \"consuming-memory-safety\",\n  \"level\": 2\n}, {\n  \"value\": \"Fetching Individual Messages (Polling or &quot;pull API&quot;)\",\n  \"id\": \"basic-get\",\n  \"level\": 2\n}, {\n  \"value\": \"Concurrency Considerations for Consumers\",\n  \"id\": \"concurrency\",\n  \"level\": 2\n}, {\n  \"value\": \"Sharing Channels Between Threads\",\n  \"id\": \"concurrency-channel-sharing\",\n  \"level\": 3\n}, {\n  \"value\": \"Per-Connection Task Use\",\n  \"id\": \"concurrency-thread-usage\",\n  \"level\": 3\n}, {\n  \"value\": \"Consumer Callbacks, Concurrency and Operation Ordering\",\n  \"id\": \"consumer-callbacks-and-ordering\",\n  \"level\": 3\n}, {\n  \"value\": \"Is Consumer Operation Dispatch Concurrent?\",\n  \"id\": \"is-consumer-operation-dispatch-concurrent\",\n  \"level\": 4\n}, {\n  \"value\": \"Message Ordering Guarantee\",\n  \"id\": \"message-ordering-guarantee\",\n  \"level\": 4\n}, {\n  \"value\": \"Acknowledgement of Multiple Deliveries at Once\",\n  \"id\": \"acknowledgement-of-multiple-deliveries-at-once\",\n  \"level\": 4\n}, {\n  \"value\": \"Consumers and Operations on the Same Channel\",\n  \"id\": \"consumers-and-operations-on-the-same-channel\",\n  \"level\": 4\n}, {\n  \"value\": \"Handling Unroutable Messages\",\n  \"id\": \"basic-return\",\n  \"level\": 2\n}, {\n  \"value\": \"Automatic Recovery From Network Failures\",\n  \"id\": \"recovery\",\n  \"level\": 2\n}, {\n  \"value\": \"Connection Recovery\",\n  \"id\": \"connection-recovery\",\n  \"level\": 3\n}, {\n  \"value\": \"When Will Connection Recovery Be Triggered?\",\n  \"id\": \"recovery-triggers\",\n  \"level\": 3\n}, {\n  \"value\": \"Effects on Publishing\",\n  \"id\": \"publishers\",\n  \"level\": 3\n}, {\n  \"value\": \"Topology Recovery\",\n  \"id\": \"topology-recovery\",\n  \"level\": 3\n}, {\n  \"value\": \"Failure Detection and Recovery Limitations\",\n  \"id\": \"automatic-recovery-limitations\",\n  \"level\": 3\n}, {\n  \"value\": \"Manual Acknowledgements and Automatic Recovery\",\n  \"id\": \"basic-ack-and-recovery\",\n  \"level\": 3\n}, {\n  \"value\": \"OAuth 2 Support\",\n  \"id\": \"oauth2-support\",\n  \"level\": 2\n}, {\n  \"value\": \"Getting the OAuth 2 Token\",\n  \"id\": \"oauth2-getting-token\",\n  \"level\": 3\n}, {\n  \"value\": \"Refreshing the Token\",\n  \"id\": \"oauth2-refreshing-token\",\n  \"level\": 3\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.header, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1, {\n        id: \"netc-client-api-guide\",\n        children: \".NET/C# Client API Guide\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"overview\",\n      children: \"Overview\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This guide covers \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./dotnet\",\n        children: \"RabbitMQ .NET/C# client\"\n      }), \" version 7.0 and its public API.\\r\\nIt assumes that the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://www.nuget.org/packages/RabbitMQ.Client\",\n        children: \"most recent major version of the client\"\n      }), \" is used\\r\\nand the reader is familiar with \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/tutorials\",\n        children: \"the basics\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Key sections of the guide are:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#dotnet-versions\",\n          children: \".NET version requirements\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#major-api-elements\",\n          children: \"Important interfaces and classes\"\n        }), \" in the public API\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#limitations\",\n          children: \"Limitations\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#connecting\",\n          children: \"Connecting to RabbitMQ\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#connection-and-channel-lifespan\",\n          children: \"Connection and Channel Lifespan\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#client-provided-names\",\n          children: \"Client-provided connection name\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#exchanges-and-queues\",\n          children: \"Using Exchanges and Queues\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#publishing\",\n          children: \"Publishing Messages\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#consuming\",\n          children: \"Consuming Using a Subscription\"\n        }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#consuming-memory-safety\",\n          children: \"Consumer Memory Safety\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#concurrency\",\n          children: \"Concurrency Considerations and Safety\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#recovery\",\n          children: \"Automatic Recovery From Network Failures\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#oauth2-support\",\n          children: \"OAuth 2 Support\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"An \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://rabbitmq.github.io/rabbitmq-dotnet-client/api/RabbitMQ.Client.html\",\n        children: \"API reference\"\n      }), \" is available separately.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"dotnet-versions\",\n      children: \".NET Version Requirements\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"7.0.x and 6.8.x release series of this library \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./dotnet#overview\",\n        children: \"require .NET 4.6.1+ or a .NET Standard 2.0+ implementation\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"license\",\n      children: \"License\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The library is open source, developed \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/rabbitmq-dotnet-client/\",\n        children: \"on GitHub\"\n      }), \", and is double-licensed under the\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"https://www.apache.org/licenses/LICENSE-2.0.html\",\n          children: \"Apache Public License 2.0\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"https://www.mozilla.org/MPL/2.0/\",\n          children: \"Mozilla Public License 2.0\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This means that the user can consider the library to be licensed under any of the licenses from the list above.\\r\\nFor example, the user may choose the Apache Public License 2.0 and include this client into\\r\\na commercial product.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"major-api-elements\",\n      children: \"Major namespaces, interfaces and classes\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The client API is closely modelled on the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/tutorials/amqp-concepts\",\n        children: \"AMQP 0-9-1 protocol model\"\n      }), \",\\r\\nwith additional abstractions for ease of use.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"An \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://rabbitmq.github.io/rabbitmq-dotnet-client/\",\n        children: \"API reference\"\n      }), \" is available separately.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The core API interfaces and classes are defined in the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"RabbitMQ.Client\"\n      }), \" namespace:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"using RabbitMQ.Client;\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The core API interfaces and classes are\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"IChannel\"\n        }), \": represents an AMQP 0-9-1 channel, and provides most of the operations (protocol methods)\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"IConnection\"\n        }), \": represents an AMQP 0-9-1 connection\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"ConnectionFactory\"\n        }), \": constructs \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"IConnection\"\n        }), \" instances\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"IAsyncBasicConsumer\"\n        }), \": represents a message consumer\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Other useful interfaces and classes include:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"AsyncDefaultBasicConsumer\"\n        }), \": commonly used base class for consumers\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Public namespaces other than \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"RabbitMQ.Client\"\n      }), \" include:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"RabbitMQ.Client.Events\"\n        }), \": various events and event handlers\\r\\nthat are part of the client library, including \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"AsyncEventingBasicConsumer\"\n        }), \",\\r\\na consumer implementation built around C# event handlers.\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"RabbitMQ.Client.Exceptions\"\n        }), \": exceptions visible to the user.\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"All other namespaces are reserved for private implementation detail of\\r\\nthe library, although members of private namespaces are usually made\\r\\navailable to applications using the library in order to permit\\r\\ndevelopers to implement workarounds for faults and gaps they\\r\\ndiscover in the library implementation. Applications cannot rely on\\r\\nany classes, interfaces, member variables etc. that appear within\\r\\nprivate namespaces remaining stable across releases of the library.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"limitations\",\n      children: \"Limitations\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This client does not support unsigned 64-bit integers, represented in\\r\\ntype \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"ulong\"\n      }), \". Attempting to encode \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"ulong\"\n      }), \" values will throw an exception.\\r\\nNote that signed 64-bit integers are supported.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This is in part due to type marker \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/amqp-0-9-1-errata#section_3\",\n        children: \"ambiguity in the AMQP 0-9-1 spec\"\n      }), \",\\r\\nand in part due to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/rabbitmq-dotnet-client/pull/1299#issuecomment-1433342924\",\n        children: \"the list of types supported by other popular clients\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"connecting\",\n      children: \"Connecting to RabbitMQ\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Before an application can use RabbitMQ, it has to open a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/connections\",\n        children: \"connection\"\n      }), \"\\r\\nto a RabbitMQ node. The connection then will be used to perform all subsequent\\r\\noperations. Connections are \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"meant to be long-lived\"\n      }), \". Opening a connection\\r\\nfor every operation (e.g. publishing a message) would be very inefficient and is\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"highly discouraged\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To open a connection with the .NET client, first instantiate a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"ConnectionFactory\"\n      }), \"\\r\\nand configure it to use desired hostname, virtual host, credentials, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/ssl\",\n        children: \"TLS settings\"\n      }), \",\\r\\nand any other parameters as needed.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Then await the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"ConnectionFactory.CreateConnectionAsync()\"\n      }), \" method to open a connection.\\r\\nSuccessful and unsuccessful client connection events can be \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/networking#logging\",\n        children: \"observed in server logs\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The following two code snippets connect to a RabbitMQ node using a hostname configured\\r\\nusing the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"hostName\"\n      }), \" property:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"ConnectionFactory factory = new ConnectionFactory();\\r\\n// \\\"guest\\\"/\\\"guest\\\" by default, limited to localhost connections\\r\\nfactory.UserName = user;\\r\\nfactory.Password = pass;\\r\\nfactory.VirtualHost = vhost;\\r\\nfactory.HostName = hostName;\\r\\n\\r\\nIConnection conn = await factory.CreateConnectionAsync();\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"ConnectionFactory factory = new ConnectionFactory();\\r\\nfactory.Uri = new Uri(\\\"amqp://user:pass@hostName:port/vhost\\\");\\r\\n\\r\\nIConnection conn = await factory.CreateConnectionAsync();\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"endpoints-list\",\n      children: \"Using Lists of Endpoints\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"It is possible to specify a list of endpoints to use when connecting. The first\\r\\nreachable endpoint will be used. In case of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#recovery\",\n        children: \"connection failures\"\n      }), \", using\\r\\na list of endpoints makes it possible for the application to connect to a different\\r\\nnode if the original one is down.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To use multiple endpoints, provide a list of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"AmqpTcpEndpoint\"\n      }), \"s to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"ConnectionFactory#CreateConnection\"\n      }), \".\\r\\nAn \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"AmqpTcpEndpoint\"\n      }), \" represents a hostname and port pair.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"ConnectionFactory factory = new ConnectionFactory();\\r\\nfactory.UserName = \\\"username\\\";\\r\\nfactory.Password = \\\"s3Kre7\\\";\\r\\n\\r\\nvar endpoints = new System.Collections.Generic.List<AmqpTcpEndpoint> {\\r\\n  new AmqpTcpEndpoint(\\\"hostname\\\"),\\r\\n  new AmqpTcpEndpoint(\\\"localhost\\\")\\r\\n};\\r\\nIConnection conn = await factory.CreateConnectionAsync(endpoints);\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"a\", {\n      id: \"connecting-uri\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Since the .NET client uses a stricter interpretation of the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/uri-spec\",\n        children: \"AMQP 0-9-1 URI spec\"\n      }), \"\\r\\nthan the other clients, care must be taken when using URIs.\\r\\nIn particular, the host part must not be omitted and virtual hosts with\\r\\nempty names are not addressable.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"All factory properties have default values. The default value for a property will be used if the property\\r\\nremains unassigned prior to creating a connection:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"table\", {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"thead\", {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"Property\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"Default Value\"\n          })]\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n          children: \"Username\"\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n            children: \"\\\"guest\\\"\"\n          })\n        })]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n          children: \"Password\"\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n            children: \"\\\"guest\\\"\"\n          })\n        })]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n          children: \"Virtual host\"\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n            children: \"\\\"/\\\"\"\n          })\n        })]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n          children: \"Hostname\"\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n            children: \"\\\"localhost\\\"\"\n          })\n        })]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n          children: \"Port\"\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n            children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n              children: \"5672\"\n            }), \" for regular (\\\"plain TCP\\\") connections,\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n              children: \"5671\"\n            }), \" for \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"a\", {\n              href: \"/docs/ssl\",\n              children: \"connections with TLS enabled\"\n            })]\n          })\n        })]\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Note that \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/access-control\",\n        children: \"user guest can only connect from localhost\"\n      }), \" by default.\\r\\nThis is to limit well-known credential use in production systems.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"IConnection\"\n      }), \" interface can then be used to open a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/channels\",\n        children: \"channel\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"IChannel channel = await conn.CreateChannelAsync();\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The channel can now be used to send and receive messages,\\r\\nas described in subsequent sections.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Just like connections, channels are \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"meant to be long-lived\"\n      }), \". Opening a new channel\\r\\nfor every operation would be highly inefficient and is \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"highly discouraged\"\n      }), \". Channels,\\r\\nhowever, can have a shorter life span than connections. For example, certain\\r\\nprotocol errors will automatically close channels. If applications can recover\\r\\nfrom them, they can open a new channel and retry the operation.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This is covered in more detail in the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/channels\",\n        children: \"Channel guide\"\n      }), \" as well as other\\r\\nguides such as \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/confirms\",\n        children: \"Consumer Acknowledgements\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"disconnecting\",\n      children: \"Disconnecting from RabbitMQ\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"To disconnect, simply close the channel and the connection:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"await channel.CloseAsync();\\r\\nawait conn.CloseAsync();\\r\\nawait channel.DisposeAsync();\\r\\nawait conn.DisposeAsync();\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"While disposing channel and connection objects is sufficient, the best practice\\r\\nis that they be explicitly closed first.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Client disconnection events can be \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/networking#logging\",\n        children: \"observed in server node logs\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"connection-and-channel-lifespan\",\n      children: \"Connection and Channel Lifespan\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Connections are meant to be long-lived. The underlying protocol is designed and optimized for\\r\\nlong running connections. That means that opening a new connection per operation,\\r\\ne.g. a message published, is unnecessary and strongly discouraged as it will introduce a lot of\\r\\nnetwork roundtrips and overhead.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Channels are also meant to be long-lived but since many recoverable protocol errors will\\r\\nresult in channel closure, channel lifespan could be shorter than that of its connection.\\r\\nClosing and opening new channels per operation is usually unnecessary but can be\\r\\nappropriate. When in doubt, consider reusing channels first.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Channel-level exceptions such as attempts to consume from a\\r\\nqueue that does not exist will result in channel closure. A closed channel can no\\r\\nlonger be used and will not receive any more events from the server (such\\r\\nas message deliveries). Channel-level exceptions will be logged by RabbitMQ\\r\\nand will initiate a shutdown sequence for the channel (see below).\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"client-provided-names\",\n      children: \"Client-Provided Connection Name\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"RabbitMQ nodes have a limited amount of information about their clients:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"their TCP endpoint (source IP address and port)\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"the credentials used\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This information alone can make identifying applications and instances problematic, in particular when credentials can be\\r\\nshared and clients connect over a load balancer but \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/networking#proxy-protocol\",\n        children: \"Proxy protocol\"\n      }), \" cannot be enabled.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To make it easier to identify clients in \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/logging\",\n        children: \"server logs\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/management\",\n        children: \"management UI\"\n      }), \",\\r\\nAMQP 0-9-1 client connections, including the RabbitMQ .NET client, can provide a custom identifier.\\r\\nIf set, the identifier will be mentioned in log entries and management UI. The identifier is known as\\r\\nthe \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"client-provided connection name\"\n      }), \". The name can be used to identify an application or a specific component\\r\\nwithin an application. The name is optional; however, developers are strongly encouraged to provide one\\r\\nas it would significantly simplify certain operational tasks.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"RabbitMQ .NET client provides a connection factory property,\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://rabbitmq.github.io/rabbitmq-dotnet-client/api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_ClientProvidedName\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"ConnectionFactory.ClientProvidedName\"\n        })\n      }), \",\\r\\nwhich, if set, controls the client-provided connection name for all new connections opened\\r\\nby this factory.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Here's a modified connection example used above which provides such a name:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"ConnectionFactory factory = new ConnectionFactory();\\r\\n// \\\"guest\\\"/\\\"guest\\\" by default, limited to localhost connections\\r\\nfactory.UserName = user;\\r\\nfactory.Password = pass;\\r\\nfactory.VirtualHost = vhost;\\r\\nfactory.HostName = hostName;\\r\\n\\r\\n// this name will be shared by all connections instantiated by\\r\\n// this factory\\r\\nfactory.ClientProvidedName = \\\"app:audit component:event-consumer\\\";\\r\\n\\r\\nIConnection conn = await factory.CreateConnectionAsync();\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"exchanges-and-queues\",\n      children: \"Using Exchanges and Queues\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Client applications work with exchanges and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/queues\",\n        children: \"queues\"\n      }), \",\\r\\nthe high-level \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/tutorials/amqp-concepts\",\n        children: \"building blocks of the protocol\"\n      }), \".\\r\\nThese must be \\\"declared\\\" before they can be\\r\\nused. Declaring either type of object simply ensures that one of that\\r\\nname exists, creating it if necessary.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Continuing the previous example, the following code declares an\\r\\nexchange and a queue, then binds them together.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"await channel.ExchangeDeclareAsync(exchangeName, ExchangeType.Direct);\\r\\nawait channel.QueueDeclareAsync(queueName, false, false, false, null);\\r\\nawait channel.QueueBindAsync(queueName, exchangeName, routingKey, null);\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This will actively declare the following objects:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"a non-durable, non-autodelete exchange of \\\"direct\\\" type\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"a non-durable, non-autodelete, non-exclusive queue\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The exchange can be customised by using additional parameters.\\r\\nThe above code then binds the queue to the exchange with the given\\r\\nrouting key.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Many channel API (\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"IChannel\"\n      }), \") methods are overloaded. The convenient\\r\\nshort form of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"ExchangeDeclare\"\n      }), \" uses sensible defaults. There are\\r\\nalso longer forms with more parameters, to let you override these\\r\\ndefaults as necessary, giving full control where needed.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This \\\"short version, long version\\\" pattern is used throughout the API.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"passive-declaration\",\n      children: \"Passive Declaration\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Queues and exchanges can be declared \\\"passively\\\". A passive declare simply checks that the entity\\r\\nwith the provided name exists. If it does, the operation is a no-op. For queues successful\\r\\npassive declares will return the same information as non-passive ones, namely the number of\\r\\nconsumers and messages in \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/confirms\",\n        children: \"ready state\"\n      }), \" in the queue.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"If the entity does not exist, the operation fails with a channel level exception. The channel\\r\\ncannot be used after that. A new channel should be opened. It is common to use one-off (temporary)\\r\\nchannels for passive declarations.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"IChannel#QueueDeclarePassiveAsync\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"IChannel#ExchangeDeclarePassiveAsync\"\n      }), \" are the\\r\\nmethods used for passive declaration. The following example demonstrates \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"IChannel#QueueDeclarePassive\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"var response = await channel.QueueDeclarePassiveAsync(\\\"queue-name\\\");\\r\\n// returns the number of messages in Ready state in the queue\\r\\nresponse.MessageCount;\\r\\n// returns the number of consumers the queue has\\r\\nresponse.ConsumerCount;\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"IChannel#ExchangeDeclarePassiveAsync\"\n      }), \"'s return value contains no useful information. Therefore\\r\\nif the method returns and no channel exceptions occurs, it means that the exchange does exist.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"nowait-methods\",\n      children: \"Operations with Optional Responses\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Some common operations also have a \\\"no wait\\\" version which won't wait for server\\r\\nresponse. For example, to declare a queue and instruct the server to not send any\\r\\nresponse, use\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"await channel.QueueDeclareAsync(queueName, true, false, false, null, noWait: true);\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The \\\"no wait\\\" versions are more efficient but offer lower safety guarantees, e.g. they\\r\\nare more dependent on the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/heartbeats\",\n        children: \"heartbeat mechanism\"\n      }), \" for detection of failed operations.\\r\\nWhen in doubt, start with the standard version. The \\\"no wait\\\" versions are only needed in scenarios\\r\\nwith high topology (queue, binding) churn.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"deleting-entities\",\n      children: \"Deleting Entities and Purging Messages\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"A queue or exchange can be explicitly deleted:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"await channel.QueueDeleteAsync(\\\"queue-name\\\", false, false);\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"It is possible to delete a queue only if it is empty:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"await channel.QueueDeleteAsync(\\\"queue-name\\\", false, true);\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"or if it is not used (does not have any consumers):\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"await channel.QueueDeleteAsync(\\\"queue-name\\\", true, false);\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"A queue can be purged (all of its messages deleted):\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"await channel.QueuePurgeAsync(\\\"queue-name\\\");\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"publishing\",\n      children: \"Publishing Messages\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To publish a message to an exchange, use \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"IChannel.BasicPublishAsync\"\n      }), \" as\\r\\nfollows:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"byte[] messageBodyBytes = System.Text.Encoding.UTF8.GetBytes(\\\"Hello, world!\\\");\\r\\nvar props = new BasicProperties();\\r\\nawait channel.BasicPublishAsync(exchangeName, routingKey, false, props, messageBodyBytes);\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"For fine control, you can use overloaded variants to specify the\\r\\nmandatory flag, or specify messages properties:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"byte[] messageBodyBytes = System.Text.Encoding.UTF8.GetBytes(\\\"Hello, world!\\\");\\r\\nvar props = new BasicProperties();\\r\\nprops.ContentType = \\\"text/plain\\\";\\r\\nprops.DeliveryMode = 2;\\r\\nawait channel.BasicPublishAsync(exchangeName, routingKey,\\r\\n    mandatory: true, basicProperties: props, body: messageBodyBytes);\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This sends a mandatory\", \":true\", \" message with delivery mode 2 (persistent) and\\r\\ncontent-type \\\"text/plain\\\". See the definition of the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"IBasicProperties\"\n      }), \"\\r\\ninterface for more information about the available message properties.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"In the following example, we publish a message with custom headers:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"byte[] messageBodyBytes = System.Text.Encoding.UTF8.GetBytes(\\\"Hello, world!\\\");\\r\\n\\r\\nvar props = new BasicProperties();\\r\\nprops.ContentType = \\\"text/plain\\\";\\r\\nprops.DeliveryMode = 2;\\r\\nprops.Headers = new Dictionary<string, object>();\\r\\nprops.Headers.Add(\\\"latitude\\\",  51.5252949);\\r\\nprops.Headers.Add(\\\"longitude\\\", -0.0905493);\\r\\n\\r\\nawait channel.BasicPublishAsync(exchangeName, routingKey, true, props, messageBodyBytes);\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Code sample below sets a message expiration:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"byte[] messageBodyBytes = System.Text.Encoding.UTF8.GetBytes(\\\"Hello, world!\\\");\\r\\n\\r\\nvar props = new BasicProperties();\\r\\nprops.ContentType = \\\"text/plain\\\";\\r\\nprops.DeliveryMode = 2;\\r\\nprops.Expiration = \\\"36000000\\\";\\r\\n\\r\\nawait channel.BasicPublishAsync(exchangeName, routingKey, true, props, messageBodyBytes);\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"consuming\",\n      children: \"Retrieving Messages By Subscription (\\\"push API\\\")\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The recommended and most convenient way to receive messages is to set up a\\r\\nsubscription using the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"IAsyncBasicConsumer\"\n      }), \" interface. The messages will then\\r\\nbe delivered automatically as they arrive, rather than having to be requested\\r\\nproactively.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"One way to implement a consumer is to use the convenience class\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"AsyncEventingBasicConsumer\"\n      }), \", which dispatches deliveries and other consumer\\r\\nlifecycle events as C# events:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"var consumer = new EventingBasicConsumer(channel);\\r\\nconsumer.Received += async (ch, ea) =>\\r\\n                {\\r\\n                    var body = ea.Body.ToArray();\\r\\n                    // copy or deserialise the payload\\r\\n                    // and process the message\\r\\n                    // ...\\r\\n                    await channel.BasicAckAsync(ea.DeliveryTag, false);\\r\\n                };\\r\\n// this consumer tag identifies the subscription\\r\\n// when it has to be cancelled\\r\\nstring consumerTag = await channel.BasicConsumeAsync(queueName, false, consumer);\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Another option is to subclass \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"AsyncDefaultBasicConsumer\"\n      }), \", overriding methods\\r\\nas necessary, or implement \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"IAsyncBasicConsumer\"\n      }), \" directly. You will generally\\r\\nwant to implement the core method\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"IAsyncBasicConsumer.HandleBasicDeliverAsync\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"More sophisticated consumers will need to implement further methods. In\\r\\nparticular, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"HandleChannelShutdown\"\n      }), \" traps channel/connection closure. Consumers\\r\\ncan also implement \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \" HandleBasicCancelOk\"\n      }), \" to be notified of cancellations.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"ConsumerTag\"\n      }), \" property of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"AsyncDefaultBasicConsumer\"\n      }), \" can be used to\\r\\nretrieve the server-generated consumer tag, in cases where none was supplied to\\r\\nthe original \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"IChannel.BasicConsumeAsync\"\n      }), \" call.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"You can cancel an active consumer with \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"IChannel.BasicCancelAsync\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"await channel.BasicCancelAsync(consumerTag);\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"When calling the API methods, you always refer to consumers by their\\r\\nconsumer tags, which can be either client- or server-generated as\\r\\nexplained in the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/specification\",\n        children: \"AMQP 0-9-1 specification\"\n      }), \" document.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"consuming-memory-safety\",\n      children: \"Consumer Memory Safety Requirements\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"As of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/rabbitmq-dotnet-client/blob/main/CHANGELOG.md\",\n        children: \"version 7.0\"\n      }), \"\\r\\nof the .NET client, message payloads are represented using the\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://learn.microsoft.com/en-us/dotnet/api/system.readonlymemory-1?view=netstandard-2.0\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"System.ReadOnlyMemory<byte>\"\n        })\n      }), \"\\r\\ntype from the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.a, {\n        href: \"https://www.nuget.org/packages/System.Memory/\",\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"System.Memory\"\n        }), \" library\"]\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"RabbitMQ.Client\"\n      }), \" library places certain restrictions on when a read only\\r\\nmemory span can be accessed by applications.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"Important\"\n      }), \": consumer interface implementations \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"must deserialize or copy\\r\\ndelivery payload before delivery handler method returns\"\n      }), \". Retaining a\\r\\nreference to the payload is not safe: the memory allocated for it can be\\r\\ndeallocated at any moment after the handler returns.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"basic-get\",\n      children: \"Fetching Individual Messages (Polling or \\\"pull API\\\")\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"It is also possible to retrieve individual messages on demand (\\\"pull API\\\" a.k.a. polling).\\r\\nThis approach to consumption is \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"very inefficient\"\n      }), \" as it is effectively polling\\r\\nand applications repeatedly have to ask for results even if the vast majority of the requests\\r\\nyield no results. Therefore using this approach \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"is highly discouraged\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To \\\"pull\\\" a message, use the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"IChannel.BasicGetAsync\"\n      }), \" method.\\r\\nThe returned value is an instance of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"BasicGetResult\"\n      }), \", from which the header\\r\\ninformation (properties) and message body can be extracted:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"bool autoAck = false;\\r\\nBasicGetResult result = await channel.BasicGetAsync(queueName, autoAck);\\r\\nif (result == null) {\\r\\n    // No message available at this time.\\r\\n} else {\\r\\n    var props = result.BasicProperties;\\r\\n    ReadOnlyMemory<byte> body = result.Body;\\r\\n    ...\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The above example uses \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/confirms\",\n        children: \"manual acknowledgements\"\n      }), \" (\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"autoAck = false\"\n      }), \"), so the application must also call\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"IChannel.BasicAckAsync\"\n      }), \" to acknowledge the delivery after processing:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"    ...\\r\\n    // acknowledge receipt of the message\\r\\n    await channel.BasicAckAsync(result.DeliveryTag, false);\\r\\n}\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Note that fetching messages using this API is relatively inefficient. If you'd prefer\\r\\nRabbitMQ to push messages to the client, see the next section.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"concurrency\",\n      children: \"Concurrency Considerations for Consumers\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"There is a number of concurrency-related topics for a library user to consider.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"concurrency-channel-sharing\",\n      children: \"Sharing Channels Between Threads\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"IChannel\"\n      }), \" instance usage by more than one thread simultaneously should be\\r\\navoided. Application code should maintain a clear notion of thread ownership\\r\\nfor \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"IChannel\"\n      }), \" instances.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This is a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"hard requirement for publishers\"\n      }), \": sharing a channel (an \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"IChannel\"\n      }), \"\\r\\ninstance) for concurrent publishing will lead to incorrect frame interleaving\\r\\nat the protocol level. Channel instances \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"must not be shared\"\n      }), \" by threads that\\r\\npublish on them.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"If more than one thread needs to access a particular \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"IChannel\"\n      }), \" instances, the\\r\\napplication should enforce mutual exclusion. One way of achieving this is for\\r\\nall users of an \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"IChannel\"\n      }), \" to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"lock\"\n      }), \" the instance itself:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"IChannel ch = RetrieveSomeSharedIChannelInstance();\\r\\nawait _channelSemaphore.WaitAsync();\\r\\ntry\\r\\n{\\r\\n  ch.BasicPublishAsync(...);\\r\\n}\\r\\nfinally\\r\\n{\\r\\n  _channelSemaphore.Release();\\r\\n}\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Symptoms of incorrect serialisation of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"IChannel\"\n      }), \" operations include, but are\\r\\nnot limited to:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"/docs/connections#error-handling\",\n          children: \"connection-level exceptions\"\n        }), \" due to invalid frame\\r\\ninterleaving on the wire. RabbitMQ \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"/docs/logging\",\n          children: \"server logs\"\n        }), \" will\\r\\ncontain unexpected frame errors in such scenario.\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Pipelining and continuation exceptions thrown by the client\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Consumption that involve sharing a channel between threads should be avoided\\r\\nwhen possible but can be done safely.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Consumers that can be multi-threaded or use a thread pool internally, including TPL-based\\r\\nconsumers, must use mutual exclusion of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/confirms\",\n        children: \"acknowledgements\"\n      }), \" operations\\r\\non a shared channel.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"concurrency-thread-usage\",\n      children: \"Per-Connection Task Use\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Each \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"IConnection\"\n      }), \" instance is, in the current implementation, backed by a\\r\\nsingle \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Task\"\n      }), \" that reads from the socket and dispatches the resulting events to\\r\\nthe application. If heartbeats are enabled, they will use a pair of .NET timers\\r\\nper connection.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Usually, therefore, there will be at least two \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Task\"\n      }), \" instances active in an\\r\\napplication using this library:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"dl\", {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"dt\", {\n        children: [\"the application thread (\\\"main\\\" \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"Task\"\n        }), \")\"]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"dd\", {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n          children: [\"contains the application logic, and makes\\r\\ncalls on \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n            children: \"IChannel\"\n          }), \" methods to perform protocol operations.\"]\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"dt\", {\n        children: [\"the I/O activity \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"Task\"\n        }), \" instances\"]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"dd\", {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n          children: [\"hidden away and completely managed by the\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n            children: \"IConnection\"\n          }), \" instance.\"]\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The one place where the nature of the threading model is visible to\\r\\nthe application is in any callback the application registers with the\\r\\nlibrary. Such callbacks include:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"any \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"IAsyncBasicConsumer\"\n        }), \" method\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"BasicReturn\"\n        }), \" event on \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"IChannel\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"any of the various shutdown events on \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"IConnection\"\n        }), \", \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"IChannel\"\n        }), \" etc.\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"consumer-callbacks-and-ordering\",\n      children: \"Consumer Callbacks, Concurrency and Operation Ordering\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"is-consumer-operation-dispatch-concurrent\",\n      children: \"Is Consumer Operation Dispatch Concurrent?\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"IAsyncBasicConsumer\"\n      }), \" callbacks are invoked sequantially (with a concurrency\\r\\ndegree of one) by default.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"For concurrent dispatch of inbound consumer deliveries, set \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://rabbitmq.github.io/rabbitmq-dotnet-client/api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_ConsumerDispatchConcurrency\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"ConnectionFactory.ConsumerDispatchConcurrency\"\n        })\n      }), \"\\r\\nto a value greater than one.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"message-ordering-guarantee\",\n      children: \"Message Ordering Guarantee\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Consumer events on the same channel are guaranteed to be dispatched in the same\\r\\norder they were received in.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"For example, if messages A and B were delivered in this order on the same\\r\\nchannel, they will be dispatched to a consumer (a specific \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"IAsyncBasicConsumer\"\n      }), \"\\r\\ninstance) in this order.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"If messages A and B were delivered on different channels, they can be\\r\\ndispatched to consumers in any order (or in parallel).\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"With the concurrency degree of one, deliveries on the same channel will be\\r\\nhandled sequentially. With a higher concurrency degree, their dispatch will\\r\\nhappen in the same order but actual processing can happen in parallel\\r\\n(depending on the number of available cores and application runtime), which can\\r\\nresult in concurrency hazards.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"acknowledgement-of-multiple-deliveries-at-once\",\n      children: \"Acknowledgement of Multiple Deliveries at Once\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Consumers can \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/confirms\",\n        children: \"acknowledge\"\n      }), \" multiple deliveries at a time. When\\r\\nconsumer dispatch concurrency degree is higher than one, this can result in a\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/confirms#consumer-acks-double-acking\",\n        children: \"double acknowledgement\"\n      }), \", which is\\r\\nconsidered to be \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/channels#error-handling\",\n        children: \"an error in the protocol\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Therefore, with concurrent consumer dispatch, consumers should acknowledge only\\r\\none delivery at a time.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"consumers-and-operations-on-the-same-channel\",\n      children: \"Consumers and Operations on the Same Channel\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Consumer event handlers can invoke operations on the same channel (such as\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"IChannel.QueueDeclareAsync\"\n      }), \" or \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"IChannel.BasicCancelAsync\"\n      }), \") without\\r\\ndeadlocking.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"basic-return\",\n      children: \"Handling Unroutable Messages\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"If a message is published with the \\\"mandatory\\\" flag\\r\\nset, but cannot be delivered, the broker will return it to the sending\\r\\nclient (via a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"basic.return\"\n      }), \" AMQP 0-9-1 command).\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To be notified of such returns, clients can subscribe to the\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"IChannel.BasicReturn\"\n      }), \" event. If there are no listeners attached to the\\r\\nevent, then returned messages will be silently dropped.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"channel.BasicReturn += (sender, ea) => {\\r\\n    ...\\r\\n};\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"BasicReturn\"\n      }), \" event will fire, for example, if the client\\r\\npublishes a message with the \\\"mandatory\\\" flag set to an exchange of\\r\\n\\\"direct\\\" type which is not bound to a queue.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"recovery\",\n      children: \"Automatic Recovery From Network Failures\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"connection-recovery\",\n      children: \"Connection Recovery\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Network connection between clients and RabbitMQ nodes can fail.\\r\\nRabbitMQ .NET/C# client supports automatic recovery of connections\\r\\nand topology (queues, exchanges, bindings, and consumers). The feature\\r\\nhas certain limitations covered later in this guide.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The automatic recovery process performs the following steps:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Reconnect\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Restore connection listeners\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Re-open channels\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Restore channel listeners\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Restore channel \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n          children: \"basic.qos\"\n        }), \" setting, publisher confirms and transaction settings\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Topology recovery starts after the above actions are completed. The following\\r\\nsteps are performed for every channel known to being open at the time of\\r\\nconnection failure:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Re-declare exchanges (except for predefined ones)\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Re-declare queues\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Recover all bindings\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Recover all consumers\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To enable automatic connection recovery, set\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"ConnectionFactory.AutomaticRecoveryEnabled\"\n      }), \" to true:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"ConnectionFactory factory = new ConnectionFactory();\\r\\nfactory.AutomaticRecoveryEnabled = true;\\r\\n// connection that will recover automatically\\r\\nIConnection conn = await factory.CreateConnectionAsync();\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"If recovery fails due to an exception (e.g. RabbitMQ node is still not\\r\\nreachable), it will be retried after a fixed time interval (default is 5\\r\\nseconds). The interval can be configured:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"ConnectionFactory factory = new ConnectionFactory();\\r\\n// attempt recovery every 10 seconds\\r\\nfactory.NetworkRecoveryInterval = TimeSpan.FromSeconds(10);\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"recovery-triggers\",\n      children: \"When Will Connection Recovery Be Triggered?\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Automatic connection recovery, if enabled, will be triggered by the following events:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"An I/O exception is thrown in connection's I/O loop\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"A socket read operation times out\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Missed server \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"/docs/heartbeats\",\n          children: \"heartbeats\"\n        }), \" are detected\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Any other unexpected exception is thrown in connection's I/O loop\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"whichever happens first.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"If initial client connection to a RabbitMQ node fails, automatic connection\\r\\nrecovery won't kick in. Applications developers are responsible for retrying\\r\\nsuch connections, logging failed attempts, implementing a limit to the number\\r\\nof retries and so on. Here's a very basic example:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"ConnectionFactory factory = new ConnectionFactory();\\r\\n// configure various connection settings\\r\\n\\r\\ntry {\\r\\n  IConnection conn = await factory.CreateConnectionAsync();\\r\\n} catch (RabbitMQ.Client.Exceptions.BrokerUnreachableException e) {\\r\\n  await Task.Delay(5000);\\r\\n  // apply retry logic\\r\\n}\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"When a connection is closed by the application via the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"Connection.CloseAsync\"\n      }), \" method,\\r\\nconnection recovery will not be initiated.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Channel-level exceptions will not trigger any kind of recovery as they usually\\r\\nindicate a semantic issue in the application (e.g. an attempt to consume from a\\r\\nnon-existent queue).\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"publishers\",\n      children: \"Effects on Publishing\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Messages that are published using \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"IChannel.BasicPublishAsync\"\n      }), \" when connection is down\\r\\nwill be lost. The client does not enqueue them for delivery after connection has recovered.\\r\\nTo ensure that published messages reach RabbitMQ applications need to use \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/confirms\",\n        children: \"Publisher Confirms\"\n      }), \"\\r\\nand account for connection failures.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"topology-recovery\",\n      children: \"Topology Recovery\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Topology recovery involves recovery of exchanges, queues, bindings\\r\\nand consumers. It is enabled by default but can be disabled:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"ConnectionFactory factory = new ConnectionFactory();\\r\\nfactory.AutomaticRecoveryEnabled = true;\\r\\nfactory.TopologyRecoveryEnabled  = false;\\r\\n\\r\\nIConnection conn = await factory.CreateConnectionAsync();\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"automatic-recovery-limitations\",\n      children: \"Failure Detection and Recovery Limitations\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Automatic connection recovery has a number of limitations and intentional\\r\\ndesign decisions that applications developers need to be aware of.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"When a connection is down or lost, it \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/heartbeats\",\n        children: \"takes time to detect\"\n      }), \".\\r\\nTherefore there is a window of time in which both the library and the\\r\\napplication are unaware of effective connection failure. Any messages\\r\\npublished during this time frame are serialised and written to the TCP socket\\r\\nas usual. Their delivery to the broker can only be guaranteed via \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/confirms\",\n        children: \"publisher\\r\\nconfirms\"\n      }), \": publishing in AMQP 0-9-1 is entirely asynchronous by\\r\\ndesign.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"When a socket or I/O operation error is detected by a connection with automatic\\r\\nrecovery enabled, recovery begins after a configurable delay, 5 seconds by\\r\\ndefault. This design assumes that even though a lot of network failures are\\r\\ntransient and generally short lived, they do not go away in an instant.\\r\\nConnection recovery attempts will continue at identical time intervals until a\\r\\nnew connection is successfully opened.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"When a connection is in the recovering state, any publishes attempted on its\\r\\nchannels will be rejected with an exception. The client currently does not\\r\\nperform any internal buffering of such outgoing messages. It is an application\\r\\ndeveloper's responsibility to keep track of such messages and republish them\\r\\nwhen recovery succeeds. \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/confirms\",\n        children: \"Publisher confirms\"\n      }), \" is a protocol\\r\\nextension that should be used by publishers that cannot afford message loss.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Connection recovery will not kick in when a channel is closed due to a\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/channels#error-handling\",\n        children: \"channel-level exception\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Such exceptions often indicate application-level issues. The library cannot\\r\\ndetermine whether that's the case and make an informed decision about what can\\r\\nbe done to recover.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Closed channels won't be recovered even after connection recovery kicks in.\\r\\nThis includes both explicitly closed channels and the channel-level exception\\r\\ncase above.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"basic-ack-and-recovery\",\n      children: \"Manual Acknowledgements and Automatic Recovery\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"When manual acknowledgements are used, it is possible that network connection\\r\\nto RabbitMQ node fails between message delivery and acknowledgement. After\\r\\nconnection recovery, RabbitMQ will reset delivery tags on all channels.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This means that \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"basic.ack\"\n      }), \", \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"basic.nack\"\n      }), \", and\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"basic.reject\"\n      }), \" with old delivery tags will cause a channel\\r\\nexception. To avoid this, RabbitMQ .NET client keeps track of and updates\\r\\ndelivery tags to make them monotonically growing between recoveries.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"IChannel.BasicAckAsync\"\n      }), \", \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"IChannel.BasicNackAsync\"\n      }), \", and\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"IChannel.BasicRejectAsync\"\n      }), \" then translate adjusted delivery tags\\r\\ninto those used by RabbitMQ.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Acknowledgements with stale delivery tags will not be sent. Applications that\\r\\nuse manual acknowledgements and automatic recovery must be capable of handling\\r\\nredeliveries.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"oauth2-support\",\n      children: \"OAuth 2 Support\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The client can authenticate against an OAuth 2 server like \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/cloudfoundry/uaa\",\n        children: \"UAA\"\n      }), \".\\r\\nThe \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/rabbitmq-server/tree/main/deps/rabbitmq_auth_backend_oauth2\",\n        children: \"OAuth 2 plugin\"\n      }), \"\\r\\nmust be turned on on the server side and configured to use the same OAuth 2\\r\\nserver as the client. This section assumes that the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://www.nuget.org/packages/RabbitMQ.Client.OAuth2\",\n        children: \"most recent major version of the OAuth2 client library\"\n      }), \" is used.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"oauth2-getting-token\",\n      children: \"Getting the OAuth 2 Token\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The .NET client provides the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"OAuth2ClientCredentialsProvider\"\n      }), \" class to get a\\r\\nJWT token using the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://tools.ietf.org/html/rfc6749#section-4.4\",\n        children: \"OAuth 2 Client Credentials\\r\\nflow\"\n      }), \". The client sends the\\r\\naccess token in the password field when opening a connection. The broker then\\r\\nverifies the access token signature, validity, and permissions before\\r\\nauthorising the connection and granting access to the requested virtual host.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"using RabbitMQ.Client.OAuth2;\\r\\n\\r\\nvar tokenEndpointUri = new Uri(\\\"http://somedomain.com/token\\\");\\r\\nvar oAuth2Client = new OAuth2ClientBuilder(\\\"client_id\\\", \\\"client_secret\\\", tokenEndpointUri).Build();\\r\\nICredentialsProvider credentialProvider = new OAuth2ClientCredentialsProvider(\\\"prod-uaa-1\\\", oAuth2Client);\\r\\n\\r\\nvar connectionFactory = new ConnectionFactory\\r\\n{\\r\\n  CredentialsProvider = credentialsProvider\\r\\n};\\r\\nvar connection = await connectionFactory.CreateConnectionAsync();\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In production, ensure you use HTTPS for the token endpoint URI and configure\\r\\na \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"HttpClientHandler\"\n      }), \" appropriately for the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"HttpClient\"\n      }), \" :\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-csharp\",\n        children: \"HttpClientHandler httpClientHandler = buildHttpClientHandlerWithTLSEnabled();\\r\\n\\r\\nvar tokenEndpointUri = new Uri(\\\"https://somedomain.com/token\\\");\\r\\n\\r\\nvar oAuth2ClientBuilder = new OAuth2ClientBuilder(\\\"client_id\\\", \\\"client_secret\\\", tokenEndpointUri)\\r\\noAuth2ClientBuilder.SetHttpClientHandler(httpClientHandler);\\r\\nvar oAuth2Client = await oAuth2ClientBuilder.BuildAsync();\\r\\n\\r\\nICredentialsProvider credentialsProvider = new OAuth2ClientCredentialsProvider(\\\"prod-uaa-1\\\", oAuth2Client);\\r\\n\\r\\nvar connectionFactory = new ConnectionFactory\\r\\n{\\r\\n  CredentialsProvider = credentialsProvider\\r\\n};\\r\\nvar connection = await connectionFactory.CreateConnectionAsync();\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Note: In case your Authorization server requires extra request parameters\\r\\nbeyond what the specification requires, you can add \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"<key, value>\"\n      }), \" pairs to a\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"Dictionary\"\n      }), \" and passing it to the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"OAuth2ClientCredentialsProvider\"\n      }), \"\\r\\nconstructor rather than an \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"EMPTY\"\n      }), \" one as shown above.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"oauth2-refreshing-token\",\n      children: \"Refreshing the Token\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"When tokens expire, the broker refuses further operations over the connection.\\r\\nIt is possible to call \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"ICredentialsProvider#GetCredentialsAsync()\"\n      }), \" before expiring and\\r\\nsend the new token to the server. This is not convenient for applications so,\\r\\nthe .NET client provides help with the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"CredentialsRefresher\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"See the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.a, {\n        href: \"https://github.com/rabbitmq/rabbitmq-dotnet-client/blob/main/projects/Test/OAuth2/TestOAuth2.cs\",\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"TestOAuth2\"\n        }), \" class\"]\n      }), \"\\r\\nfor how to use the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"CredentialsRefresher\"\n      }), \" class.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"CredentialsRefresher\"\n      }), \" schedules a refresh after 2/3 of the token validity\\r\\ntime. For example, if the token expires in 60 minutes, it is refreshed after 40\\r\\nminutes.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQtbGlicmFyaWVzL2RvdG5ldC1hcGktZ3VpZGUubWQiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWJiaXRtcS13ZWJzaXRlLy4vY2xpZW50LWxpYnJhcmllcy9kb3RuZXQtYXBpLWd1aWRlLm1kPzhhZmYiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cbmV4cG9ydCBjb25zdCBmcm9udE1hdHRlciA9IHtcblx0dGl0bGU6ICcuTkVUL0MjIENsaWVudCBBUEkgR3VpZGUnXG59O1xuZXhwb3J0IGNvbnN0IGNvbnRlbnRUaXRsZSA9ICcuTkVUL0MjIENsaWVudCBBUEkgR3VpZGUnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIG1ldGFkYXRhfSBmcm9tICdAc2l0ZS8uZG9jdXNhdXJ1cy9kb2N1c2F1cnVzLXBsdWdpbi1jb250ZW50LWRvY3MvY2xpZW50LWxpYnJhcmllcy9zaXRlLWNsaWVudC1saWJyYXJpZXMtZG90bmV0LWFwaS1ndWlkZS1tZC01YzIuanNvbidcbmV4cG9ydCBjb25zdCBhc3NldHMgPSB7XG5cbn07XG5cbmltcG9ydCB7RnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBqc3ggYXMgX2pzeCwganN4cyBhcyBfanN4c30gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQge3VzZU1EWENvbXBvbmVudHMgYXMgX3Byb3ZpZGVDb21wb25lbnRzfSBmcm9tIFwiQG1keC1qcy9yZWFjdFwiO1xuZXhwb3J0IGNvbnN0IHRvYyA9IFt7XG4gIFwidmFsdWVcIjogXCJPdmVydmlld1wiLFxuICBcImlkXCI6IFwib3ZlcnZpZXdcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCIuTkVUIFZlcnNpb24gUmVxdWlyZW1lbnRzXCIsXG4gIFwiaWRcIjogXCJkb3RuZXQtdmVyc2lvbnNcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJMaWNlbnNlXCIsXG4gIFwiaWRcIjogXCJsaWNlbnNlXCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwiTWFqb3IgbmFtZXNwYWNlcywgaW50ZXJmYWNlcyBhbmQgY2xhc3Nlc1wiLFxuICBcImlkXCI6IFwibWFqb3ItYXBpLWVsZW1lbnRzXCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwiTGltaXRhdGlvbnNcIixcbiAgXCJpZFwiOiBcImxpbWl0YXRpb25zXCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwiQ29ubmVjdGluZyB0byBSYWJiaXRNUVwiLFxuICBcImlkXCI6IFwiY29ubmVjdGluZ1wiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIlVzaW5nIExpc3RzIG9mIEVuZHBvaW50c1wiLFxuICBcImlkXCI6IFwiZW5kcG9pbnRzLWxpc3RcIixcbiAgXCJsZXZlbFwiOiAzXG59LCB7XG4gIFwidmFsdWVcIjogXCJEaXNjb25uZWN0aW5nIGZyb20gUmFiYml0TVFcIixcbiAgXCJpZFwiOiBcImRpc2Nvbm5lY3RpbmdcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJDb25uZWN0aW9uIGFuZCBDaGFubmVsIExpZmVzcGFuXCIsXG4gIFwiaWRcIjogXCJjb25uZWN0aW9uLWFuZC1jaGFubmVsLWxpZmVzcGFuXCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwiQ2xpZW50LVByb3ZpZGVkIENvbm5lY3Rpb24gTmFtZVwiLFxuICBcImlkXCI6IFwiY2xpZW50LXByb3ZpZGVkLW5hbWVzXCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwiVXNpbmcgRXhjaGFuZ2VzIGFuZCBRdWV1ZXNcIixcbiAgXCJpZFwiOiBcImV4Y2hhbmdlcy1hbmQtcXVldWVzXCIsXG4gIFwibGV2ZWxcIjogMlxufSwge1xuICBcInZhbHVlXCI6IFwiUGFzc2l2ZSBEZWNsYXJhdGlvblwiLFxuICBcImlkXCI6IFwicGFzc2l2ZS1kZWNsYXJhdGlvblwiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIk9wZXJhdGlvbnMgd2l0aCBPcHRpb25hbCBSZXNwb25zZXNcIixcbiAgXCJpZFwiOiBcIm5vd2FpdC1tZXRob2RzXCIsXG4gIFwibGV2ZWxcIjogM1xufSwge1xuICBcInZhbHVlXCI6IFwiRGVsZXRpbmcgRW50aXRpZXMgYW5kIFB1cmdpbmcgTWVzc2FnZXNcIixcbiAgXCJpZFwiOiBcImRlbGV0aW5nLWVudGl0aWVzXCIsXG4gIFwibGV2ZWxcIjogM1xufSwge1xuICBcInZhbHVlXCI6IFwiUHVibGlzaGluZyBNZXNzYWdlc1wiLFxuICBcImlkXCI6IFwicHVibGlzaGluZ1wiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIlJldHJpZXZpbmcgTWVzc2FnZXMgQnkgU3Vic2NyaXB0aW9uICgmcXVvdDtwdXNoIEFQSSZxdW90OylcIixcbiAgXCJpZFwiOiBcImNvbnN1bWluZ1wiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkNvbnN1bWVyIE1lbW9yeSBTYWZldHkgUmVxdWlyZW1lbnRzXCIsXG4gIFwiaWRcIjogXCJjb25zdW1pbmctbWVtb3J5LXNhZmV0eVwiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkZldGNoaW5nIEluZGl2aWR1YWwgTWVzc2FnZXMgKFBvbGxpbmcgb3IgJnF1b3Q7cHVsbCBBUEkmcXVvdDspXCIsXG4gIFwiaWRcIjogXCJiYXNpYy1nZXRcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJDb25jdXJyZW5jeSBDb25zaWRlcmF0aW9ucyBmb3IgQ29uc3VtZXJzXCIsXG4gIFwiaWRcIjogXCJjb25jdXJyZW5jeVwiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIlNoYXJpbmcgQ2hhbm5lbHMgQmV0d2VlbiBUaHJlYWRzXCIsXG4gIFwiaWRcIjogXCJjb25jdXJyZW5jeS1jaGFubmVsLXNoYXJpbmdcIixcbiAgXCJsZXZlbFwiOiAzXG59LCB7XG4gIFwidmFsdWVcIjogXCJQZXItQ29ubmVjdGlvbiBUYXNrIFVzZVwiLFxuICBcImlkXCI6IFwiY29uY3VycmVuY3ktdGhyZWFkLXVzYWdlXCIsXG4gIFwibGV2ZWxcIjogM1xufSwge1xuICBcInZhbHVlXCI6IFwiQ29uc3VtZXIgQ2FsbGJhY2tzLCBDb25jdXJyZW5jeSBhbmQgT3BlcmF0aW9uIE9yZGVyaW5nXCIsXG4gIFwiaWRcIjogXCJjb25zdW1lci1jYWxsYmFja3MtYW5kLW9yZGVyaW5nXCIsXG4gIFwibGV2ZWxcIjogM1xufSwge1xuICBcInZhbHVlXCI6IFwiSXMgQ29uc3VtZXIgT3BlcmF0aW9uIERpc3BhdGNoIENvbmN1cnJlbnQ/XCIsXG4gIFwiaWRcIjogXCJpcy1jb25zdW1lci1vcGVyYXRpb24tZGlzcGF0Y2gtY29uY3VycmVudFwiLFxuICBcImxldmVsXCI6IDRcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIk1lc3NhZ2UgT3JkZXJpbmcgR3VhcmFudGVlXCIsXG4gIFwiaWRcIjogXCJtZXNzYWdlLW9yZGVyaW5nLWd1YXJhbnRlZVwiLFxuICBcImxldmVsXCI6IDRcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkFja25vd2xlZGdlbWVudCBvZiBNdWx0aXBsZSBEZWxpdmVyaWVzIGF0IE9uY2VcIixcbiAgXCJpZFwiOiBcImFja25vd2xlZGdlbWVudC1vZi1tdWx0aXBsZS1kZWxpdmVyaWVzLWF0LW9uY2VcIixcbiAgXCJsZXZlbFwiOiA0XG59LCB7XG4gIFwidmFsdWVcIjogXCJDb25zdW1lcnMgYW5kIE9wZXJhdGlvbnMgb24gdGhlIFNhbWUgQ2hhbm5lbFwiLFxuICBcImlkXCI6IFwiY29uc3VtZXJzLWFuZC1vcGVyYXRpb25zLW9uLXRoZS1zYW1lLWNoYW5uZWxcIixcbiAgXCJsZXZlbFwiOiA0XG59LCB7XG4gIFwidmFsdWVcIjogXCJIYW5kbGluZyBVbnJvdXRhYmxlIE1lc3NhZ2VzXCIsXG4gIFwiaWRcIjogXCJiYXNpYy1yZXR1cm5cIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJBdXRvbWF0aWMgUmVjb3ZlcnkgRnJvbSBOZXR3b3JrIEZhaWx1cmVzXCIsXG4gIFwiaWRcIjogXCJyZWNvdmVyeVwiLFxuICBcImxldmVsXCI6IDJcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkNvbm5lY3Rpb24gUmVjb3ZlcnlcIixcbiAgXCJpZFwiOiBcImNvbm5lY3Rpb24tcmVjb3ZlcnlcIixcbiAgXCJsZXZlbFwiOiAzXG59LCB7XG4gIFwidmFsdWVcIjogXCJXaGVuIFdpbGwgQ29ubmVjdGlvbiBSZWNvdmVyeSBCZSBUcmlnZ2VyZWQ/XCIsXG4gIFwiaWRcIjogXCJyZWNvdmVyeS10cmlnZ2Vyc1wiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkVmZmVjdHMgb24gUHVibGlzaGluZ1wiLFxuICBcImlkXCI6IFwicHVibGlzaGVyc1wiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIlRvcG9sb2d5IFJlY292ZXJ5XCIsXG4gIFwiaWRcIjogXCJ0b3BvbG9neS1yZWNvdmVyeVwiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIkZhaWx1cmUgRGV0ZWN0aW9uIGFuZCBSZWNvdmVyeSBMaW1pdGF0aW9uc1wiLFxuICBcImlkXCI6IFwiYXV0b21hdGljLXJlY292ZXJ5LWxpbWl0YXRpb25zXCIsXG4gIFwibGV2ZWxcIjogM1xufSwge1xuICBcInZhbHVlXCI6IFwiTWFudWFsIEFja25vd2xlZGdlbWVudHMgYW5kIEF1dG9tYXRpYyBSZWNvdmVyeVwiLFxuICBcImlkXCI6IFwiYmFzaWMtYWNrLWFuZC1yZWNvdmVyeVwiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIk9BdXRoIDIgU3VwcG9ydFwiLFxuICBcImlkXCI6IFwib2F1dGgyLXN1cHBvcnRcIixcbiAgXCJsZXZlbFwiOiAyXG59LCB7XG4gIFwidmFsdWVcIjogXCJHZXR0aW5nIHRoZSBPQXV0aCAyIFRva2VuXCIsXG4gIFwiaWRcIjogXCJvYXV0aDItZ2V0dGluZy10b2tlblwiLFxuICBcImxldmVsXCI6IDNcbn0sIHtcbiAgXCJ2YWx1ZVwiOiBcIlJlZnJlc2hpbmcgdGhlIFRva2VuXCIsXG4gIFwiaWRcIjogXCJvYXV0aDItcmVmcmVzaGluZy10b2tlblwiLFxuICBcImxldmVsXCI6IDNcbn1dO1xuZnVuY3Rpb24gX2NyZWF0ZU1keENvbnRlbnQocHJvcHMpIHtcbiAgY29uc3QgX2NvbXBvbmVudHMgPSB7XG4gICAgYTogXCJhXCIsXG4gICAgY29kZTogXCJjb2RlXCIsXG4gICAgaDE6IFwiaDFcIixcbiAgICBoMjogXCJoMlwiLFxuICAgIGgzOiBcImgzXCIsXG4gICAgaDQ6IFwiaDRcIixcbiAgICBoZWFkZXI6IFwiaGVhZGVyXCIsXG4gICAgbGk6IFwibGlcIixcbiAgICBwOiBcInBcIixcbiAgICBwcmU6IFwicHJlXCIsXG4gICAgc3Ryb25nOiBcInN0cm9uZ1wiLFxuICAgIHVsOiBcInVsXCIsXG4gICAgLi4uX3Byb3ZpZGVDb21wb25lbnRzKCksXG4gICAgLi4ucHJvcHMuY29tcG9uZW50c1xuICB9O1xuICByZXR1cm4gX2pzeHMoX0ZyYWdtZW50LCB7XG4gICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmhlYWRlciwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuaDEsIHtcbiAgICAgICAgaWQ6IFwibmV0Yy1jbGllbnQtYXBpLWd1aWRlXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIi5ORVQvQyMgQ2xpZW50IEFQSSBHdWlkZVwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJvdmVydmlld1wiLFxuICAgICAgY2hpbGRyZW46IFwiT3ZlcnZpZXdcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVGhpcyBndWlkZSBjb3ZlcnMgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vZG90bmV0XCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIlJhYmJpdE1RIC5ORVQvQyMgY2xpZW50XCJcbiAgICAgIH0pLCBcIiB2ZXJzaW9uIDcuMCBhbmQgaXRzIHB1YmxpYyBBUEkuXFxyXFxuSXQgYXNzdW1lcyB0aGF0IHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiaHR0cHM6Ly93d3cubnVnZXQub3JnL3BhY2thZ2VzL1JhYmJpdE1RLkNsaWVudFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJtb3N0IHJlY2VudCBtYWpvciB2ZXJzaW9uIG9mIHRoZSBjbGllbnRcIlxuICAgICAgfSksIFwiIGlzIHVzZWRcXHJcXG5hbmQgdGhlIHJlYWRlciBpcyBmYW1pbGlhciB3aXRoIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIvdHV0b3JpYWxzXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInRoZSBiYXNpY3NcIlxuICAgICAgfSksIFwiLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIktleSBzZWN0aW9ucyBvZiB0aGUgZ3VpZGUgYXJlOlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnVsLCB7XG4gICAgICBjaGlsZHJlbjogW1wiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiI2RvdG5ldC12ZXJzaW9uc1wiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIi5ORVQgdmVyc2lvbiByZXF1aXJlbWVudHNcIlxuICAgICAgICB9KVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIjbWFqb3ItYXBpLWVsZW1lbnRzXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwiSW1wb3J0YW50IGludGVyZmFjZXMgYW5kIGNsYXNzZXNcIlxuICAgICAgICB9KSwgXCIgaW4gdGhlIHB1YmxpYyBBUElcIl1cbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIiNsaW1pdGF0aW9uc1wiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIkxpbWl0YXRpb25zXCJcbiAgICAgICAgfSlcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIiNjb25uZWN0aW5nXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwiQ29ubmVjdGluZyB0byBSYWJiaXRNUVwiXG4gICAgICAgIH0pXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIjY29ubmVjdGlvbi1hbmQtY2hhbm5lbC1saWZlc3BhblwiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIkNvbm5lY3Rpb24gYW5kIENoYW5uZWwgTGlmZXNwYW5cIlxuICAgICAgICB9KVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiI2NsaWVudC1wcm92aWRlZC1uYW1lc1wiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIkNsaWVudC1wcm92aWRlZCBjb25uZWN0aW9uIG5hbWVcIlxuICAgICAgICB9KVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiI2V4Y2hhbmdlcy1hbmQtcXVldWVzXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwiVXNpbmcgRXhjaGFuZ2VzIGFuZCBRdWV1ZXNcIlxuICAgICAgICB9KVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiI3B1Ymxpc2hpbmdcIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJQdWJsaXNoaW5nIE1lc3NhZ2VzXCJcbiAgICAgICAgfSlcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiI2NvbnN1bWluZ1wiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIkNvbnN1bWluZyBVc2luZyBhIFN1YnNjcmlwdGlvblwiXG4gICAgICAgIH0pLCBcIiBhbmQgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiI2NvbnN1bWluZy1tZW1vcnktc2FmZXR5XCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwiQ29uc3VtZXIgTWVtb3J5IFNhZmV0eVwiXG4gICAgICAgIH0pXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiI2NvbmN1cnJlbmN5XCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwiQ29uY3VycmVuY3kgQ29uc2lkZXJhdGlvbnMgYW5kIFNhZmV0eVwiXG4gICAgICAgIH0pXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgICAgaHJlZjogXCIjcmVjb3ZlcnlcIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJBdXRvbWF0aWMgUmVjb3ZlcnkgRnJvbSBOZXR3b3JrIEZhaWx1cmVzXCJcbiAgICAgICAgfSlcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIiNvYXV0aDItc3VwcG9ydFwiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIk9BdXRoIDIgU3VwcG9ydFwiXG4gICAgICAgIH0pXG4gICAgICB9KSwgXCJcXG5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkFuIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCJodHRwczovL3JhYmJpdG1xLmdpdGh1Yi5pby9yYWJiaXRtcS1kb3RuZXQtY2xpZW50L2FwaS9SYWJiaXRNUS5DbGllbnQuaHRtbFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJBUEkgcmVmZXJlbmNlXCJcbiAgICAgIH0pLCBcIiBpcyBhdmFpbGFibGUgc2VwYXJhdGVseS5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwiZG90bmV0LXZlcnNpb25zXCIsXG4gICAgICBjaGlsZHJlbjogXCIuTkVUIFZlcnNpb24gUmVxdWlyZW1lbnRzXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIjcuMC54IGFuZCA2LjgueCByZWxlYXNlIHNlcmllcyBvZiB0aGlzIGxpYnJhcnkgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi4vZG90bmV0I292ZXJ2aWV3XCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInJlcXVpcmUgLk5FVCA0LjYuMSsgb3IgYSAuTkVUIFN0YW5kYXJkIDIuMCsgaW1wbGVtZW50YXRpb25cIlxuICAgICAgfSksIFwiLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJsaWNlbnNlXCIsXG4gICAgICBjaGlsZHJlbjogXCJMaWNlbnNlXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlRoZSBsaWJyYXJ5IGlzIG9wZW4gc291cmNlLCBkZXZlbG9wZWQgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9yYWJiaXRtcS9yYWJiaXRtcS1kb3RuZXQtY2xpZW50L1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJvbiBHaXRIdWJcIlxuICAgICAgfSksIFwiLCBhbmQgaXMgZG91YmxlLWxpY2Vuc2VkIHVuZGVyIHRoZVwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy51bCwge1xuICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcImh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAuaHRtbFwiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIkFwYWNoZSBQdWJsaWMgTGljZW5zZSAyLjBcIlxuICAgICAgICB9KVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiaHR0cHM6Ly93d3cubW96aWxsYS5vcmcvTVBMLzIuMC9cIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJNb3ppbGxhIFB1YmxpYyBMaWNlbnNlIDIuMFwiXG4gICAgICAgIH0pXG4gICAgICB9KSwgXCJcXG5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJUaGlzIG1lYW5zIHRoYXQgdGhlIHVzZXIgY2FuIGNvbnNpZGVyIHRoZSBsaWJyYXJ5IHRvIGJlIGxpY2Vuc2VkIHVuZGVyIGFueSBvZiB0aGUgbGljZW5zZXMgZnJvbSB0aGUgbGlzdCBhYm92ZS5cXHJcXG5Gb3IgZXhhbXBsZSwgdGhlIHVzZXIgbWF5IGNob29zZSB0aGUgQXBhY2hlIFB1YmxpYyBMaWNlbnNlIDIuMCBhbmQgaW5jbHVkZSB0aGlzIGNsaWVudCBpbnRvXFxyXFxuYSBjb21tZXJjaWFsIHByb2R1Y3QuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwibWFqb3ItYXBpLWVsZW1lbnRzXCIsXG4gICAgICBjaGlsZHJlbjogXCJNYWpvciBuYW1lc3BhY2VzLCBpbnRlcmZhY2VzIGFuZCBjbGFzc2VzXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlRoZSBjbGllbnQgQVBJIGlzIGNsb3NlbHkgbW9kZWxsZWQgb24gdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIvdHV0b3JpYWxzL2FtcXAtY29uY2VwdHNcIixcbiAgICAgICAgY2hpbGRyZW46IFwiQU1RUCAwLTktMSBwcm90b2NvbCBtb2RlbFwiXG4gICAgICB9KSwgXCIsXFxyXFxud2l0aCBhZGRpdGlvbmFsIGFic3RyYWN0aW9ucyBmb3IgZWFzZSBvZiB1c2UuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJBbiBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiaHR0cHM6Ly9yYWJiaXRtcS5naXRodWIuaW8vcmFiYml0bXEtZG90bmV0LWNsaWVudC9cIixcbiAgICAgICAgY2hpbGRyZW46IFwiQVBJIHJlZmVyZW5jZVwiXG4gICAgICB9KSwgXCIgaXMgYXZhaWxhYmxlIHNlcGFyYXRlbHkuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJUaGUgY29yZSBBUEkgaW50ZXJmYWNlcyBhbmQgY2xhc3NlcyBhcmUgZGVmaW5lZCBpbiB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJSYWJiaXRNUS5DbGllbnRcIlxuICAgICAgfSksIFwiIG5hbWVzcGFjZTpcIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWNzaGFycFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJ1c2luZyBSYWJiaXRNUS5DbGllbnQ7XFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiVGhlIGNvcmUgQVBJIGludGVyZmFjZXMgYW5kIGNsYXNzZXMgYXJlXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMudWwsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJJQ2hhbm5lbFwiXG4gICAgICAgIH0pLCBcIjogcmVwcmVzZW50cyBhbiBBTVFQIDAtOS0xIGNoYW5uZWwsIGFuZCBwcm92aWRlcyBtb3N0IG9mIHRoZSBvcGVyYXRpb25zIChwcm90b2NvbCBtZXRob2RzKVwiXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiSUNvbm5lY3Rpb25cIlxuICAgICAgICB9KSwgXCI6IHJlcHJlc2VudHMgYW4gQU1RUCAwLTktMSBjb25uZWN0aW9uXCJdXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJDb25uZWN0aW9uRmFjdG9yeVwiXG4gICAgICAgIH0pLCBcIjogY29uc3RydWN0cyBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiSUNvbm5lY3Rpb25cIlxuICAgICAgICB9KSwgXCIgaW5zdGFuY2VzXCJdXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJJQXN5bmNCYXNpY0NvbnN1bWVyXCJcbiAgICAgICAgfSksIFwiOiByZXByZXNlbnRzIGEgbWVzc2FnZSBjb25zdW1lclwiXVxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiT3RoZXIgdXNlZnVsIGludGVyZmFjZXMgYW5kIGNsYXNzZXMgaW5jbHVkZTpcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy51bCwge1xuICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIkFzeW5jRGVmYXVsdEJhc2ljQ29uc3VtZXJcIlxuICAgICAgICB9KSwgXCI6IGNvbW1vbmx5IHVzZWQgYmFzZSBjbGFzcyBmb3IgY29uc3VtZXJzXCJdXG4gICAgICB9KSwgXCJcXG5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlB1YmxpYyBuYW1lc3BhY2VzIG90aGVyIHRoYW4gXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJSYWJiaXRNUS5DbGllbnRcIlxuICAgICAgfSksIFwiIGluY2x1ZGU6XCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnVsLCB7XG4gICAgICBjaGlsZHJlbjogW1wiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiUmFiYml0TVEuQ2xpZW50LkV2ZW50c1wiXG4gICAgICAgIH0pLCBcIjogdmFyaW91cyBldmVudHMgYW5kIGV2ZW50IGhhbmRsZXJzXFxyXFxudGhhdCBhcmUgcGFydCBvZiB0aGUgY2xpZW50IGxpYnJhcnksIGluY2x1ZGluZyBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiQXN5bmNFdmVudGluZ0Jhc2ljQ29uc3VtZXJcIlxuICAgICAgICB9KSwgXCIsXFxyXFxuYSBjb25zdW1lciBpbXBsZW1lbnRhdGlvbiBidWlsdCBhcm91bmQgQyMgZXZlbnQgaGFuZGxlcnMuXCJdXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJSYWJiaXRNUS5DbGllbnQuRXhjZXB0aW9uc1wiXG4gICAgICAgIH0pLCBcIjogZXhjZXB0aW9ucyB2aXNpYmxlIHRvIHRoZSB1c2VyLlwiXVxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiQWxsIG90aGVyIG5hbWVzcGFjZXMgYXJlIHJlc2VydmVkIGZvciBwcml2YXRlIGltcGxlbWVudGF0aW9uIGRldGFpbCBvZlxcclxcbnRoZSBsaWJyYXJ5LCBhbHRob3VnaCBtZW1iZXJzIG9mIHByaXZhdGUgbmFtZXNwYWNlcyBhcmUgdXN1YWxseSBtYWRlXFxyXFxuYXZhaWxhYmxlIHRvIGFwcGxpY2F0aW9ucyB1c2luZyB0aGUgbGlicmFyeSBpbiBvcmRlciB0byBwZXJtaXRcXHJcXG5kZXZlbG9wZXJzIHRvIGltcGxlbWVudCB3b3JrYXJvdW5kcyBmb3IgZmF1bHRzIGFuZCBnYXBzIHRoZXlcXHJcXG5kaXNjb3ZlciBpbiB0aGUgbGlicmFyeSBpbXBsZW1lbnRhdGlvbi4gQXBwbGljYXRpb25zIGNhbm5vdCByZWx5IG9uXFxyXFxuYW55IGNsYXNzZXMsIGludGVyZmFjZXMsIG1lbWJlciB2YXJpYWJsZXMgZXRjLiB0aGF0IGFwcGVhciB3aXRoaW5cXHJcXG5wcml2YXRlIG5hbWVzcGFjZXMgcmVtYWluaW5nIHN0YWJsZSBhY3Jvc3MgcmVsZWFzZXMgb2YgdGhlIGxpYnJhcnkuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwibGltaXRhdGlvbnNcIixcbiAgICAgIGNoaWxkcmVuOiBcIkxpbWl0YXRpb25zXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlRoaXMgY2xpZW50IGRvZXMgbm90IHN1cHBvcnQgdW5zaWduZWQgNjQtYml0IGludGVnZXJzLCByZXByZXNlbnRlZCBpblxcclxcbnR5cGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJ1bG9uZ1wiXG4gICAgICB9KSwgXCIuIEF0dGVtcHRpbmcgdG8gZW5jb2RlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwidWxvbmdcIlxuICAgICAgfSksIFwiIHZhbHVlcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbi5cXHJcXG5Ob3RlIHRoYXQgc2lnbmVkIDY0LWJpdCBpbnRlZ2VycyBhcmUgc3VwcG9ydGVkLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVGhpcyBpcyBpbiBwYXJ0IGR1ZSB0byB0eXBlIG1hcmtlciBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiL2FtcXAtMC05LTEtZXJyYXRhI3NlY3Rpb25fM1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJhbWJpZ3VpdHkgaW4gdGhlIEFNUVAgMC05LTEgc3BlY1wiXG4gICAgICB9KSwgXCIsXFxyXFxuYW5kIGluIHBhcnQgZHVlIHRvIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCJodHRwczovL2dpdGh1Yi5jb20vcmFiYml0bXEvcmFiYml0bXEtZG90bmV0LWNsaWVudC9wdWxsLzEyOTkjaXNzdWVjb21tZW50LTE0MzMzNDI5MjRcIixcbiAgICAgICAgY2hpbGRyZW46IFwidGhlIGxpc3Qgb2YgdHlwZXMgc3VwcG9ydGVkIGJ5IG90aGVyIHBvcHVsYXIgY2xpZW50c1wiXG4gICAgICB9KSwgXCIuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcImNvbm5lY3RpbmdcIixcbiAgICAgIGNoaWxkcmVuOiBcIkNvbm5lY3RpbmcgdG8gUmFiYml0TVFcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiQmVmb3JlIGFuIGFwcGxpY2F0aW9uIGNhbiB1c2UgUmFiYml0TVEsIGl0IGhhcyB0byBvcGVuIGEgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi9kb2NzL2Nvbm5lY3Rpb25zXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImNvbm5lY3Rpb25cIlxuICAgICAgfSksIFwiXFxyXFxudG8gYSBSYWJiaXRNUSBub2RlLiBUaGUgY29ubmVjdGlvbiB0aGVuIHdpbGwgYmUgdXNlZCB0byBwZXJmb3JtIGFsbCBzdWJzZXF1ZW50XFxyXFxub3BlcmF0aW9ucy4gQ29ubmVjdGlvbnMgYXJlIFwiLCBfanN4KF9jb21wb25lbnRzLnN0cm9uZywge1xuICAgICAgICBjaGlsZHJlbjogXCJtZWFudCB0byBiZSBsb25nLWxpdmVkXCJcbiAgICAgIH0pLCBcIi4gT3BlbmluZyBhIGNvbm5lY3Rpb25cXHJcXG5mb3IgZXZlcnkgb3BlcmF0aW9uIChlLmcuIHB1Ymxpc2hpbmcgYSBtZXNzYWdlKSB3b3VsZCBiZSB2ZXJ5IGluZWZmaWNpZW50IGFuZCBpc1xcclxcblwiLCBfanN4KF9jb21wb25lbnRzLnN0cm9uZywge1xuICAgICAgICBjaGlsZHJlbjogXCJoaWdobHkgZGlzY291cmFnZWRcIlxuICAgICAgfSksIFwiLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVG8gb3BlbiBhIGNvbm5lY3Rpb24gd2l0aCB0aGUgLk5FVCBjbGllbnQsIGZpcnN0IGluc3RhbnRpYXRlIGEgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJDb25uZWN0aW9uRmFjdG9yeVwiXG4gICAgICB9KSwgXCJcXHJcXG5hbmQgY29uZmlndXJlIGl0IHRvIHVzZSBkZXNpcmVkIGhvc3RuYW1lLCB2aXJ0dWFsIGhvc3QsIGNyZWRlbnRpYWxzLCBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiL2RvY3Mvc3NsXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIlRMUyBzZXR0aW5nc1wiXG4gICAgICB9KSwgXCIsXFxyXFxuYW5kIGFueSBvdGhlciBwYXJhbWV0ZXJzIGFzIG5lZWRlZC5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlRoZW4gYXdhaXQgdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiQ29ubmVjdGlvbkZhY3RvcnkuQ3JlYXRlQ29ubmVjdGlvbkFzeW5jKClcIlxuICAgICAgfSksIFwiIG1ldGhvZCB0byBvcGVuIGEgY29ubmVjdGlvbi5cXHJcXG5TdWNjZXNzZnVsIGFuZCB1bnN1Y2Nlc3NmdWwgY2xpZW50IGNvbm5lY3Rpb24gZXZlbnRzIGNhbiBiZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiL2RvY3MvbmV0d29ya2luZyNsb2dnaW5nXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIm9ic2VydmVkIGluIHNlcnZlciBsb2dzXCJcbiAgICAgIH0pLCBcIi5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlRoZSBmb2xsb3dpbmcgdHdvIGNvZGUgc25pcHBldHMgY29ubmVjdCB0byBhIFJhYmJpdE1RIG5vZGUgdXNpbmcgYSBob3N0bmFtZSBjb25maWd1cmVkXFxyXFxudXNpbmcgdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiaG9zdE5hbWVcIlxuICAgICAgfSksIFwiIHByb3BlcnR5OlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtY3NoYXJwXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIkNvbm5lY3Rpb25GYWN0b3J5IGZhY3RvcnkgPSBuZXcgQ29ubmVjdGlvbkZhY3RvcnkoKTtcXHJcXG4vLyBcXFwiZ3Vlc3RcXFwiL1xcXCJndWVzdFxcXCIgYnkgZGVmYXVsdCwgbGltaXRlZCB0byBsb2NhbGhvc3QgY29ubmVjdGlvbnNcXHJcXG5mYWN0b3J5LlVzZXJOYW1lID0gdXNlcjtcXHJcXG5mYWN0b3J5LlBhc3N3b3JkID0gcGFzcztcXHJcXG5mYWN0b3J5LlZpcnR1YWxIb3N0ID0gdmhvc3Q7XFxyXFxuZmFjdG9yeS5Ib3N0TmFtZSA9IGhvc3ROYW1lO1xcclxcblxcclxcbklDb25uZWN0aW9uIGNvbm4gPSBhd2FpdCBmYWN0b3J5LkNyZWF0ZUNvbm5lY3Rpb25Bc3luYygpO1xcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtY3NoYXJwXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIkNvbm5lY3Rpb25GYWN0b3J5IGZhY3RvcnkgPSBuZXcgQ29ubmVjdGlvbkZhY3RvcnkoKTtcXHJcXG5mYWN0b3J5LlVyaSA9IG5ldyBVcmkoXFxcImFtcXA6Ly91c2VyOnBhc3NAaG9zdE5hbWU6cG9ydC92aG9zdFxcXCIpO1xcclxcblxcclxcbklDb25uZWN0aW9uIGNvbm4gPSBhd2FpdCBmYWN0b3J5LkNyZWF0ZUNvbm5lY3Rpb25Bc3luYygpO1xcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgzLCB7XG4gICAgICBpZDogXCJlbmRwb2ludHMtbGlzdFwiLFxuICAgICAgY2hpbGRyZW46IFwiVXNpbmcgTGlzdHMgb2YgRW5kcG9pbnRzXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkl0IGlzIHBvc3NpYmxlIHRvIHNwZWNpZnkgYSBsaXN0IG9mIGVuZHBvaW50cyB0byB1c2Ugd2hlbiBjb25uZWN0aW5nLiBUaGUgZmlyc3RcXHJcXG5yZWFjaGFibGUgZW5kcG9pbnQgd2lsbCBiZSB1c2VkLiBJbiBjYXNlIG9mIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIjcmVjb3ZlcnlcIixcbiAgICAgICAgY2hpbGRyZW46IFwiY29ubmVjdGlvbiBmYWlsdXJlc1wiXG4gICAgICB9KSwgXCIsIHVzaW5nXFxyXFxuYSBsaXN0IG9mIGVuZHBvaW50cyBtYWtlcyBpdCBwb3NzaWJsZSBmb3IgdGhlIGFwcGxpY2F0aW9uIHRvIGNvbm5lY3QgdG8gYSBkaWZmZXJlbnRcXHJcXG5ub2RlIGlmIHRoZSBvcmlnaW5hbCBvbmUgaXMgZG93bi5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlRvIHVzZSBtdWx0aXBsZSBlbmRwb2ludHMsIHByb3ZpZGUgYSBsaXN0IG9mIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiQW1xcFRjcEVuZHBvaW50XCJcbiAgICAgIH0pLCBcInMgdG8gXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJDb25uZWN0aW9uRmFjdG9yeSNDcmVhdGVDb25uZWN0aW9uXCJcbiAgICAgIH0pLCBcIi5cXHJcXG5BbiBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIkFtcXBUY3BFbmRwb2ludFwiXG4gICAgICB9KSwgXCIgcmVwcmVzZW50cyBhIGhvc3RuYW1lIGFuZCBwb3J0IHBhaXIuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1jc2hhcnBcIixcbiAgICAgICAgY2hpbGRyZW46IFwiQ29ubmVjdGlvbkZhY3RvcnkgZmFjdG9yeSA9IG5ldyBDb25uZWN0aW9uRmFjdG9yeSgpO1xcclxcbmZhY3RvcnkuVXNlck5hbWUgPSBcXFwidXNlcm5hbWVcXFwiO1xcclxcbmZhY3RvcnkuUGFzc3dvcmQgPSBcXFwiczNLcmU3XFxcIjtcXHJcXG5cXHJcXG52YXIgZW5kcG9pbnRzID0gbmV3IFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkxpc3Q8QW1xcFRjcEVuZHBvaW50PiB7XFxyXFxuICBuZXcgQW1xcFRjcEVuZHBvaW50KFxcXCJob3N0bmFtZVxcXCIpLFxcclxcbiAgbmV3IEFtcXBUY3BFbmRwb2ludChcXFwibG9jYWxob3N0XFxcIilcXHJcXG59O1xcclxcbklDb25uZWN0aW9uIGNvbm4gPSBhd2FpdCBmYWN0b3J5LkNyZWF0ZUNvbm5lY3Rpb25Bc3luYyhlbmRwb2ludHMpO1xcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KFwiYVwiLCB7XG4gICAgICBpZDogXCJjb25uZWN0aW5nLXVyaVwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJTaW5jZSB0aGUgLk5FVCBjbGllbnQgdXNlcyBhIHN0cmljdGVyIGludGVycHJldGF0aW9uIG9mIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiL2RvY3MvdXJpLXNwZWNcIixcbiAgICAgICAgY2hpbGRyZW46IFwiQU1RUCAwLTktMSBVUkkgc3BlY1wiXG4gICAgICB9KSwgXCJcXHJcXG50aGFuIHRoZSBvdGhlciBjbGllbnRzLCBjYXJlIG11c3QgYmUgdGFrZW4gd2hlbiB1c2luZyBVUklzLlxcclxcbkluIHBhcnRpY3VsYXIsIHRoZSBob3N0IHBhcnQgbXVzdCBub3QgYmUgb21pdHRlZCBhbmQgdmlydHVhbCBob3N0cyB3aXRoXFxyXFxuZW1wdHkgbmFtZXMgYXJlIG5vdCBhZGRyZXNzYWJsZS5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJBbGwgZmFjdG9yeSBwcm9wZXJ0aWVzIGhhdmUgZGVmYXVsdCB2YWx1ZXMuIFRoZSBkZWZhdWx0IHZhbHVlIGZvciBhIHByb3BlcnR5IHdpbGwgYmUgdXNlZCBpZiB0aGUgcHJvcGVydHlcXHJcXG5yZW1haW5zIHVuYXNzaWduZWQgcHJpb3IgdG8gY3JlYXRpbmcgYSBjb25uZWN0aW9uOlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKFwidGFibGVcIiwge1xuICAgICAgY2hpbGRyZW46IFtfanN4KFwidGhlYWRcIiwge1xuICAgICAgICBjaGlsZHJlbjogX2pzeHMoXCJ0clwiLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFtfanN4KFwidGRcIiwge1xuICAgICAgICAgICAgY2hpbGRyZW46IFwiUHJvcGVydHlcIlxuICAgICAgICAgIH0pLCBfanN4KFwidGRcIiwge1xuICAgICAgICAgICAgY2hpbGRyZW46IFwiRGVmYXVsdCBWYWx1ZVwiXG4gICAgICAgICAgfSldXG4gICAgICAgIH0pXG4gICAgICB9KSwgX2pzeHMoXCJ0clwiLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbX2pzeChcInRkXCIsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJVc2VybmFtZVwiXG4gICAgICAgIH0pLCBfanN4KFwidGRcIiwge1xuICAgICAgICAgIGNoaWxkcmVuOiBfanN4KFwiY29kZVwiLCB7XG4gICAgICAgICAgICBjaGlsZHJlbjogXCJcXFwiZ3Vlc3RcXFwiXCJcbiAgICAgICAgICB9KVxuICAgICAgICB9KV1cbiAgICAgIH0pLCBfanN4cyhcInRyXCIsIHtcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KFwidGRcIiwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIlBhc3N3b3JkXCJcbiAgICAgICAgfSksIF9qc3goXCJ0ZFwiLCB7XG4gICAgICAgICAgY2hpbGRyZW46IF9qc3goXCJjb2RlXCIsIHtcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcIlxcXCJndWVzdFxcXCJcIlxuICAgICAgICAgIH0pXG4gICAgICAgIH0pXVxuICAgICAgfSksIF9qc3hzKFwidHJcIiwge1xuICAgICAgICBjaGlsZHJlbjogW19qc3goXCJ0ZFwiLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiVmlydHVhbCBob3N0XCJcbiAgICAgICAgfSksIF9qc3goXCJ0ZFwiLCB7XG4gICAgICAgICAgY2hpbGRyZW46IF9qc3goXCJjb2RlXCIsIHtcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcIlxcXCIvXFxcIlwiXG4gICAgICAgICAgfSlcbiAgICAgICAgfSldXG4gICAgICB9KSwgX2pzeHMoXCJ0clwiLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbX2pzeChcInRkXCIsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJIb3N0bmFtZVwiXG4gICAgICAgIH0pLCBfanN4KFwidGRcIiwge1xuICAgICAgICAgIGNoaWxkcmVuOiBfanN4KFwiY29kZVwiLCB7XG4gICAgICAgICAgICBjaGlsZHJlbjogXCJcXFwibG9jYWxob3N0XFxcIlwiXG4gICAgICAgICAgfSlcbiAgICAgICAgfSldXG4gICAgICB9KSwgX2pzeHMoXCJ0clwiLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbX2pzeChcInRkXCIsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJQb3J0XCJcbiAgICAgICAgfSksIF9qc3goXCJ0ZFwiLCB7XG4gICAgICAgICAgY2hpbGRyZW46IF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbX2pzeChcImNvZGVcIiwge1xuICAgICAgICAgICAgICBjaGlsZHJlbjogXCI1NjcyXCJcbiAgICAgICAgICAgIH0pLCBcIiBmb3IgcmVndWxhciAoXFxcInBsYWluIFRDUFxcXCIpIGNvbm5lY3Rpb25zLFxcclxcblwiLCBfanN4KFwiY29kZVwiLCB7XG4gICAgICAgICAgICAgIGNoaWxkcmVuOiBcIjU2NzFcIlxuICAgICAgICAgICAgfSksIFwiIGZvciBcIiwgX2pzeChcImFcIiwge1xuICAgICAgICAgICAgICBocmVmOiBcIi9kb2NzL3NzbFwiLFxuICAgICAgICAgICAgICBjaGlsZHJlbjogXCJjb25uZWN0aW9ucyB3aXRoIFRMUyBlbmFibGVkXCJcbiAgICAgICAgICAgIH0pXVxuICAgICAgICAgIH0pXG4gICAgICAgIH0pXVxuICAgICAgfSldXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJOb3RlIHRoYXQgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi9kb2NzL2FjY2Vzcy1jb250cm9sXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInVzZXIgZ3Vlc3QgY2FuIG9ubHkgY29ubmVjdCBmcm9tIGxvY2FsaG9zdFwiXG4gICAgICB9KSwgXCIgYnkgZGVmYXVsdC5cXHJcXG5UaGlzIGlzIHRvIGxpbWl0IHdlbGwta25vd24gY3JlZGVudGlhbCB1c2UgaW4gcHJvZHVjdGlvbiBzeXN0ZW1zLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiSUNvbm5lY3Rpb25cIlxuICAgICAgfSksIFwiIGludGVyZmFjZSBjYW4gdGhlbiBiZSB1c2VkIHRvIG9wZW4gYSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiL2RvY3MvY2hhbm5lbHNcIixcbiAgICAgICAgY2hpbGRyZW46IFwiY2hhbm5lbFwiXG4gICAgICB9KSwgXCI6XCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1jc2hhcnBcIixcbiAgICAgICAgY2hpbGRyZW46IFwiSUNoYW5uZWwgY2hhbm5lbCA9IGF3YWl0IGNvbm4uQ3JlYXRlQ2hhbm5lbEFzeW5jKCk7XFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiVGhlIGNoYW5uZWwgY2FuIG5vdyBiZSB1c2VkIHRvIHNlbmQgYW5kIHJlY2VpdmUgbWVzc2FnZXMsXFxyXFxuYXMgZGVzY3JpYmVkIGluIHN1YnNlcXVlbnQgc2VjdGlvbnMuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkp1c3QgbGlrZSBjb25uZWN0aW9ucywgY2hhbm5lbHMgYXJlIFwiLCBfanN4KF9jb21wb25lbnRzLnN0cm9uZywge1xuICAgICAgICBjaGlsZHJlbjogXCJtZWFudCB0byBiZSBsb25nLWxpdmVkXCJcbiAgICAgIH0pLCBcIi4gT3BlbmluZyBhIG5ldyBjaGFubmVsXFxyXFxuZm9yIGV2ZXJ5IG9wZXJhdGlvbiB3b3VsZCBiZSBoaWdobHkgaW5lZmZpY2llbnQgYW5kIGlzIFwiLCBfanN4KF9jb21wb25lbnRzLnN0cm9uZywge1xuICAgICAgICBjaGlsZHJlbjogXCJoaWdobHkgZGlzY291cmFnZWRcIlxuICAgICAgfSksIFwiLiBDaGFubmVscyxcXHJcXG5ob3dldmVyLCBjYW4gaGF2ZSBhIHNob3J0ZXIgbGlmZSBzcGFuIHRoYW4gY29ubmVjdGlvbnMuIEZvciBleGFtcGxlLCBjZXJ0YWluXFxyXFxucHJvdG9jb2wgZXJyb3JzIHdpbGwgYXV0b21hdGljYWxseSBjbG9zZSBjaGFubmVscy4gSWYgYXBwbGljYXRpb25zIGNhbiByZWNvdmVyXFxyXFxuZnJvbSB0aGVtLCB0aGV5IGNhbiBvcGVuIGEgbmV3IGNoYW5uZWwgYW5kIHJldHJ5IHRoZSBvcGVyYXRpb24uXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJUaGlzIGlzIGNvdmVyZWQgaW4gbW9yZSBkZXRhaWwgaW4gdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIvZG9jcy9jaGFubmVsc1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJDaGFubmVsIGd1aWRlXCJcbiAgICAgIH0pLCBcIiBhcyB3ZWxsIGFzIG90aGVyXFxyXFxuZ3VpZGVzIHN1Y2ggYXMgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi9kb2NzL2NvbmZpcm1zXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIkNvbnN1bWVyIEFja25vd2xlZGdlbWVudHNcIlxuICAgICAgfSksIFwiLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJkaXNjb25uZWN0aW5nXCIsXG4gICAgICBjaGlsZHJlbjogXCJEaXNjb25uZWN0aW5nIGZyb20gUmFiYml0TVFcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIlRvIGRpc2Nvbm5lY3QsIHNpbXBseSBjbG9zZSB0aGUgY2hhbm5lbCBhbmQgdGhlIGNvbm5lY3Rpb246XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWNzaGFycFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJhd2FpdCBjaGFubmVsLkNsb3NlQXN5bmMoKTtcXHJcXG5hd2FpdCBjb25uLkNsb3NlQXN5bmMoKTtcXHJcXG5hd2FpdCBjaGFubmVsLkRpc3Bvc2VBc3luYygpO1xcclxcbmF3YWl0IGNvbm4uRGlzcG9zZUFzeW5jKCk7XFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiV2hpbGUgZGlzcG9zaW5nIGNoYW5uZWwgYW5kIGNvbm5lY3Rpb24gb2JqZWN0cyBpcyBzdWZmaWNpZW50LCB0aGUgYmVzdCBwcmFjdGljZVxcclxcbmlzIHRoYXQgdGhleSBiZSBleHBsaWNpdGx5IGNsb3NlZCBmaXJzdC5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiQ2xpZW50IGRpc2Nvbm5lY3Rpb24gZXZlbnRzIGNhbiBiZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiL2RvY3MvbmV0d29ya2luZyNsb2dnaW5nXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIm9ic2VydmVkIGluIHNlcnZlciBub2RlIGxvZ3NcIlxuICAgICAgfSksIFwiLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJjb25uZWN0aW9uLWFuZC1jaGFubmVsLWxpZmVzcGFuXCIsXG4gICAgICBjaGlsZHJlbjogXCJDb25uZWN0aW9uIGFuZCBDaGFubmVsIExpZmVzcGFuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJDb25uZWN0aW9ucyBhcmUgbWVhbnQgdG8gYmUgbG9uZy1saXZlZC4gVGhlIHVuZGVybHlpbmcgcHJvdG9jb2wgaXMgZGVzaWduZWQgYW5kIG9wdGltaXplZCBmb3JcXHJcXG5sb25nIHJ1bm5pbmcgY29ubmVjdGlvbnMuIFRoYXQgbWVhbnMgdGhhdCBvcGVuaW5nIGEgbmV3IGNvbm5lY3Rpb24gcGVyIG9wZXJhdGlvbixcXHJcXG5lLmcuIGEgbWVzc2FnZSBwdWJsaXNoZWQsIGlzIHVubmVjZXNzYXJ5IGFuZCBzdHJvbmdseSBkaXNjb3VyYWdlZCBhcyBpdCB3aWxsIGludHJvZHVjZSBhIGxvdCBvZlxcclxcbm5ldHdvcmsgcm91bmR0cmlwcyBhbmQgb3ZlcmhlYWQuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJDaGFubmVscyBhcmUgYWxzbyBtZWFudCB0byBiZSBsb25nLWxpdmVkIGJ1dCBzaW5jZSBtYW55IHJlY292ZXJhYmxlIHByb3RvY29sIGVycm9ycyB3aWxsXFxyXFxucmVzdWx0IGluIGNoYW5uZWwgY2xvc3VyZSwgY2hhbm5lbCBsaWZlc3BhbiBjb3VsZCBiZSBzaG9ydGVyIHRoYW4gdGhhdCBvZiBpdHMgY29ubmVjdGlvbi5cXHJcXG5DbG9zaW5nIGFuZCBvcGVuaW5nIG5ldyBjaGFubmVscyBwZXIgb3BlcmF0aW9uIGlzIHVzdWFsbHkgdW5uZWNlc3NhcnkgYnV0IGNhbiBiZVxcclxcbmFwcHJvcHJpYXRlLiBXaGVuIGluIGRvdWJ0LCBjb25zaWRlciByZXVzaW5nIGNoYW5uZWxzIGZpcnN0LlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiQ2hhbm5lbC1sZXZlbCBleGNlcHRpb25zIHN1Y2ggYXMgYXR0ZW1wdHMgdG8gY29uc3VtZSBmcm9tIGFcXHJcXG5xdWV1ZSB0aGF0IGRvZXMgbm90IGV4aXN0IHdpbGwgcmVzdWx0IGluIGNoYW5uZWwgY2xvc3VyZS4gQSBjbG9zZWQgY2hhbm5lbCBjYW4gbm9cXHJcXG5sb25nZXIgYmUgdXNlZCBhbmQgd2lsbCBub3QgcmVjZWl2ZSBhbnkgbW9yZSBldmVudHMgZnJvbSB0aGUgc2VydmVyIChzdWNoXFxyXFxuYXMgbWVzc2FnZSBkZWxpdmVyaWVzKS4gQ2hhbm5lbC1sZXZlbCBleGNlcHRpb25zIHdpbGwgYmUgbG9nZ2VkIGJ5IFJhYmJpdE1RXFxyXFxuYW5kIHdpbGwgaW5pdGlhdGUgYSBzaHV0ZG93biBzZXF1ZW5jZSBmb3IgdGhlIGNoYW5uZWwgKHNlZSBiZWxvdykuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwiY2xpZW50LXByb3ZpZGVkLW5hbWVzXCIsXG4gICAgICBjaGlsZHJlbjogXCJDbGllbnQtUHJvdmlkZWQgQ29ubmVjdGlvbiBOYW1lXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJSYWJiaXRNUSBub2RlcyBoYXZlIGEgbGltaXRlZCBhbW91bnQgb2YgaW5mb3JtYXRpb24gYWJvdXQgdGhlaXIgY2xpZW50czpcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy51bCwge1xuICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInRoZWlyIFRDUCBlbmRwb2ludCAoc291cmNlIElQIGFkZHJlc3MgYW5kIHBvcnQpXCJcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInRoZSBjcmVkZW50aWFscyB1c2VkXCJcbiAgICAgIH0pLCBcIlxcblwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVGhpcyBpbmZvcm1hdGlvbiBhbG9uZSBjYW4gbWFrZSBpZGVudGlmeWluZyBhcHBsaWNhdGlvbnMgYW5kIGluc3RhbmNlcyBwcm9ibGVtYXRpYywgaW4gcGFydGljdWxhciB3aGVuIGNyZWRlbnRpYWxzIGNhbiBiZVxcclxcbnNoYXJlZCBhbmQgY2xpZW50cyBjb25uZWN0IG92ZXIgYSBsb2FkIGJhbGFuY2VyIGJ1dCBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiL2RvY3MvbmV0d29ya2luZyNwcm94eS1wcm90b2NvbFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJQcm94eSBwcm90b2NvbFwiXG4gICAgICB9KSwgXCIgY2Fubm90IGJlIGVuYWJsZWQuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJUbyBtYWtlIGl0IGVhc2llciB0byBpZGVudGlmeSBjbGllbnRzIGluIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIvZG9jcy9sb2dnaW5nXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInNlcnZlciBsb2dzXCJcbiAgICAgIH0pLCBcIiBhbmQgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi9kb2NzL21hbmFnZW1lbnRcIixcbiAgICAgICAgY2hpbGRyZW46IFwibWFuYWdlbWVudCBVSVwiXG4gICAgICB9KSwgXCIsXFxyXFxuQU1RUCAwLTktMSBjbGllbnQgY29ubmVjdGlvbnMsIGluY2x1ZGluZyB0aGUgUmFiYml0TVEgLk5FVCBjbGllbnQsIGNhbiBwcm92aWRlIGEgY3VzdG9tIGlkZW50aWZpZXIuXFxyXFxuSWYgc2V0LCB0aGUgaWRlbnRpZmllciB3aWxsIGJlIG1lbnRpb25lZCBpbiBsb2cgZW50cmllcyBhbmQgbWFuYWdlbWVudCBVSS4gVGhlIGlkZW50aWZpZXIgaXMga25vd24gYXNcXHJcXG50aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuc3Ryb25nLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcImNsaWVudC1wcm92aWRlZCBjb25uZWN0aW9uIG5hbWVcIlxuICAgICAgfSksIFwiLiBUaGUgbmFtZSBjYW4gYmUgdXNlZCB0byBpZGVudGlmeSBhbiBhcHBsaWNhdGlvbiBvciBhIHNwZWNpZmljIGNvbXBvbmVudFxcclxcbndpdGhpbiBhbiBhcHBsaWNhdGlvbi4gVGhlIG5hbWUgaXMgb3B0aW9uYWw7IGhvd2V2ZXIsIGRldmVsb3BlcnMgYXJlIHN0cm9uZ2x5IGVuY291cmFnZWQgdG8gcHJvdmlkZSBvbmVcXHJcXG5hcyBpdCB3b3VsZCBzaWduaWZpY2FudGx5IHNpbXBsaWZ5IGNlcnRhaW4gb3BlcmF0aW9uYWwgdGFza3MuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJSYWJiaXRNUSAuTkVUIGNsaWVudCBwcm92aWRlcyBhIGNvbm5lY3Rpb24gZmFjdG9yeSBwcm9wZXJ0eSxcXHJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiaHR0cHM6Ly9yYWJiaXRtcS5naXRodWIuaW8vcmFiYml0bXEtZG90bmV0LWNsaWVudC9hcGkvUmFiYml0TVEuQ2xpZW50LkNvbm5lY3Rpb25GYWN0b3J5Lmh0bWwjUmFiYml0TVFfQ2xpZW50X0Nvbm5lY3Rpb25GYWN0b3J5X0NsaWVudFByb3ZpZGVkTmFtZVwiLFxuICAgICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiQ29ubmVjdGlvbkZhY3RvcnkuQ2xpZW50UHJvdmlkZWROYW1lXCJcbiAgICAgICAgfSlcbiAgICAgIH0pLCBcIixcXHJcXG53aGljaCwgaWYgc2V0LCBjb250cm9scyB0aGUgY2xpZW50LXByb3ZpZGVkIGNvbm5lY3Rpb24gbmFtZSBmb3IgYWxsIG5ldyBjb25uZWN0aW9ucyBvcGVuZWRcXHJcXG5ieSB0aGlzIGZhY3RvcnkuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiSGVyZSdzIGEgbW9kaWZpZWQgY29ubmVjdGlvbiBleGFtcGxlIHVzZWQgYWJvdmUgd2hpY2ggcHJvdmlkZXMgc3VjaCBhIG5hbWU6XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWNzaGFycFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJDb25uZWN0aW9uRmFjdG9yeSBmYWN0b3J5ID0gbmV3IENvbm5lY3Rpb25GYWN0b3J5KCk7XFxyXFxuLy8gXFxcImd1ZXN0XFxcIi9cXFwiZ3Vlc3RcXFwiIGJ5IGRlZmF1bHQsIGxpbWl0ZWQgdG8gbG9jYWxob3N0IGNvbm5lY3Rpb25zXFxyXFxuZmFjdG9yeS5Vc2VyTmFtZSA9IHVzZXI7XFxyXFxuZmFjdG9yeS5QYXNzd29yZCA9IHBhc3M7XFxyXFxuZmFjdG9yeS5WaXJ0dWFsSG9zdCA9IHZob3N0O1xcclxcbmZhY3RvcnkuSG9zdE5hbWUgPSBob3N0TmFtZTtcXHJcXG5cXHJcXG4vLyB0aGlzIG5hbWUgd2lsbCBiZSBzaGFyZWQgYnkgYWxsIGNvbm5lY3Rpb25zIGluc3RhbnRpYXRlZCBieVxcclxcbi8vIHRoaXMgZmFjdG9yeVxcclxcbmZhY3RvcnkuQ2xpZW50UHJvdmlkZWROYW1lID0gXFxcImFwcDphdWRpdCBjb21wb25lbnQ6ZXZlbnQtY29uc3VtZXJcXFwiO1xcclxcblxcclxcbklDb25uZWN0aW9uIGNvbm4gPSBhd2FpdCBmYWN0b3J5LkNyZWF0ZUNvbm5lY3Rpb25Bc3luYygpO1xcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJleGNoYW5nZXMtYW5kLXF1ZXVlc1wiLFxuICAgICAgY2hpbGRyZW46IFwiVXNpbmcgRXhjaGFuZ2VzIGFuZCBRdWV1ZXNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiQ2xpZW50IGFwcGxpY2F0aW9ucyB3b3JrIHdpdGggZXhjaGFuZ2VzIGFuZCBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiL2RvY3MvcXVldWVzXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInF1ZXVlc1wiXG4gICAgICB9KSwgXCIsXFxyXFxudGhlIGhpZ2gtbGV2ZWwgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi90dXRvcmlhbHMvYW1xcC1jb25jZXB0c1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJidWlsZGluZyBibG9ja3Mgb2YgdGhlIHByb3RvY29sXCJcbiAgICAgIH0pLCBcIi5cXHJcXG5UaGVzZSBtdXN0IGJlIFxcXCJkZWNsYXJlZFxcXCIgYmVmb3JlIHRoZXkgY2FuIGJlXFxyXFxudXNlZC4gRGVjbGFyaW5nIGVpdGhlciB0eXBlIG9mIG9iamVjdCBzaW1wbHkgZW5zdXJlcyB0aGF0IG9uZSBvZiB0aGF0XFxyXFxubmFtZSBleGlzdHMsIGNyZWF0aW5nIGl0IGlmIG5lY2Vzc2FyeS5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJDb250aW51aW5nIHRoZSBwcmV2aW91cyBleGFtcGxlLCB0aGUgZm9sbG93aW5nIGNvZGUgZGVjbGFyZXMgYW5cXHJcXG5leGNoYW5nZSBhbmQgYSBxdWV1ZSwgdGhlbiBiaW5kcyB0aGVtIHRvZ2V0aGVyLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1jc2hhcnBcIixcbiAgICAgICAgY2hpbGRyZW46IFwiYXdhaXQgY2hhbm5lbC5FeGNoYW5nZURlY2xhcmVBc3luYyhleGNoYW5nZU5hbWUsIEV4Y2hhbmdlVHlwZS5EaXJlY3QpO1xcclxcbmF3YWl0IGNoYW5uZWwuUXVldWVEZWNsYXJlQXN5bmMocXVldWVOYW1lLCBmYWxzZSwgZmFsc2UsIGZhbHNlLCBudWxsKTtcXHJcXG5hd2FpdCBjaGFubmVsLlF1ZXVlQmluZEFzeW5jKHF1ZXVlTmFtZSwgZXhjaGFuZ2VOYW1lLCByb3V0aW5nS2V5LCBudWxsKTtcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJUaGlzIHdpbGwgYWN0aXZlbHkgZGVjbGFyZSB0aGUgZm9sbG93aW5nIG9iamVjdHM6XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMudWwsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJhIG5vbi1kdXJhYmxlLCBub24tYXV0b2RlbGV0ZSBleGNoYW5nZSBvZiBcXFwiZGlyZWN0XFxcIiB0eXBlXCJcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcImEgbm9uLWR1cmFibGUsIG5vbi1hdXRvZGVsZXRlLCBub24tZXhjbHVzaXZlIHF1ZXVlXCJcbiAgICAgIH0pLCBcIlxcblwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIlRoZSBleGNoYW5nZSBjYW4gYmUgY3VzdG9taXNlZCBieSB1c2luZyBhZGRpdGlvbmFsIHBhcmFtZXRlcnMuXFxyXFxuVGhlIGFib3ZlIGNvZGUgdGhlbiBiaW5kcyB0aGUgcXVldWUgdG8gdGhlIGV4Y2hhbmdlIHdpdGggdGhlIGdpdmVuXFxyXFxucm91dGluZyBrZXkuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIk1hbnkgY2hhbm5lbCBBUEkgKFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiSUNoYW5uZWxcIlxuICAgICAgfSksIFwiKSBtZXRob2RzIGFyZSBvdmVybG9hZGVkLiBUaGUgY29udmVuaWVudFxcclxcbnNob3J0IGZvcm0gb2YgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJFeGNoYW5nZURlY2xhcmVcIlxuICAgICAgfSksIFwiIHVzZXMgc2Vuc2libGUgZGVmYXVsdHMuIFRoZXJlIGFyZVxcclxcbmFsc28gbG9uZ2VyIGZvcm1zIHdpdGggbW9yZSBwYXJhbWV0ZXJzLCB0byBsZXQgeW91IG92ZXJyaWRlIHRoZXNlXFxyXFxuZGVmYXVsdHMgYXMgbmVjZXNzYXJ5LCBnaXZpbmcgZnVsbCBjb250cm9sIHdoZXJlIG5lZWRlZC5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJUaGlzIFxcXCJzaG9ydCB2ZXJzaW9uLCBsb25nIHZlcnNpb25cXFwiIHBhdHRlcm4gaXMgdXNlZCB0aHJvdWdob3V0IHRoZSBBUEkuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwicGFzc2l2ZS1kZWNsYXJhdGlvblwiLFxuICAgICAgY2hpbGRyZW46IFwiUGFzc2l2ZSBEZWNsYXJhdGlvblwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJRdWV1ZXMgYW5kIGV4Y2hhbmdlcyBjYW4gYmUgZGVjbGFyZWQgXFxcInBhc3NpdmVseVxcXCIuIEEgcGFzc2l2ZSBkZWNsYXJlIHNpbXBseSBjaGVja3MgdGhhdCB0aGUgZW50aXR5XFxyXFxud2l0aCB0aGUgcHJvdmlkZWQgbmFtZSBleGlzdHMuIElmIGl0IGRvZXMsIHRoZSBvcGVyYXRpb24gaXMgYSBuby1vcC4gRm9yIHF1ZXVlcyBzdWNjZXNzZnVsXFxyXFxucGFzc2l2ZSBkZWNsYXJlcyB3aWxsIHJldHVybiB0aGUgc2FtZSBpbmZvcm1hdGlvbiBhcyBub24tcGFzc2l2ZSBvbmVzLCBuYW1lbHkgdGhlIG51bWJlciBvZlxcclxcbmNvbnN1bWVycyBhbmQgbWVzc2FnZXMgaW4gXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi9kb2NzL2NvbmZpcm1zXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcInJlYWR5IHN0YXRlXCJcbiAgICAgIH0pLCBcIiBpbiB0aGUgcXVldWUuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiSWYgdGhlIGVudGl0eSBkb2VzIG5vdCBleGlzdCwgdGhlIG9wZXJhdGlvbiBmYWlscyB3aXRoIGEgY2hhbm5lbCBsZXZlbCBleGNlcHRpb24uIFRoZSBjaGFubmVsXFxyXFxuY2Fubm90IGJlIHVzZWQgYWZ0ZXIgdGhhdC4gQSBuZXcgY2hhbm5lbCBzaG91bGQgYmUgb3BlbmVkLiBJdCBpcyBjb21tb24gdG8gdXNlIG9uZS1vZmYgKHRlbXBvcmFyeSlcXHJcXG5jaGFubmVscyBmb3IgcGFzc2l2ZSBkZWNsYXJhdGlvbnMuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiSUNoYW5uZWwjUXVldWVEZWNsYXJlUGFzc2l2ZUFzeW5jXCJcbiAgICAgIH0pLCBcIiBhbmQgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJJQ2hhbm5lbCNFeGNoYW5nZURlY2xhcmVQYXNzaXZlQXN5bmNcIlxuICAgICAgfSksIFwiIGFyZSB0aGVcXHJcXG5tZXRob2RzIHVzZWQgZm9yIHBhc3NpdmUgZGVjbGFyYXRpb24uIFRoZSBmb2xsb3dpbmcgZXhhbXBsZSBkZW1vbnN0cmF0ZXMgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJJQ2hhbm5lbCNRdWV1ZURlY2xhcmVQYXNzaXZlXCJcbiAgICAgIH0pLCBcIjpcIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWNzaGFycFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJ2YXIgcmVzcG9uc2UgPSBhd2FpdCBjaGFubmVsLlF1ZXVlRGVjbGFyZVBhc3NpdmVBc3luYyhcXFwicXVldWUtbmFtZVxcXCIpO1xcclxcbi8vIHJldHVybnMgdGhlIG51bWJlciBvZiBtZXNzYWdlcyBpbiBSZWFkeSBzdGF0ZSBpbiB0aGUgcXVldWVcXHJcXG5yZXNwb25zZS5NZXNzYWdlQ291bnQ7XFxyXFxuLy8gcmV0dXJucyB0aGUgbnVtYmVyIG9mIGNvbnN1bWVycyB0aGUgcXVldWUgaGFzXFxyXFxucmVzcG9uc2UuQ29uc3VtZXJDb3VudDtcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiSUNoYW5uZWwjRXhjaGFuZ2VEZWNsYXJlUGFzc2l2ZUFzeW5jXCJcbiAgICAgIH0pLCBcIidzIHJldHVybiB2YWx1ZSBjb250YWlucyBubyB1c2VmdWwgaW5mb3JtYXRpb24uIFRoZXJlZm9yZVxcclxcbmlmIHRoZSBtZXRob2QgcmV0dXJucyBhbmQgbm8gY2hhbm5lbCBleGNlcHRpb25zIG9jY3VycywgaXQgbWVhbnMgdGhhdCB0aGUgZXhjaGFuZ2UgZG9lcyBleGlzdC5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwibm93YWl0LW1ldGhvZHNcIixcbiAgICAgIGNoaWxkcmVuOiBcIk9wZXJhdGlvbnMgd2l0aCBPcHRpb25hbCBSZXNwb25zZXNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIlNvbWUgY29tbW9uIG9wZXJhdGlvbnMgYWxzbyBoYXZlIGEgXFxcIm5vIHdhaXRcXFwiIHZlcnNpb24gd2hpY2ggd29uJ3Qgd2FpdCBmb3Igc2VydmVyXFxyXFxucmVzcG9uc2UuIEZvciBleGFtcGxlLCB0byBkZWNsYXJlIGEgcXVldWUgYW5kIGluc3RydWN0IHRoZSBzZXJ2ZXIgdG8gbm90IHNlbmQgYW55XFxyXFxucmVzcG9uc2UsIHVzZVwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1jc2hhcnBcIixcbiAgICAgICAgY2hpbGRyZW46IFwiYXdhaXQgY2hhbm5lbC5RdWV1ZURlY2xhcmVBc3luYyhxdWV1ZU5hbWUsIHRydWUsIGZhbHNlLCBmYWxzZSwgbnVsbCwgbm9XYWl0OiB0cnVlKTtcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlRoZSBcXFwibm8gd2FpdFxcXCIgdmVyc2lvbnMgYXJlIG1vcmUgZWZmaWNpZW50IGJ1dCBvZmZlciBsb3dlciBzYWZldHkgZ3VhcmFudGVlcywgZS5nLiB0aGV5XFxyXFxuYXJlIG1vcmUgZGVwZW5kZW50IG9uIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiL2RvY3MvaGVhcnRiZWF0c1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJoZWFydGJlYXQgbWVjaGFuaXNtXCJcbiAgICAgIH0pLCBcIiBmb3IgZGV0ZWN0aW9uIG9mIGZhaWxlZCBvcGVyYXRpb25zLlxcclxcbldoZW4gaW4gZG91YnQsIHN0YXJ0IHdpdGggdGhlIHN0YW5kYXJkIHZlcnNpb24uIFRoZSBcXFwibm8gd2FpdFxcXCIgdmVyc2lvbnMgYXJlIG9ubHkgbmVlZGVkIGluIHNjZW5hcmlvc1xcclxcbndpdGggaGlnaCB0b3BvbG9neSAocXVldWUsIGJpbmRpbmcpIGNodXJuLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgzLCB7XG4gICAgICBpZDogXCJkZWxldGluZy1lbnRpdGllc1wiLFxuICAgICAgY2hpbGRyZW46IFwiRGVsZXRpbmcgRW50aXRpZXMgYW5kIFB1cmdpbmcgTWVzc2FnZXNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkEgcXVldWUgb3IgZXhjaGFuZ2UgY2FuIGJlIGV4cGxpY2l0bHkgZGVsZXRlZDpcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtY3NoYXJwXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImF3YWl0IGNoYW5uZWwuUXVldWVEZWxldGVBc3luYyhcXFwicXVldWUtbmFtZVxcXCIsIGZhbHNlLCBmYWxzZSk7XFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiSXQgaXMgcG9zc2libGUgdG8gZGVsZXRlIGEgcXVldWUgb25seSBpZiBpdCBpcyBlbXB0eTpcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtY3NoYXJwXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImF3YWl0IGNoYW5uZWwuUXVldWVEZWxldGVBc3luYyhcXFwicXVldWUtbmFtZVxcXCIsIGZhbHNlLCB0cnVlKTtcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJvciBpZiBpdCBpcyBub3QgdXNlZCAoZG9lcyBub3QgaGF2ZSBhbnkgY29uc3VtZXJzKTpcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtY3NoYXJwXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImF3YWl0IGNoYW5uZWwuUXVldWVEZWxldGVBc3luYyhcXFwicXVldWUtbmFtZVxcXCIsIHRydWUsIGZhbHNlKTtcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJBIHF1ZXVlIGNhbiBiZSBwdXJnZWQgKGFsbCBvZiBpdHMgbWVzc2FnZXMgZGVsZXRlZCk6XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWNzaGFycFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJhd2FpdCBjaGFubmVsLlF1ZXVlUHVyZ2VBc3luYyhcXFwicXVldWUtbmFtZVxcXCIpO1xcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJwdWJsaXNoaW5nXCIsXG4gICAgICBjaGlsZHJlbjogXCJQdWJsaXNoaW5nIE1lc3NhZ2VzXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlRvIHB1Ymxpc2ggYSBtZXNzYWdlIHRvIGFuIGV4Y2hhbmdlLCB1c2UgXCIsIF9qc3goXCJjb2RlXCIsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiSUNoYW5uZWwuQmFzaWNQdWJsaXNoQXN5bmNcIlxuICAgICAgfSksIFwiIGFzXFxyXFxuZm9sbG93czpcIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWNzaGFycFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJieXRlW10gbWVzc2FnZUJvZHlCeXRlcyA9IFN5c3RlbS5UZXh0LkVuY29kaW5nLlVURjguR2V0Qnl0ZXMoXFxcIkhlbGxvLCB3b3JsZCFcXFwiKTtcXHJcXG52YXIgcHJvcHMgPSBuZXcgQmFzaWNQcm9wZXJ0aWVzKCk7XFxyXFxuYXdhaXQgY2hhbm5lbC5CYXNpY1B1Ymxpc2hBc3luYyhleGNoYW5nZU5hbWUsIHJvdXRpbmdLZXksIGZhbHNlLCBwcm9wcywgbWVzc2FnZUJvZHlCeXRlcyk7XFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiRm9yIGZpbmUgY29udHJvbCwgeW91IGNhbiB1c2Ugb3ZlcmxvYWRlZCB2YXJpYW50cyB0byBzcGVjaWZ5IHRoZVxcclxcbm1hbmRhdG9yeSBmbGFnLCBvciBzcGVjaWZ5IG1lc3NhZ2VzIHByb3BlcnRpZXM6XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWNzaGFycFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJieXRlW10gbWVzc2FnZUJvZHlCeXRlcyA9IFN5c3RlbS5UZXh0LkVuY29kaW5nLlVURjguR2V0Qnl0ZXMoXFxcIkhlbGxvLCB3b3JsZCFcXFwiKTtcXHJcXG52YXIgcHJvcHMgPSBuZXcgQmFzaWNQcm9wZXJ0aWVzKCk7XFxyXFxucHJvcHMuQ29udGVudFR5cGUgPSBcXFwidGV4dC9wbGFpblxcXCI7XFxyXFxucHJvcHMuRGVsaXZlcnlNb2RlID0gMjtcXHJcXG5hd2FpdCBjaGFubmVsLkJhc2ljUHVibGlzaEFzeW5jKGV4Y2hhbmdlTmFtZSwgcm91dGluZ0tleSxcXHJcXG4gICAgbWFuZGF0b3J5OiB0cnVlLCBiYXNpY1Byb3BlcnRpZXM6IHByb3BzLCBib2R5OiBtZXNzYWdlQm9keUJ5dGVzKTtcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlRoaXMgc2VuZHMgYSBtYW5kYXRvcnlcIiwgXCI6dHJ1ZVwiLCBcIiBtZXNzYWdlIHdpdGggZGVsaXZlcnkgbW9kZSAyIChwZXJzaXN0ZW50KSBhbmRcXHJcXG5jb250ZW50LXR5cGUgXFxcInRleHQvcGxhaW5cXFwiLiBTZWUgdGhlIGRlZmluaXRpb24gb2YgdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiSUJhc2ljUHJvcGVydGllc1wiXG4gICAgICB9KSwgXCJcXHJcXG5pbnRlcmZhY2UgZm9yIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGF2YWlsYWJsZSBtZXNzYWdlIHByb3BlcnRpZXMuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiSW4gdGhlIGZvbGxvd2luZyBleGFtcGxlLCB3ZSBwdWJsaXNoIGEgbWVzc2FnZSB3aXRoIGN1c3RvbSBoZWFkZXJzOlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1jc2hhcnBcIixcbiAgICAgICAgY2hpbGRyZW46IFwiYnl0ZVtdIG1lc3NhZ2VCb2R5Qnl0ZXMgPSBTeXN0ZW0uVGV4dC5FbmNvZGluZy5VVEY4LkdldEJ5dGVzKFxcXCJIZWxsbywgd29ybGQhXFxcIik7XFxyXFxuXFxyXFxudmFyIHByb3BzID0gbmV3IEJhc2ljUHJvcGVydGllcygpO1xcclxcbnByb3BzLkNvbnRlbnRUeXBlID0gXFxcInRleHQvcGxhaW5cXFwiO1xcclxcbnByb3BzLkRlbGl2ZXJ5TW9kZSA9IDI7XFxyXFxucHJvcHMuSGVhZGVycyA9IG5ldyBEaWN0aW9uYXJ5PHN0cmluZywgb2JqZWN0PigpO1xcclxcbnByb3BzLkhlYWRlcnMuQWRkKFxcXCJsYXRpdHVkZVxcXCIsICA1MS41MjUyOTQ5KTtcXHJcXG5wcm9wcy5IZWFkZXJzLkFkZChcXFwibG9uZ2l0dWRlXFxcIiwgLTAuMDkwNTQ5Myk7XFxyXFxuXFxyXFxuYXdhaXQgY2hhbm5lbC5CYXNpY1B1Ymxpc2hBc3luYyhleGNoYW5nZU5hbWUsIHJvdXRpbmdLZXksIHRydWUsIHByb3BzLCBtZXNzYWdlQm9keUJ5dGVzKTtcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJDb2RlIHNhbXBsZSBiZWxvdyBzZXRzIGEgbWVzc2FnZSBleHBpcmF0aW9uOlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1jc2hhcnBcIixcbiAgICAgICAgY2hpbGRyZW46IFwiYnl0ZVtdIG1lc3NhZ2VCb2R5Qnl0ZXMgPSBTeXN0ZW0uVGV4dC5FbmNvZGluZy5VVEY4LkdldEJ5dGVzKFxcXCJIZWxsbywgd29ybGQhXFxcIik7XFxyXFxuXFxyXFxudmFyIHByb3BzID0gbmV3IEJhc2ljUHJvcGVydGllcygpO1xcclxcbnByb3BzLkNvbnRlbnRUeXBlID0gXFxcInRleHQvcGxhaW5cXFwiO1xcclxcbnByb3BzLkRlbGl2ZXJ5TW9kZSA9IDI7XFxyXFxucHJvcHMuRXhwaXJhdGlvbiA9IFxcXCIzNjAwMDAwMFxcXCI7XFxyXFxuXFxyXFxuYXdhaXQgY2hhbm5lbC5CYXNpY1B1Ymxpc2hBc3luYyhleGNoYW5nZU5hbWUsIHJvdXRpbmdLZXksIHRydWUsIHByb3BzLCBtZXNzYWdlQm9keUJ5dGVzKTtcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwiY29uc3VtaW5nXCIsXG4gICAgICBjaGlsZHJlbjogXCJSZXRyaWV2aW5nIE1lc3NhZ2VzIEJ5IFN1YnNjcmlwdGlvbiAoXFxcInB1c2ggQVBJXFxcIilcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVGhlIHJlY29tbWVuZGVkIGFuZCBtb3N0IGNvbnZlbmllbnQgd2F5IHRvIHJlY2VpdmUgbWVzc2FnZXMgaXMgdG8gc2V0IHVwIGFcXHJcXG5zdWJzY3JpcHRpb24gdXNpbmcgdGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiSUFzeW5jQmFzaWNDb25zdW1lclwiXG4gICAgICB9KSwgXCIgaW50ZXJmYWNlLiBUaGUgbWVzc2FnZXMgd2lsbCB0aGVuXFxyXFxuYmUgZGVsaXZlcmVkIGF1dG9tYXRpY2FsbHkgYXMgdGhleSBhcnJpdmUsIHJhdGhlciB0aGFuIGhhdmluZyB0byBiZSByZXF1ZXN0ZWRcXHJcXG5wcm9hY3RpdmVseS5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIk9uZSB3YXkgdG8gaW1wbGVtZW50IGEgY29uc3VtZXIgaXMgdG8gdXNlIHRoZSBjb252ZW5pZW5jZSBjbGFzc1xcclxcblwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiQXN5bmNFdmVudGluZ0Jhc2ljQ29uc3VtZXJcIlxuICAgICAgfSksIFwiLCB3aGljaCBkaXNwYXRjaGVzIGRlbGl2ZXJpZXMgYW5kIG90aGVyIGNvbnN1bWVyXFxyXFxubGlmZWN5Y2xlIGV2ZW50cyBhcyBDIyBldmVudHM6XCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1jc2hhcnBcIixcbiAgICAgICAgY2hpbGRyZW46IFwidmFyIGNvbnN1bWVyID0gbmV3IEV2ZW50aW5nQmFzaWNDb25zdW1lcihjaGFubmVsKTtcXHJcXG5jb25zdW1lci5SZWNlaXZlZCArPSBhc3luYyAoY2gsIGVhKSA9PlxcclxcbiAgICAgICAgICAgICAgICB7XFxyXFxuICAgICAgICAgICAgICAgICAgICB2YXIgYm9keSA9IGVhLkJvZHkuVG9BcnJheSgpO1xcclxcbiAgICAgICAgICAgICAgICAgICAgLy8gY29weSBvciBkZXNlcmlhbGlzZSB0aGUgcGF5bG9hZFxcclxcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5kIHByb2Nlc3MgdGhlIG1lc3NhZ2VcXHJcXG4gICAgICAgICAgICAgICAgICAgIC8vIC4uLlxcclxcbiAgICAgICAgICAgICAgICAgICAgYXdhaXQgY2hhbm5lbC5CYXNpY0Fja0FzeW5jKGVhLkRlbGl2ZXJ5VGFnLCBmYWxzZSk7XFxyXFxuICAgICAgICAgICAgICAgIH07XFxyXFxuLy8gdGhpcyBjb25zdW1lciB0YWcgaWRlbnRpZmllcyB0aGUgc3Vic2NyaXB0aW9uXFxyXFxuLy8gd2hlbiBpdCBoYXMgdG8gYmUgY2FuY2VsbGVkXFxyXFxuc3RyaW5nIGNvbnN1bWVyVGFnID0gYXdhaXQgY2hhbm5lbC5CYXNpY0NvbnN1bWVBc3luYyhxdWV1ZU5hbWUsIGZhbHNlLCBjb25zdW1lcik7XFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJBbm90aGVyIG9wdGlvbiBpcyB0byBzdWJjbGFzcyBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIkFzeW5jRGVmYXVsdEJhc2ljQ29uc3VtZXJcIlxuICAgICAgfSksIFwiLCBvdmVycmlkaW5nIG1ldGhvZHNcXHJcXG5hcyBuZWNlc3NhcnksIG9yIGltcGxlbWVudCBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIklBc3luY0Jhc2ljQ29uc3VtZXJcIlxuICAgICAgfSksIFwiIGRpcmVjdGx5LiBZb3Ugd2lsbCBnZW5lcmFsbHlcXHJcXG53YW50IHRvIGltcGxlbWVudCB0aGUgY29yZSBtZXRob2RcXHJcXG5cIiwgX2pzeChcImNvZGVcIiwge1xuICAgICAgICBjaGlsZHJlbjogXCJJQXN5bmNCYXNpY0NvbnN1bWVyLkhhbmRsZUJhc2ljRGVsaXZlckFzeW5jXCJcbiAgICAgIH0pLCBcIi5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIk1vcmUgc29waGlzdGljYXRlZCBjb25zdW1lcnMgd2lsbCBuZWVkIHRvIGltcGxlbWVudCBmdXJ0aGVyIG1ldGhvZHMuIEluXFxyXFxucGFydGljdWxhciwgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJIYW5kbGVDaGFubmVsU2h1dGRvd25cIlxuICAgICAgfSksIFwiIHRyYXBzIGNoYW5uZWwvY29ubmVjdGlvbiBjbG9zdXJlLiBDb25zdW1lcnNcXHJcXG5jYW4gYWxzbyBpbXBsZW1lbnQgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCIgSGFuZGxlQmFzaWNDYW5jZWxPa1wiXG4gICAgICB9KSwgXCIgdG8gYmUgbm90aWZpZWQgb2YgY2FuY2VsbGF0aW9ucy5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIkNvbnN1bWVyVGFnXCJcbiAgICAgIH0pLCBcIiBwcm9wZXJ0eSBvZiBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIkFzeW5jRGVmYXVsdEJhc2ljQ29uc3VtZXJcIlxuICAgICAgfSksIFwiIGNhbiBiZSB1c2VkIHRvXFxyXFxucmV0cmlldmUgdGhlIHNlcnZlci1nZW5lcmF0ZWQgY29uc3VtZXIgdGFnLCBpbiBjYXNlcyB3aGVyZSBub25lIHdhcyBzdXBwbGllZCB0b1xcclxcbnRoZSBvcmlnaW5hbCBcIiwgX2pzeChcImNvZGVcIiwge1xuICAgICAgICBjaGlsZHJlbjogXCJJQ2hhbm5lbC5CYXNpY0NvbnN1bWVBc3luY1wiXG4gICAgICB9KSwgXCIgY2FsbC5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIllvdSBjYW4gY2FuY2VsIGFuIGFjdGl2ZSBjb25zdW1lciB3aXRoIFwiLCBfanN4KFwiY29kZVwiLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIklDaGFubmVsLkJhc2ljQ2FuY2VsQXN5bmNcIlxuICAgICAgfSksIFwiOlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtY3NoYXJwXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImF3YWl0IGNoYW5uZWwuQmFzaWNDYW5jZWxBc3luYyhjb25zdW1lclRhZyk7XFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJXaGVuIGNhbGxpbmcgdGhlIEFQSSBtZXRob2RzLCB5b3UgYWx3YXlzIHJlZmVyIHRvIGNvbnN1bWVycyBieSB0aGVpclxcclxcbmNvbnN1bWVyIHRhZ3MsIHdoaWNoIGNhbiBiZSBlaXRoZXIgY2xpZW50LSBvciBzZXJ2ZXItZ2VuZXJhdGVkIGFzXFxyXFxuZXhwbGFpbmVkIGluIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiL2RvY3Mvc3BlY2lmaWNhdGlvblwiLFxuICAgICAgICBjaGlsZHJlbjogXCJBTVFQIDAtOS0xIHNwZWNpZmljYXRpb25cIlxuICAgICAgfSksIFwiIGRvY3VtZW50LlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJjb25zdW1pbmctbWVtb3J5LXNhZmV0eVwiLFxuICAgICAgY2hpbGRyZW46IFwiQ29uc3VtZXIgTWVtb3J5IFNhZmV0eSBSZXF1aXJlbWVudHNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiQXMgb2YgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9yYWJiaXRtcS9yYWJiaXRtcS1kb3RuZXQtY2xpZW50L2Jsb2IvbWFpbi9DSEFOR0VMT0cubWRcIixcbiAgICAgICAgY2hpbGRyZW46IFwidmVyc2lvbiA3LjBcIlxuICAgICAgfSksIFwiXFxyXFxub2YgdGhlIC5ORVQgY2xpZW50LCBtZXNzYWdlIHBheWxvYWRzIGFyZSByZXByZXNlbnRlZCB1c2luZyB0aGVcXHJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiaHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL2VuLXVzL2RvdG5ldC9hcGkvc3lzdGVtLnJlYWRvbmx5bWVtb3J5LTE/dmlldz1uZXRzdGFuZGFyZC0yLjBcIixcbiAgICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIlN5c3RlbS5SZWFkT25seU1lbW9yeTxieXRlPlwiXG4gICAgICAgIH0pXG4gICAgICB9KSwgXCJcXHJcXG50eXBlIGZyb20gdGhlIFwiLCBfanN4cyhfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiaHR0cHM6Ly93d3cubnVnZXQub3JnL3BhY2thZ2VzL1N5c3RlbS5NZW1vcnkvXCIsXG4gICAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiU3lzdGVtLk1lbW9yeVwiXG4gICAgICAgIH0pLCBcIiBsaWJyYXJ5XCJdXG4gICAgICB9KSwgXCIuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJUaGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJSYWJiaXRNUS5DbGllbnRcIlxuICAgICAgfSksIFwiIGxpYnJhcnkgcGxhY2VzIGNlcnRhaW4gcmVzdHJpY3Rpb25zIG9uIHdoZW4gYSByZWFkIG9ubHlcXHJcXG5tZW1vcnkgc3BhbiBjYW4gYmUgYWNjZXNzZWQgYnkgYXBwbGljYXRpb25zLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuc3Ryb25nLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIkltcG9ydGFudFwiXG4gICAgICB9KSwgXCI6IGNvbnN1bWVyIGludGVyZmFjZSBpbXBsZW1lbnRhdGlvbnMgXCIsIF9qc3goX2NvbXBvbmVudHMuc3Ryb25nLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIm11c3QgZGVzZXJpYWxpemUgb3IgY29weVxcclxcbmRlbGl2ZXJ5IHBheWxvYWQgYmVmb3JlIGRlbGl2ZXJ5IGhhbmRsZXIgbWV0aG9kIHJldHVybnNcIlxuICAgICAgfSksIFwiLiBSZXRhaW5pbmcgYVxcclxcbnJlZmVyZW5jZSB0byB0aGUgcGF5bG9hZCBpcyBub3Qgc2FmZTogdGhlIG1lbW9yeSBhbGxvY2F0ZWQgZm9yIGl0IGNhbiBiZVxcclxcbmRlYWxsb2NhdGVkIGF0IGFueSBtb21lbnQgYWZ0ZXIgdGhlIGhhbmRsZXIgcmV0dXJucy5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwiYmFzaWMtZ2V0XCIsXG4gICAgICBjaGlsZHJlbjogXCJGZXRjaGluZyBJbmRpdmlkdWFsIE1lc3NhZ2VzIChQb2xsaW5nIG9yIFxcXCJwdWxsIEFQSVxcXCIpXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkl0IGlzIGFsc28gcG9zc2libGUgdG8gcmV0cmlldmUgaW5kaXZpZHVhbCBtZXNzYWdlcyBvbiBkZW1hbmQgKFxcXCJwdWxsIEFQSVxcXCIgYS5rLmEuIHBvbGxpbmcpLlxcclxcblRoaXMgYXBwcm9hY2ggdG8gY29uc3VtcHRpb24gaXMgXCIsIF9qc3goX2NvbXBvbmVudHMuc3Ryb25nLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcInZlcnkgaW5lZmZpY2llbnRcIlxuICAgICAgfSksIFwiIGFzIGl0IGlzIGVmZmVjdGl2ZWx5IHBvbGxpbmdcXHJcXG5hbmQgYXBwbGljYXRpb25zIHJlcGVhdGVkbHkgaGF2ZSB0byBhc2sgZm9yIHJlc3VsdHMgZXZlbiBpZiB0aGUgdmFzdCBtYWpvcml0eSBvZiB0aGUgcmVxdWVzdHNcXHJcXG55aWVsZCBubyByZXN1bHRzLiBUaGVyZWZvcmUgdXNpbmcgdGhpcyBhcHByb2FjaCBcIiwgX2pzeChfY29tcG9uZW50cy5zdHJvbmcsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiaXMgaGlnaGx5IGRpc2NvdXJhZ2VkXCJcbiAgICAgIH0pLCBcIi5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlRvIFxcXCJwdWxsXFxcIiBhIG1lc3NhZ2UsIHVzZSB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJJQ2hhbm5lbC5CYXNpY0dldEFzeW5jXCJcbiAgICAgIH0pLCBcIiBtZXRob2QuXFxyXFxuVGhlIHJldHVybmVkIHZhbHVlIGlzIGFuIGluc3RhbmNlIG9mIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiQmFzaWNHZXRSZXN1bHRcIlxuICAgICAgfSksIFwiLCBmcm9tIHdoaWNoIHRoZSBoZWFkZXJcXHJcXG5pbmZvcm1hdGlvbiAocHJvcGVydGllcykgYW5kIG1lc3NhZ2UgYm9keSBjYW4gYmUgZXh0cmFjdGVkOlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtY3NoYXJwXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImJvb2wgYXV0b0FjayA9IGZhbHNlO1xcclxcbkJhc2ljR2V0UmVzdWx0IHJlc3VsdCA9IGF3YWl0IGNoYW5uZWwuQmFzaWNHZXRBc3luYyhxdWV1ZU5hbWUsIGF1dG9BY2spO1xcclxcbmlmIChyZXN1bHQgPT0gbnVsbCkge1xcclxcbiAgICAvLyBObyBtZXNzYWdlIGF2YWlsYWJsZSBhdCB0aGlzIHRpbWUuXFxyXFxufSBlbHNlIHtcXHJcXG4gICAgdmFyIHByb3BzID0gcmVzdWx0LkJhc2ljUHJvcGVydGllcztcXHJcXG4gICAgUmVhZE9ubHlNZW1vcnk8Ynl0ZT4gYm9keSA9IHJlc3VsdC5Cb2R5O1xcclxcbiAgICAuLi5cXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlRoZSBhYm92ZSBleGFtcGxlIHVzZXMgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi9kb2NzL2NvbmZpcm1zXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIm1hbnVhbCBhY2tub3dsZWRnZW1lbnRzXCJcbiAgICAgIH0pLCBcIiAoXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJhdXRvQWNrID0gZmFsc2VcIlxuICAgICAgfSksIFwiKSwgc28gdGhlIGFwcGxpY2F0aW9uIG11c3QgYWxzbyBjYWxsXFxyXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJJQ2hhbm5lbC5CYXNpY0Fja0FzeW5jXCJcbiAgICAgIH0pLCBcIiB0byBhY2tub3dsZWRnZSB0aGUgZGVsaXZlcnkgYWZ0ZXIgcHJvY2Vzc2luZzpcIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWNzaGFycFwiLFxuICAgICAgICBjaGlsZHJlbjogXCIgICAgLi4uXFxyXFxuICAgIC8vIGFja25vd2xlZGdlIHJlY2VpcHQgb2YgdGhlIG1lc3NhZ2VcXHJcXG4gICAgYXdhaXQgY2hhbm5lbC5CYXNpY0Fja0FzeW5jKHJlc3VsdC5EZWxpdmVyeVRhZywgZmFsc2UpO1xcclxcbn1cXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJOb3RlIHRoYXQgZmV0Y2hpbmcgbWVzc2FnZXMgdXNpbmcgdGhpcyBBUEkgaXMgcmVsYXRpdmVseSBpbmVmZmljaWVudC4gSWYgeW91J2QgcHJlZmVyXFxyXFxuUmFiYml0TVEgdG8gcHVzaCBtZXNzYWdlcyB0byB0aGUgY2xpZW50LCBzZWUgdGhlIG5leHQgc2VjdGlvbi5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgyLCB7XG4gICAgICBpZDogXCJjb25jdXJyZW5jeVwiLFxuICAgICAgY2hpbGRyZW46IFwiQ29uY3VycmVuY3kgQ29uc2lkZXJhdGlvbnMgZm9yIENvbnN1bWVyc1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiVGhlcmUgaXMgYSBudW1iZXIgb2YgY29uY3VycmVuY3ktcmVsYXRlZCB0b3BpY3MgZm9yIGEgbGlicmFyeSB1c2VyIHRvIGNvbnNpZGVyLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDMsIHtcbiAgICAgIGlkOiBcImNvbmN1cnJlbmN5LWNoYW5uZWwtc2hhcmluZ1wiLFxuICAgICAgY2hpbGRyZW46IFwiU2hhcmluZyBDaGFubmVscyBCZXR3ZWVuIFRocmVhZHNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJJQ2hhbm5lbFwiXG4gICAgICB9KSwgXCIgaW5zdGFuY2UgdXNhZ2UgYnkgbW9yZSB0aGFuIG9uZSB0aHJlYWQgc2ltdWx0YW5lb3VzbHkgc2hvdWxkIGJlXFxyXFxuYXZvaWRlZC4gQXBwbGljYXRpb24gY29kZSBzaG91bGQgbWFpbnRhaW4gYSBjbGVhciBub3Rpb24gb2YgdGhyZWFkIG93bmVyc2hpcFxcclxcbmZvciBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIklDaGFubmVsXCJcbiAgICAgIH0pLCBcIiBpbnN0YW5jZXMuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJUaGlzIGlzIGEgXCIsIF9qc3goX2NvbXBvbmVudHMuc3Ryb25nLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcImhhcmQgcmVxdWlyZW1lbnQgZm9yIHB1Ymxpc2hlcnNcIlxuICAgICAgfSksIFwiOiBzaGFyaW5nIGEgY2hhbm5lbCAoYW4gXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJJQ2hhbm5lbFwiXG4gICAgICB9KSwgXCJcXHJcXG5pbnN0YW5jZSkgZm9yIGNvbmN1cnJlbnQgcHVibGlzaGluZyB3aWxsIGxlYWQgdG8gaW5jb3JyZWN0IGZyYW1lIGludGVybGVhdmluZ1xcclxcbmF0IHRoZSBwcm90b2NvbCBsZXZlbC4gQ2hhbm5lbCBpbnN0YW5jZXMgXCIsIF9qc3goX2NvbXBvbmVudHMuc3Ryb25nLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIm11c3Qgbm90IGJlIHNoYXJlZFwiXG4gICAgICB9KSwgXCIgYnkgdGhyZWFkcyB0aGF0XFxyXFxucHVibGlzaCBvbiB0aGVtLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiSWYgbW9yZSB0aGFuIG9uZSB0aHJlYWQgbmVlZHMgdG8gYWNjZXNzIGEgcGFydGljdWxhciBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIklDaGFubmVsXCJcbiAgICAgIH0pLCBcIiBpbnN0YW5jZXMsIHRoZVxcclxcbmFwcGxpY2F0aW9uIHNob3VsZCBlbmZvcmNlIG11dHVhbCBleGNsdXNpb24uIE9uZSB3YXkgb2YgYWNoaWV2aW5nIHRoaXMgaXMgZm9yXFxyXFxuYWxsIHVzZXJzIG9mIGFuIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiSUNoYW5uZWxcIlxuICAgICAgfSksIFwiIHRvIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwibG9ja1wiXG4gICAgICB9KSwgXCIgdGhlIGluc3RhbmNlIGl0c2VsZjpcIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWNzaGFycFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJJQ2hhbm5lbCBjaCA9IFJldHJpZXZlU29tZVNoYXJlZElDaGFubmVsSW5zdGFuY2UoKTtcXHJcXG5hd2FpdCBfY2hhbm5lbFNlbWFwaG9yZS5XYWl0QXN5bmMoKTtcXHJcXG50cnlcXHJcXG57XFxyXFxuICBjaC5CYXNpY1B1Ymxpc2hBc3luYyguLi4pO1xcclxcbn1cXHJcXG5maW5hbGx5XFxyXFxue1xcclxcbiAgX2NoYW5uZWxTZW1hcGhvcmUuUmVsZWFzZSgpO1xcclxcbn1cXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlN5bXB0b21zIG9mIGluY29ycmVjdCBzZXJpYWxpc2F0aW9uIG9mIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiSUNoYW5uZWxcIlxuICAgICAgfSksIFwiIG9wZXJhdGlvbnMgaW5jbHVkZSwgYnV0IGFyZVxcclxcbm5vdCBsaW1pdGVkIHRvOlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy51bCwge1xuICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW19qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICAgIGhyZWY6IFwiL2RvY3MvY29ubmVjdGlvbnMjZXJyb3ItaGFuZGxpbmdcIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJjb25uZWN0aW9uLWxldmVsIGV4Y2VwdGlvbnNcIlxuICAgICAgICB9KSwgXCIgZHVlIHRvIGludmFsaWQgZnJhbWVcXHJcXG5pbnRlcmxlYXZpbmcgb24gdGhlIHdpcmUuIFJhYmJpdE1RIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIi9kb2NzL2xvZ2dpbmdcIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJzZXJ2ZXIgbG9nc1wiXG4gICAgICAgIH0pLCBcIiB3aWxsXFxyXFxuY29udGFpbiB1bmV4cGVjdGVkIGZyYW1lIGVycm9ycyBpbiBzdWNoIHNjZW5hcmlvLlwiXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFwiUGlwZWxpbmluZyBhbmQgY29udGludWF0aW9uIGV4Y2VwdGlvbnMgdGhyb3duIGJ5IHRoZSBjbGllbnRcIlxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiQ29uc3VtcHRpb24gdGhhdCBpbnZvbHZlIHNoYXJpbmcgYSBjaGFubmVsIGJldHdlZW4gdGhyZWFkcyBzaG91bGQgYmUgYXZvaWRlZFxcclxcbndoZW4gcG9zc2libGUgYnV0IGNhbiBiZSBkb25lIHNhZmVseS5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiQ29uc3VtZXJzIHRoYXQgY2FuIGJlIG11bHRpLXRocmVhZGVkIG9yIHVzZSBhIHRocmVhZCBwb29sIGludGVybmFsbHksIGluY2x1ZGluZyBUUEwtYmFzZWRcXHJcXG5jb25zdW1lcnMsIG11c3QgdXNlIG11dHVhbCBleGNsdXNpb24gb2YgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi9kb2NzL2NvbmZpcm1zXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImFja25vd2xlZGdlbWVudHNcIlxuICAgICAgfSksIFwiIG9wZXJhdGlvbnNcXHJcXG5vbiBhIHNoYXJlZCBjaGFubmVsLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgzLCB7XG4gICAgICBpZDogXCJjb25jdXJyZW5jeS10aHJlYWQtdXNhZ2VcIixcbiAgICAgIGNoaWxkcmVuOiBcIlBlci1Db25uZWN0aW9uIFRhc2sgVXNlXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkVhY2ggXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJJQ29ubmVjdGlvblwiXG4gICAgICB9KSwgXCIgaW5zdGFuY2UgaXMsIGluIHRoZSBjdXJyZW50IGltcGxlbWVudGF0aW9uLCBiYWNrZWQgYnkgYVxcclxcbnNpbmdsZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIlRhc2tcIlxuICAgICAgfSksIFwiIHRoYXQgcmVhZHMgZnJvbSB0aGUgc29ja2V0IGFuZCBkaXNwYXRjaGVzIHRoZSByZXN1bHRpbmcgZXZlbnRzIHRvXFxyXFxudGhlIGFwcGxpY2F0aW9uLiBJZiBoZWFydGJlYXRzIGFyZSBlbmFibGVkLCB0aGV5IHdpbGwgdXNlIGEgcGFpciBvZiAuTkVUIHRpbWVyc1xcclxcbnBlciBjb25uZWN0aW9uLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVXN1YWxseSwgdGhlcmVmb3JlLCB0aGVyZSB3aWxsIGJlIGF0IGxlYXN0IHR3byBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIlRhc2tcIlxuICAgICAgfSksIFwiIGluc3RhbmNlcyBhY3RpdmUgaW4gYW5cXHJcXG5hcHBsaWNhdGlvbiB1c2luZyB0aGlzIGxpYnJhcnk6XCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKFwiZGxcIiwge1xuICAgICAgY2hpbGRyZW46IFtfanN4cyhcImR0XCIsIHtcbiAgICAgICAgY2hpbGRyZW46IFtcInRoZSBhcHBsaWNhdGlvbiB0aHJlYWQgKFxcXCJtYWluXFxcIiBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiVGFza1wiXG4gICAgICAgIH0pLCBcIilcIl1cbiAgICAgIH0pLCBfanN4KFwiZGRcIiwge1xuICAgICAgICBjaGlsZHJlbjogX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgICAgIGNoaWxkcmVuOiBbXCJjb250YWlucyB0aGUgYXBwbGljYXRpb24gbG9naWMsIGFuZCBtYWtlc1xcclxcbmNhbGxzIG9uIFwiLCBfanN4KFwiY29kZVwiLCB7XG4gICAgICAgICAgICBjaGlsZHJlbjogXCJJQ2hhbm5lbFwiXG4gICAgICAgICAgfSksIFwiIG1ldGhvZHMgdG8gcGVyZm9ybSBwcm90b2NvbCBvcGVyYXRpb25zLlwiXVxuICAgICAgICB9KVxuICAgICAgfSksIF9qc3hzKFwiZHRcIiwge1xuICAgICAgICBjaGlsZHJlbjogW1widGhlIEkvTyBhY3Rpdml0eSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiVGFza1wiXG4gICAgICAgIH0pLCBcIiBpbnN0YW5jZXNcIl1cbiAgICAgIH0pLCBfanN4KFwiZGRcIiwge1xuICAgICAgICBjaGlsZHJlbjogX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgICAgIGNoaWxkcmVuOiBbXCJoaWRkZW4gYXdheSBhbmQgY29tcGxldGVseSBtYW5hZ2VkIGJ5IHRoZVxcclxcblwiLCBfanN4KFwiY29kZVwiLCB7XG4gICAgICAgICAgICBjaGlsZHJlbjogXCJJQ29ubmVjdGlvblwiXG4gICAgICAgICAgfSksIFwiIGluc3RhbmNlLlwiXVxuICAgICAgICB9KVxuICAgICAgfSldXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiVGhlIG9uZSBwbGFjZSB3aGVyZSB0aGUgbmF0dXJlIG9mIHRoZSB0aHJlYWRpbmcgbW9kZWwgaXMgdmlzaWJsZSB0b1xcclxcbnRoZSBhcHBsaWNhdGlvbiBpcyBpbiBhbnkgY2FsbGJhY2sgdGhlIGFwcGxpY2F0aW9uIHJlZ2lzdGVycyB3aXRoIHRoZVxcclxcbmxpYnJhcnkuIFN1Y2ggY2FsbGJhY2tzIGluY2x1ZGU6XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMudWwsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFtcImFueSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiSUFzeW5jQmFzaWNDb25zdW1lclwiXG4gICAgICAgIH0pLCBcIiBtZXRob2RcIl1cbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW1widGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJCYXNpY1JldHVyblwiXG4gICAgICAgIH0pLCBcIiBldmVudCBvbiBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiSUNoYW5uZWxcIlxuICAgICAgICB9KV1cbiAgICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogW1wiYW55IG9mIHRoZSB2YXJpb3VzIHNodXRkb3duIGV2ZW50cyBvbiBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiSUNvbm5lY3Rpb25cIlxuICAgICAgICB9KSwgXCIsIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJJQ2hhbm5lbFwiXG4gICAgICAgIH0pLCBcIiBldGMuXCJdXG4gICAgICB9KSwgXCJcXG5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwiY29uc3VtZXItY2FsbGJhY2tzLWFuZC1vcmRlcmluZ1wiLFxuICAgICAgY2hpbGRyZW46IFwiQ29uc3VtZXIgQ2FsbGJhY2tzLCBDb25jdXJyZW5jeSBhbmQgT3BlcmF0aW9uIE9yZGVyaW5nXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oNCwge1xuICAgICAgaWQ6IFwiaXMtY29uc3VtZXItb3BlcmF0aW9uLWRpc3BhdGNoLWNvbmN1cnJlbnRcIixcbiAgICAgIGNoaWxkcmVuOiBcIklzIENvbnN1bWVyIE9wZXJhdGlvbiBEaXNwYXRjaCBDb25jdXJyZW50P1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIklBc3luY0Jhc2ljQ29uc3VtZXJcIlxuICAgICAgfSksIFwiIGNhbGxiYWNrcyBhcmUgaW52b2tlZCBzZXF1YW50aWFsbHkgKHdpdGggYSBjb25jdXJyZW5jeVxcclxcbmRlZ3JlZSBvZiBvbmUpIGJ5IGRlZmF1bHQuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJGb3IgY29uY3VycmVudCBkaXNwYXRjaCBvZiBpbmJvdW5kIGNvbnN1bWVyIGRlbGl2ZXJpZXMsIHNldCBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiaHR0cHM6Ly9yYWJiaXRtcS5naXRodWIuaW8vcmFiYml0bXEtZG90bmV0LWNsaWVudC9hcGkvUmFiYml0TVEuQ2xpZW50LkNvbm5lY3Rpb25GYWN0b3J5Lmh0bWwjUmFiYml0TVFfQ2xpZW50X0Nvbm5lY3Rpb25GYWN0b3J5X0NvbnN1bWVyRGlzcGF0Y2hDb25jdXJyZW5jeVwiLFxuICAgICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFwiQ29ubmVjdGlvbkZhY3RvcnkuQ29uc3VtZXJEaXNwYXRjaENvbmN1cnJlbmN5XCJcbiAgICAgICAgfSlcbiAgICAgIH0pLCBcIlxcclxcbnRvIGEgdmFsdWUgZ3JlYXRlciB0aGFuIG9uZS5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oNCwge1xuICAgICAgaWQ6IFwibWVzc2FnZS1vcmRlcmluZy1ndWFyYW50ZWVcIixcbiAgICAgIGNoaWxkcmVuOiBcIk1lc3NhZ2UgT3JkZXJpbmcgR3VhcmFudGVlXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJDb25zdW1lciBldmVudHMgb24gdGhlIHNhbWUgY2hhbm5lbCBhcmUgZ3VhcmFudGVlZCB0byBiZSBkaXNwYXRjaGVkIGluIHRoZSBzYW1lXFxyXFxub3JkZXIgdGhleSB3ZXJlIHJlY2VpdmVkIGluLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJGb3IgZXhhbXBsZSwgaWYgbWVzc2FnZXMgQSBhbmQgQiB3ZXJlIGRlbGl2ZXJlZCBpbiB0aGlzIG9yZGVyIG9uIHRoZSBzYW1lXFxyXFxuY2hhbm5lbCwgdGhleSB3aWxsIGJlIGRpc3BhdGNoZWQgdG8gYSBjb25zdW1lciAoYSBzcGVjaWZpYyBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIklBc3luY0Jhc2ljQ29uc3VtZXJcIlxuICAgICAgfSksIFwiXFxyXFxuaW5zdGFuY2UpIGluIHRoaXMgb3JkZXIuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiSWYgbWVzc2FnZXMgQSBhbmQgQiB3ZXJlIGRlbGl2ZXJlZCBvbiBkaWZmZXJlbnQgY2hhbm5lbHMsIHRoZXkgY2FuIGJlXFxyXFxuZGlzcGF0Y2hlZCB0byBjb25zdW1lcnMgaW4gYW55IG9yZGVyIChvciBpbiBwYXJhbGxlbCkuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJXaXRoIHRoZSBjb25jdXJyZW5jeSBkZWdyZWUgb2Ygb25lLCBkZWxpdmVyaWVzIG9uIHRoZSBzYW1lIGNoYW5uZWwgd2lsbCBiZVxcclxcbmhhbmRsZWQgc2VxdWVudGlhbGx5LiBXaXRoIGEgaGlnaGVyIGNvbmN1cnJlbmN5IGRlZ3JlZSwgdGhlaXIgZGlzcGF0Y2ggd2lsbFxcclxcbmhhcHBlbiBpbiB0aGUgc2FtZSBvcmRlciBidXQgYWN0dWFsIHByb2Nlc3NpbmcgY2FuIGhhcHBlbiBpbiBwYXJhbGxlbFxcclxcbihkZXBlbmRpbmcgb24gdGhlIG51bWJlciBvZiBhdmFpbGFibGUgY29yZXMgYW5kIGFwcGxpY2F0aW9uIHJ1bnRpbWUpLCB3aGljaCBjYW5cXHJcXG5yZXN1bHQgaW4gY29uY3VycmVuY3kgaGF6YXJkcy5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmg0LCB7XG4gICAgICBpZDogXCJhY2tub3dsZWRnZW1lbnQtb2YtbXVsdGlwbGUtZGVsaXZlcmllcy1hdC1vbmNlXCIsXG4gICAgICBjaGlsZHJlbjogXCJBY2tub3dsZWRnZW1lbnQgb2YgTXVsdGlwbGUgRGVsaXZlcmllcyBhdCBPbmNlXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkNvbnN1bWVycyBjYW4gXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi9kb2NzL2NvbmZpcm1zXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImFja25vd2xlZGdlXCJcbiAgICAgIH0pLCBcIiBtdWx0aXBsZSBkZWxpdmVyaWVzIGF0IGEgdGltZS4gV2hlblxcclxcbmNvbnN1bWVyIGRpc3BhdGNoIGNvbmN1cnJlbmN5IGRlZ3JlZSBpcyBoaWdoZXIgdGhhbiBvbmUsIHRoaXMgY2FuIHJlc3VsdCBpbiBhXFxyXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi9kb2NzL2NvbmZpcm1zI2NvbnN1bWVyLWFja3MtZG91YmxlLWFja2luZ1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJkb3VibGUgYWNrbm93bGVkZ2VtZW50XCJcbiAgICAgIH0pLCBcIiwgd2hpY2ggaXNcXHJcXG5jb25zaWRlcmVkIHRvIGJlIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIvZG9jcy9jaGFubmVscyNlcnJvci1oYW5kbGluZ1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJhbiBlcnJvciBpbiB0aGUgcHJvdG9jb2xcIlxuICAgICAgfSksIFwiLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIlRoZXJlZm9yZSwgd2l0aCBjb25jdXJyZW50IGNvbnN1bWVyIGRpc3BhdGNoLCBjb25zdW1lcnMgc2hvdWxkIGFja25vd2xlZGdlIG9ubHlcXHJcXG5vbmUgZGVsaXZlcnkgYXQgYSB0aW1lLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDQsIHtcbiAgICAgIGlkOiBcImNvbnN1bWVycy1hbmQtb3BlcmF0aW9ucy1vbi10aGUtc2FtZS1jaGFubmVsXCIsXG4gICAgICBjaGlsZHJlbjogXCJDb25zdW1lcnMgYW5kIE9wZXJhdGlvbnMgb24gdGhlIFNhbWUgQ2hhbm5lbFwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJDb25zdW1lciBldmVudCBoYW5kbGVycyBjYW4gaW52b2tlIG9wZXJhdGlvbnMgb24gdGhlIHNhbWUgY2hhbm5lbCAoc3VjaCBhc1xcclxcblwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiSUNoYW5uZWwuUXVldWVEZWNsYXJlQXN5bmNcIlxuICAgICAgfSksIFwiIG9yIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiSUNoYW5uZWwuQmFzaWNDYW5jZWxBc3luY1wiXG4gICAgICB9KSwgXCIpIHdpdGhvdXRcXHJcXG5kZWFkbG9ja2luZy5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwiYmFzaWMtcmV0dXJuXCIsXG4gICAgICBjaGlsZHJlbjogXCJIYW5kbGluZyBVbnJvdXRhYmxlIE1lc3NhZ2VzXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIklmIGEgbWVzc2FnZSBpcyBwdWJsaXNoZWQgd2l0aCB0aGUgXFxcIm1hbmRhdG9yeVxcXCIgZmxhZ1xcclxcbnNldCwgYnV0IGNhbm5vdCBiZSBkZWxpdmVyZWQsIHRoZSBicm9rZXIgd2lsbCByZXR1cm4gaXQgdG8gdGhlIHNlbmRpbmdcXHJcXG5jbGllbnQgKHZpYSBhIFwiLCBfanN4KFwiY29kZVwiLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcImJhc2ljLnJldHVyblwiXG4gICAgICB9KSwgXCIgQU1RUCAwLTktMSBjb21tYW5kKS5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlRvIGJlIG5vdGlmaWVkIG9mIHN1Y2ggcmV0dXJucywgY2xpZW50cyBjYW4gc3Vic2NyaWJlIHRvIHRoZVxcclxcblwiLCBfanN4KFwiY29kZVwiLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIklDaGFubmVsLkJhc2ljUmV0dXJuXCJcbiAgICAgIH0pLCBcIiBldmVudC4gSWYgdGhlcmUgYXJlIG5vIGxpc3RlbmVycyBhdHRhY2hlZCB0byB0aGVcXHJcXG5ldmVudCwgdGhlbiByZXR1cm5lZCBtZXNzYWdlcyB3aWxsIGJlIHNpbGVudGx5IGRyb3BwZWQuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1jc2hhcnBcIixcbiAgICAgICAgY2hpbGRyZW46IFwiY2hhbm5lbC5CYXNpY1JldHVybiArPSAoc2VuZGVyLCBlYSkgPT4ge1xcclxcbiAgICAuLi5cXHJcXG59O1xcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVGhlIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiQmFzaWNSZXR1cm5cIlxuICAgICAgfSksIFwiIGV2ZW50IHdpbGwgZmlyZSwgZm9yIGV4YW1wbGUsIGlmIHRoZSBjbGllbnRcXHJcXG5wdWJsaXNoZXMgYSBtZXNzYWdlIHdpdGggdGhlIFxcXCJtYW5kYXRvcnlcXFwiIGZsYWcgc2V0IHRvIGFuIGV4Y2hhbmdlIG9mXFxyXFxuXFxcImRpcmVjdFxcXCIgdHlwZSB3aGljaCBpcyBub3QgYm91bmQgdG8gYSBxdWV1ZS5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMiwge1xuICAgICAgaWQ6IFwicmVjb3ZlcnlcIixcbiAgICAgIGNoaWxkcmVuOiBcIkF1dG9tYXRpYyBSZWNvdmVyeSBGcm9tIE5ldHdvcmsgRmFpbHVyZXNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgzLCB7XG4gICAgICBpZDogXCJjb25uZWN0aW9uLXJlY292ZXJ5XCIsXG4gICAgICBjaGlsZHJlbjogXCJDb25uZWN0aW9uIFJlY292ZXJ5XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJOZXR3b3JrIGNvbm5lY3Rpb24gYmV0d2VlbiBjbGllbnRzIGFuZCBSYWJiaXRNUSBub2RlcyBjYW4gZmFpbC5cXHJcXG5SYWJiaXRNUSAuTkVUL0MjIGNsaWVudCBzdXBwb3J0cyBhdXRvbWF0aWMgcmVjb3Zlcnkgb2YgY29ubmVjdGlvbnNcXHJcXG5hbmQgdG9wb2xvZ3kgKHF1ZXVlcywgZXhjaGFuZ2VzLCBiaW5kaW5ncywgYW5kIGNvbnN1bWVycykuIFRoZSBmZWF0dXJlXFxyXFxuaGFzIGNlcnRhaW4gbGltaXRhdGlvbnMgY292ZXJlZCBsYXRlciBpbiB0aGlzIGd1aWRlLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiVGhlIGF1dG9tYXRpYyByZWNvdmVyeSBwcm9jZXNzIHBlcmZvcm1zIHRoZSBmb2xsb3dpbmcgc3RlcHM6XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMudWwsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJSZWNvbm5lY3RcIlxuICAgICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFwiUmVzdG9yZSBjb25uZWN0aW9uIGxpc3RlbmVyc1wiXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJSZS1vcGVuIGNoYW5uZWxzXCJcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIlJlc3RvcmUgY2hhbm5lbCBsaXN0ZW5lcnNcIlxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJSZXN0b3JlIGNoYW5uZWwgXCIsIF9qc3goXCJjb2RlXCIsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJiYXNpYy5xb3NcIlxuICAgICAgICB9KSwgXCIgc2V0dGluZywgcHVibGlzaGVyIGNvbmZpcm1zIGFuZCB0cmFuc2FjdGlvbiBzZXR0aW5nc1wiXVxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiVG9wb2xvZ3kgcmVjb3Zlcnkgc3RhcnRzIGFmdGVyIHRoZSBhYm92ZSBhY3Rpb25zIGFyZSBjb21wbGV0ZWQuIFRoZSBmb2xsb3dpbmdcXHJcXG5zdGVwcyBhcmUgcGVyZm9ybWVkIGZvciBldmVyeSBjaGFubmVsIGtub3duIHRvIGJlaW5nIG9wZW4gYXQgdGhlIHRpbWUgb2ZcXHJcXG5jb25uZWN0aW9uIGZhaWx1cmU6XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMudWwsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJSZS1kZWNsYXJlIGV4Y2hhbmdlcyAoZXhjZXB0IGZvciBwcmVkZWZpbmVkIG9uZXMpXCJcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIlJlLWRlY2xhcmUgcXVldWVzXCJcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIlJlY292ZXIgYWxsIGJpbmRpbmdzXCJcbiAgICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIlJlY292ZXIgYWxsIGNvbnN1bWVyc1wiXG4gICAgICB9KSwgXCJcXG5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlRvIGVuYWJsZSBhdXRvbWF0aWMgY29ubmVjdGlvbiByZWNvdmVyeSwgc2V0XFxyXFxuXCIsIF9qc3goXCJjb2RlXCIsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiQ29ubmVjdGlvbkZhY3RvcnkuQXV0b21hdGljUmVjb3ZlcnlFbmFibGVkXCJcbiAgICAgIH0pLCBcIiB0byB0cnVlOlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtY3NoYXJwXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIkNvbm5lY3Rpb25GYWN0b3J5IGZhY3RvcnkgPSBuZXcgQ29ubmVjdGlvbkZhY3RvcnkoKTtcXHJcXG5mYWN0b3J5LkF1dG9tYXRpY1JlY292ZXJ5RW5hYmxlZCA9IHRydWU7XFxyXFxuLy8gY29ubmVjdGlvbiB0aGF0IHdpbGwgcmVjb3ZlciBhdXRvbWF0aWNhbGx5XFxyXFxuSUNvbm5lY3Rpb24gY29ubiA9IGF3YWl0IGZhY3RvcnkuQ3JlYXRlQ29ubmVjdGlvbkFzeW5jKCk7XFxuXCJcbiAgICAgIH0pXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiSWYgcmVjb3ZlcnkgZmFpbHMgZHVlIHRvIGFuIGV4Y2VwdGlvbiAoZS5nLiBSYWJiaXRNUSBub2RlIGlzIHN0aWxsIG5vdFxcclxcbnJlYWNoYWJsZSksIGl0IHdpbGwgYmUgcmV0cmllZCBhZnRlciBhIGZpeGVkIHRpbWUgaW50ZXJ2YWwgKGRlZmF1bHQgaXMgNVxcclxcbnNlY29uZHMpLiBUaGUgaW50ZXJ2YWwgY2FuIGJlIGNvbmZpZ3VyZWQ6XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWNzaGFycFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJDb25uZWN0aW9uRmFjdG9yeSBmYWN0b3J5ID0gbmV3IENvbm5lY3Rpb25GYWN0b3J5KCk7XFxyXFxuLy8gYXR0ZW1wdCByZWNvdmVyeSBldmVyeSAxMCBzZWNvbmRzXFxyXFxuZmFjdG9yeS5OZXR3b3JrUmVjb3ZlcnlJbnRlcnZhbCA9IFRpbWVTcGFuLkZyb21TZWNvbmRzKDEwKTtcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwicmVjb3ZlcnktdHJpZ2dlcnNcIixcbiAgICAgIGNoaWxkcmVuOiBcIldoZW4gV2lsbCBDb25uZWN0aW9uIFJlY292ZXJ5IEJlIFRyaWdnZXJlZD9cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkF1dG9tYXRpYyBjb25uZWN0aW9uIHJlY292ZXJ5LCBpZiBlbmFibGVkLCB3aWxsIGJlIHRyaWdnZXJlZCBieSB0aGUgZm9sbG93aW5nIGV2ZW50czpcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy51bCwge1xuICAgICAgY2hpbGRyZW46IFtcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIkFuIEkvTyBleGNlcHRpb24gaXMgdGhyb3duIGluIGNvbm5lY3Rpb24ncyBJL08gbG9vcFwiXG4gICAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5saSwge1xuICAgICAgICBjaGlsZHJlbjogXCJBIHNvY2tldCByZWFkIG9wZXJhdGlvbiB0aW1lcyBvdXRcIlxuICAgICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLmxpLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbXCJNaXNzZWQgc2VydmVyIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgICBocmVmOiBcIi9kb2NzL2hlYXJ0YmVhdHNcIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJoZWFydGJlYXRzXCJcbiAgICAgICAgfSksIFwiIGFyZSBkZXRlY3RlZFwiXVxuICAgICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMubGksIHtcbiAgICAgICAgY2hpbGRyZW46IFwiQW55IG90aGVyIHVuZXhwZWN0ZWQgZXhjZXB0aW9uIGlzIHRocm93biBpbiBjb25uZWN0aW9uJ3MgSS9PIGxvb3BcIlxuICAgICAgfSksIFwiXFxuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwid2hpY2hldmVyIGhhcHBlbnMgZmlyc3QuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJJZiBpbml0aWFsIGNsaWVudCBjb25uZWN0aW9uIHRvIGEgUmFiYml0TVEgbm9kZSBmYWlscywgYXV0b21hdGljIGNvbm5lY3Rpb25cXHJcXG5yZWNvdmVyeSB3b24ndCBraWNrIGluLiBBcHBsaWNhdGlvbnMgZGV2ZWxvcGVycyBhcmUgcmVzcG9uc2libGUgZm9yIHJldHJ5aW5nXFxyXFxuc3VjaCBjb25uZWN0aW9ucywgbG9nZ2luZyBmYWlsZWQgYXR0ZW1wdHMsIGltcGxlbWVudGluZyBhIGxpbWl0IHRvIHRoZSBudW1iZXJcXHJcXG5vZiByZXRyaWVzIGFuZCBzbyBvbi4gSGVyZSdzIGEgdmVyeSBiYXNpYyBleGFtcGxlOlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1jc2hhcnBcIixcbiAgICAgICAgY2hpbGRyZW46IFwiQ29ubmVjdGlvbkZhY3RvcnkgZmFjdG9yeSA9IG5ldyBDb25uZWN0aW9uRmFjdG9yeSgpO1xcclxcbi8vIGNvbmZpZ3VyZSB2YXJpb3VzIGNvbm5lY3Rpb24gc2V0dGluZ3NcXHJcXG5cXHJcXG50cnkge1xcclxcbiAgSUNvbm5lY3Rpb24gY29ubiA9IGF3YWl0IGZhY3RvcnkuQ3JlYXRlQ29ubmVjdGlvbkFzeW5jKCk7XFxyXFxufSBjYXRjaCAoUmFiYml0TVEuQ2xpZW50LkV4Y2VwdGlvbnMuQnJva2VyVW5yZWFjaGFibGVFeGNlcHRpb24gZSkge1xcclxcbiAgYXdhaXQgVGFzay5EZWxheSg1MDAwKTtcXHJcXG4gIC8vIGFwcGx5IHJldHJ5IGxvZ2ljXFxyXFxufVxcblwiXG4gICAgICB9KVxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiV2hlbiBhIGNvbm5lY3Rpb24gaXMgY2xvc2VkIGJ5IHRoZSBhcHBsaWNhdGlvbiB2aWEgdGhlIFwiLCBfanN4KFwiY29kZVwiLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIkNvbm5lY3Rpb24uQ2xvc2VBc3luY1wiXG4gICAgICB9KSwgXCIgbWV0aG9kLFxcclxcbmNvbm5lY3Rpb24gcmVjb3Zlcnkgd2lsbCBub3QgYmUgaW5pdGlhdGVkLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkNoYW5uZWwtbGV2ZWwgZXhjZXB0aW9ucyB3aWxsIG5vdCB0cmlnZ2VyIGFueSBraW5kIG9mIHJlY292ZXJ5IGFzIHRoZXkgdXN1YWxseVxcclxcbmluZGljYXRlIGEgc2VtYW50aWMgaXNzdWUgaW4gdGhlIGFwcGxpY2F0aW9uIChlLmcuIGFuIGF0dGVtcHQgdG8gY29uc3VtZSBmcm9tIGFcXHJcXG5ub24tZXhpc3RlbnQgcXVldWUpLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDMsIHtcbiAgICAgIGlkOiBcInB1Ymxpc2hlcnNcIixcbiAgICAgIGNoaWxkcmVuOiBcIkVmZmVjdHMgb24gUHVibGlzaGluZ1wiXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJNZXNzYWdlcyB0aGF0IGFyZSBwdWJsaXNoZWQgdXNpbmcgXCIsIF9qc3goXCJjb2RlXCIsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiSUNoYW5uZWwuQmFzaWNQdWJsaXNoQXN5bmNcIlxuICAgICAgfSksIFwiIHdoZW4gY29ubmVjdGlvbiBpcyBkb3duXFxyXFxud2lsbCBiZSBsb3N0LiBUaGUgY2xpZW50IGRvZXMgbm90IGVucXVldWUgdGhlbSBmb3IgZGVsaXZlcnkgYWZ0ZXIgY29ubmVjdGlvbiBoYXMgcmVjb3ZlcmVkLlxcclxcblRvIGVuc3VyZSB0aGF0IHB1Ymxpc2hlZCBtZXNzYWdlcyByZWFjaCBSYWJiaXRNUSBhcHBsaWNhdGlvbnMgbmVlZCB0byB1c2UgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi9kb2NzL2NvbmZpcm1zXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIlB1Ymxpc2hlciBDb25maXJtc1wiXG4gICAgICB9KSwgXCJcXHJcXG5hbmQgYWNjb3VudCBmb3IgY29ubmVjdGlvbiBmYWlsdXJlcy5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwidG9wb2xvZ3ktcmVjb3ZlcnlcIixcbiAgICAgIGNoaWxkcmVuOiBcIlRvcG9sb2d5IFJlY292ZXJ5XCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJUb3BvbG9neSByZWNvdmVyeSBpbnZvbHZlcyByZWNvdmVyeSBvZiBleGNoYW5nZXMsIHF1ZXVlcywgYmluZGluZ3NcXHJcXG5hbmQgY29uc3VtZXJzLiBJdCBpcyBlbmFibGVkIGJ5IGRlZmF1bHQgYnV0IGNhbiBiZSBkaXNhYmxlZDpcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnByZSwge1xuICAgICAgY2hpbGRyZW46IF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjbGFzc05hbWU6IFwibGFuZ3VhZ2UtY3NoYXJwXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIkNvbm5lY3Rpb25GYWN0b3J5IGZhY3RvcnkgPSBuZXcgQ29ubmVjdGlvbkZhY3RvcnkoKTtcXHJcXG5mYWN0b3J5LkF1dG9tYXRpY1JlY292ZXJ5RW5hYmxlZCA9IHRydWU7XFxyXFxuZmFjdG9yeS5Ub3BvbG9neVJlY292ZXJ5RW5hYmxlZCAgPSBmYWxzZTtcXHJcXG5cXHJcXG5JQ29ubmVjdGlvbiBjb25uID0gYXdhaXQgZmFjdG9yeS5DcmVhdGVDb25uZWN0aW9uQXN5bmMoKTtcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwiYXV0b21hdGljLXJlY292ZXJ5LWxpbWl0YXRpb25zXCIsXG4gICAgICBjaGlsZHJlbjogXCJGYWlsdXJlIERldGVjdGlvbiBhbmQgUmVjb3ZlcnkgTGltaXRhdGlvbnNcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkF1dG9tYXRpYyBjb25uZWN0aW9uIHJlY292ZXJ5IGhhcyBhIG51bWJlciBvZiBsaW1pdGF0aW9ucyBhbmQgaW50ZW50aW9uYWxcXHJcXG5kZXNpZ24gZGVjaXNpb25zIHRoYXQgYXBwbGljYXRpb25zIGRldmVsb3BlcnMgbmVlZCB0byBiZSBhd2FyZSBvZi5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiV2hlbiBhIGNvbm5lY3Rpb24gaXMgZG93biBvciBsb3N0LCBpdCBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiL2RvY3MvaGVhcnRiZWF0c1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJ0YWtlcyB0aW1lIHRvIGRldGVjdFwiXG4gICAgICB9KSwgXCIuXFxyXFxuVGhlcmVmb3JlIHRoZXJlIGlzIGEgd2luZG93IG9mIHRpbWUgaW4gd2hpY2ggYm90aCB0aGUgbGlicmFyeSBhbmQgdGhlXFxyXFxuYXBwbGljYXRpb24gYXJlIHVuYXdhcmUgb2YgZWZmZWN0aXZlIGNvbm5lY3Rpb24gZmFpbHVyZS4gQW55IG1lc3NhZ2VzXFxyXFxucHVibGlzaGVkIGR1cmluZyB0aGlzIHRpbWUgZnJhbWUgYXJlIHNlcmlhbGlzZWQgYW5kIHdyaXR0ZW4gdG8gdGhlIFRDUCBzb2NrZXRcXHJcXG5hcyB1c3VhbC4gVGhlaXIgZGVsaXZlcnkgdG8gdGhlIGJyb2tlciBjYW4gb25seSBiZSBndWFyYW50ZWVkIHZpYSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiL2RvY3MvY29uZmlybXNcIixcbiAgICAgICAgY2hpbGRyZW46IFwicHVibGlzaGVyXFxyXFxuY29uZmlybXNcIlxuICAgICAgfSksIFwiOiBwdWJsaXNoaW5nIGluIEFNUVAgMC05LTEgaXMgZW50aXJlbHkgYXN5bmNocm9ub3VzIGJ5XFxyXFxuZGVzaWduLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIldoZW4gYSBzb2NrZXQgb3IgSS9PIG9wZXJhdGlvbiBlcnJvciBpcyBkZXRlY3RlZCBieSBhIGNvbm5lY3Rpb24gd2l0aCBhdXRvbWF0aWNcXHJcXG5yZWNvdmVyeSBlbmFibGVkLCByZWNvdmVyeSBiZWdpbnMgYWZ0ZXIgYSBjb25maWd1cmFibGUgZGVsYXksIDUgc2Vjb25kcyBieVxcclxcbmRlZmF1bHQuIFRoaXMgZGVzaWduIGFzc3VtZXMgdGhhdCBldmVuIHRob3VnaCBhIGxvdCBvZiBuZXR3b3JrIGZhaWx1cmVzIGFyZVxcclxcbnRyYW5zaWVudCBhbmQgZ2VuZXJhbGx5IHNob3J0IGxpdmVkLCB0aGV5IGRvIG5vdCBnbyBhd2F5IGluIGFuIGluc3RhbnQuXFxyXFxuQ29ubmVjdGlvbiByZWNvdmVyeSBhdHRlbXB0cyB3aWxsIGNvbnRpbnVlIGF0IGlkZW50aWNhbCB0aW1lIGludGVydmFscyB1bnRpbCBhXFxyXFxubmV3IGNvbm5lY3Rpb24gaXMgc3VjY2Vzc2Z1bGx5IG9wZW5lZC5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiV2hlbiBhIGNvbm5lY3Rpb24gaXMgaW4gdGhlIHJlY292ZXJpbmcgc3RhdGUsIGFueSBwdWJsaXNoZXMgYXR0ZW1wdGVkIG9uIGl0c1xcclxcbmNoYW5uZWxzIHdpbGwgYmUgcmVqZWN0ZWQgd2l0aCBhbiBleGNlcHRpb24uIFRoZSBjbGllbnQgY3VycmVudGx5IGRvZXMgbm90XFxyXFxucGVyZm9ybSBhbnkgaW50ZXJuYWwgYnVmZmVyaW5nIG9mIHN1Y2ggb3V0Z29pbmcgbWVzc2FnZXMuIEl0IGlzIGFuIGFwcGxpY2F0aW9uXFxyXFxuZGV2ZWxvcGVyJ3MgcmVzcG9uc2liaWxpdHkgdG8ga2VlcCB0cmFjayBvZiBzdWNoIG1lc3NhZ2VzIGFuZCByZXB1Ymxpc2ggdGhlbVxcclxcbndoZW4gcmVjb3Zlcnkgc3VjY2VlZHMuIFwiLCBfanN4KF9jb21wb25lbnRzLmEsIHtcbiAgICAgICAgaHJlZjogXCIvZG9jcy9jb25maXJtc1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJQdWJsaXNoZXIgY29uZmlybXNcIlxuICAgICAgfSksIFwiIGlzIGEgcHJvdG9jb2xcXHJcXG5leHRlbnNpb24gdGhhdCBzaG91bGQgYmUgdXNlZCBieSBwdWJsaXNoZXJzIHRoYXQgY2Fubm90IGFmZm9yZCBtZXNzYWdlIGxvc3MuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJDb25uZWN0aW9uIHJlY292ZXJ5IHdpbGwgbm90IGtpY2sgaW4gd2hlbiBhIGNoYW5uZWwgaXMgY2xvc2VkIGR1ZSB0byBhXFxyXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcIi9kb2NzL2NoYW5uZWxzI2Vycm9yLWhhbmRsaW5nXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcImNoYW5uZWwtbGV2ZWwgZXhjZXB0aW9uXCJcbiAgICAgIH0pLCBcIi5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJTdWNoIGV4Y2VwdGlvbnMgb2Z0ZW4gaW5kaWNhdGUgYXBwbGljYXRpb24tbGV2ZWwgaXNzdWVzLiBUaGUgbGlicmFyeSBjYW5ub3RcXHJcXG5kZXRlcm1pbmUgd2hldGhlciB0aGF0J3MgdGhlIGNhc2UgYW5kIG1ha2UgYW4gaW5mb3JtZWQgZGVjaXNpb24gYWJvdXQgd2hhdCBjYW5cXHJcXG5iZSBkb25lIHRvIHJlY292ZXIuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogXCJDbG9zZWQgY2hhbm5lbHMgd29uJ3QgYmUgcmVjb3ZlcmVkIGV2ZW4gYWZ0ZXIgY29ubmVjdGlvbiByZWNvdmVyeSBraWNrcyBpbi5cXHJcXG5UaGlzIGluY2x1ZGVzIGJvdGggZXhwbGljaXRseSBjbG9zZWQgY2hhbm5lbHMgYW5kIHRoZSBjaGFubmVsLWxldmVsIGV4Y2VwdGlvblxcclxcbmNhc2UgYWJvdmUuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwiYmFzaWMtYWNrLWFuZC1yZWNvdmVyeVwiLFxuICAgICAgY2hpbGRyZW46IFwiTWFudWFsIEFja25vd2xlZGdlbWVudHMgYW5kIEF1dG9tYXRpYyBSZWNvdmVyeVwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFwiV2hlbiBtYW51YWwgYWNrbm93bGVkZ2VtZW50cyBhcmUgdXNlZCwgaXQgaXMgcG9zc2libGUgdGhhdCBuZXR3b3JrIGNvbm5lY3Rpb25cXHJcXG50byBSYWJiaXRNUSBub2RlIGZhaWxzIGJldHdlZW4gbWVzc2FnZSBkZWxpdmVyeSBhbmQgYWNrbm93bGVkZ2VtZW50LiBBZnRlclxcclxcbmNvbm5lY3Rpb24gcmVjb3ZlcnksIFJhYmJpdE1RIHdpbGwgcmVzZXQgZGVsaXZlcnkgdGFncyBvbiBhbGwgY2hhbm5lbHMuXCJcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIlRoaXMgbWVhbnMgdGhhdCBcIiwgX2pzeChcImNvZGVcIiwge1xuICAgICAgICBjaGlsZHJlbjogXCJiYXNpYy5hY2tcIlxuICAgICAgfSksIFwiLCBcIiwgX2pzeChcImNvZGVcIiwge1xuICAgICAgICBjaGlsZHJlbjogXCJiYXNpYy5uYWNrXCJcbiAgICAgIH0pLCBcIiwgYW5kXFxyXFxuXCIsIF9qc3goXCJjb2RlXCIsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiYmFzaWMucmVqZWN0XCJcbiAgICAgIH0pLCBcIiB3aXRoIG9sZCBkZWxpdmVyeSB0YWdzIHdpbGwgY2F1c2UgYSBjaGFubmVsXFxyXFxuZXhjZXB0aW9uLiBUbyBhdm9pZCB0aGlzLCBSYWJiaXRNUSAuTkVUIGNsaWVudCBrZWVwcyB0cmFjayBvZiBhbmQgdXBkYXRlc1xcclxcbmRlbGl2ZXJ5IHRhZ3MgdG8gbWFrZSB0aGVtIG1vbm90b25pY2FsbHkgZ3Jvd2luZyBiZXR3ZWVuIHJlY292ZXJpZXMuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbX2pzeChcImNvZGVcIiwge1xuICAgICAgICBjaGlsZHJlbjogXCJJQ2hhbm5lbC5CYXNpY0Fja0FzeW5jXCJcbiAgICAgIH0pLCBcIiwgXCIsIF9qc3goXCJjb2RlXCIsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiSUNoYW5uZWwuQmFzaWNOYWNrQXN5bmNcIlxuICAgICAgfSksIFwiLCBhbmRcXHJcXG5cIiwgX2pzeChcImNvZGVcIiwge1xuICAgICAgICBjaGlsZHJlbjogXCJJQ2hhbm5lbC5CYXNpY1JlamVjdEFzeW5jXCJcbiAgICAgIH0pLCBcIiB0aGVuIHRyYW5zbGF0ZSBhZGp1c3RlZCBkZWxpdmVyeSB0YWdzXFxyXFxuaW50byB0aG9zZSB1c2VkIGJ5IFJhYmJpdE1RLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBcIkFja25vd2xlZGdlbWVudHMgd2l0aCBzdGFsZSBkZWxpdmVyeSB0YWdzIHdpbGwgbm90IGJlIHNlbnQuIEFwcGxpY2F0aW9ucyB0aGF0XFxyXFxudXNlIG1hbnVhbCBhY2tub3dsZWRnZW1lbnRzIGFuZCBhdXRvbWF0aWMgcmVjb3ZlcnkgbXVzdCBiZSBjYXBhYmxlIG9mIGhhbmRsaW5nXFxyXFxucmVkZWxpdmVyaWVzLlwiXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMuaDIsIHtcbiAgICAgIGlkOiBcIm9hdXRoMi1zdXBwb3J0XCIsXG4gICAgICBjaGlsZHJlbjogXCJPQXV0aCAyIFN1cHBvcnRcIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVGhlIGNsaWVudCBjYW4gYXV0aGVudGljYXRlIGFnYWluc3QgYW4gT0F1dGggMiBzZXJ2ZXIgbGlrZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiaHR0cHM6Ly9naXRodWIuY29tL2Nsb3VkZm91bmRyeS91YWFcIixcbiAgICAgICAgY2hpbGRyZW46IFwiVUFBXCJcbiAgICAgIH0pLCBcIi5cXHJcXG5UaGUgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9yYWJiaXRtcS9yYWJiaXRtcS1zZXJ2ZXIvdHJlZS9tYWluL2RlcHMvcmFiYml0bXFfYXV0aF9iYWNrZW5kX29hdXRoMlwiLFxuICAgICAgICBjaGlsZHJlbjogXCJPQXV0aCAyIHBsdWdpblwiXG4gICAgICB9KSwgXCJcXHJcXG5tdXN0IGJlIHR1cm5lZCBvbiBvbiB0aGUgc2VydmVyIHNpZGUgYW5kIGNvbmZpZ3VyZWQgdG8gdXNlIHRoZSBzYW1lIE9BdXRoIDJcXHJcXG5zZXJ2ZXIgYXMgdGhlIGNsaWVudC4gVGhpcyBzZWN0aW9uIGFzc3VtZXMgdGhhdCB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuYSwge1xuICAgICAgICBocmVmOiBcImh0dHBzOi8vd3d3Lm51Z2V0Lm9yZy9wYWNrYWdlcy9SYWJiaXRNUS5DbGllbnQuT0F1dGgyXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIm1vc3QgcmVjZW50IG1ham9yIHZlcnNpb24gb2YgdGhlIE9BdXRoMiBjbGllbnQgbGlicmFyeVwiXG4gICAgICB9KSwgXCIgaXMgdXNlZC5cIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5oMywge1xuICAgICAgaWQ6IFwib2F1dGgyLWdldHRpbmctdG9rZW5cIixcbiAgICAgIGNoaWxkcmVuOiBcIkdldHRpbmcgdGhlIE9BdXRoIDIgVG9rZW5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiVGhlIC5ORVQgY2xpZW50IHByb3ZpZGVzIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIk9BdXRoMkNsaWVudENyZWRlbnRpYWxzUHJvdmlkZXJcIlxuICAgICAgfSksIFwiIGNsYXNzIHRvIGdldCBhXFxyXFxuSldUIHRva2VuIHVzaW5nIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzY3NDkjc2VjdGlvbi00LjRcIixcbiAgICAgICAgY2hpbGRyZW46IFwiT0F1dGggMiBDbGllbnQgQ3JlZGVudGlhbHNcXHJcXG5mbG93XCJcbiAgICAgIH0pLCBcIi4gVGhlIGNsaWVudCBzZW5kcyB0aGVcXHJcXG5hY2Nlc3MgdG9rZW4gaW4gdGhlIHBhc3N3b3JkIGZpZWxkIHdoZW4gb3BlbmluZyBhIGNvbm5lY3Rpb24uIFRoZSBicm9rZXIgdGhlblxcclxcbnZlcmlmaWVzIHRoZSBhY2Nlc3MgdG9rZW4gc2lnbmF0dXJlLCB2YWxpZGl0eSwgYW5kIHBlcm1pc3Npb25zIGJlZm9yZVxcclxcbmF1dGhvcmlzaW5nIHRoZSBjb25uZWN0aW9uIGFuZCBncmFudGluZyBhY2Nlc3MgdG8gdGhlIHJlcXVlc3RlZCB2aXJ0dWFsIGhvc3QuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3goX2NvbXBvbmVudHMucHJlLCB7XG4gICAgICBjaGlsZHJlbjogX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYW5ndWFnZS1jc2hhcnBcIixcbiAgICAgICAgY2hpbGRyZW46IFwidXNpbmcgUmFiYml0TVEuQ2xpZW50Lk9BdXRoMjtcXHJcXG5cXHJcXG52YXIgdG9rZW5FbmRwb2ludFVyaSA9IG5ldyBVcmkoXFxcImh0dHA6Ly9zb21lZG9tYWluLmNvbS90b2tlblxcXCIpO1xcclxcbnZhciBvQXV0aDJDbGllbnQgPSBuZXcgT0F1dGgyQ2xpZW50QnVpbGRlcihcXFwiY2xpZW50X2lkXFxcIiwgXFxcImNsaWVudF9zZWNyZXRcXFwiLCB0b2tlbkVuZHBvaW50VXJpKS5CdWlsZCgpO1xcclxcbklDcmVkZW50aWFsc1Byb3ZpZGVyIGNyZWRlbnRpYWxQcm92aWRlciA9IG5ldyBPQXV0aDJDbGllbnRDcmVkZW50aWFsc1Byb3ZpZGVyKFxcXCJwcm9kLXVhYS0xXFxcIiwgb0F1dGgyQ2xpZW50KTtcXHJcXG5cXHJcXG52YXIgY29ubmVjdGlvbkZhY3RvcnkgPSBuZXcgQ29ubmVjdGlvbkZhY3RvcnlcXHJcXG57XFxyXFxuICBDcmVkZW50aWFsc1Byb3ZpZGVyID0gY3JlZGVudGlhbHNQcm92aWRlclxcclxcbn07XFxyXFxudmFyIGNvbm5lY3Rpb24gPSBhd2FpdCBjb25uZWN0aW9uRmFjdG9yeS5DcmVhdGVDb25uZWN0aW9uQXN5bmMoKTtcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIkluIHByb2R1Y3Rpb24sIGVuc3VyZSB5b3UgdXNlIEhUVFBTIGZvciB0aGUgdG9rZW4gZW5kcG9pbnQgVVJJIGFuZCBjb25maWd1cmVcXHJcXG5hIFwiLCBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2hpbGRyZW46IFwiSHR0cENsaWVudEhhbmRsZXJcIlxuICAgICAgfSksIFwiIGFwcHJvcHJpYXRlbHkgZm9yIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIkh0dHBDbGllbnRcIlxuICAgICAgfSksIFwiIDpcIl1cbiAgICB9KSwgXCJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5wcmUsIHtcbiAgICAgIGNoaWxkcmVuOiBfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImxhbmd1YWdlLWNzaGFycFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJIdHRwQ2xpZW50SGFuZGxlciBodHRwQ2xpZW50SGFuZGxlciA9IGJ1aWxkSHR0cENsaWVudEhhbmRsZXJXaXRoVExTRW5hYmxlZCgpO1xcclxcblxcclxcbnZhciB0b2tlbkVuZHBvaW50VXJpID0gbmV3IFVyaShcXFwiaHR0cHM6Ly9zb21lZG9tYWluLmNvbS90b2tlblxcXCIpO1xcclxcblxcclxcbnZhciBvQXV0aDJDbGllbnRCdWlsZGVyID0gbmV3IE9BdXRoMkNsaWVudEJ1aWxkZXIoXFxcImNsaWVudF9pZFxcXCIsIFxcXCJjbGllbnRfc2VjcmV0XFxcIiwgdG9rZW5FbmRwb2ludFVyaSlcXHJcXG5vQXV0aDJDbGllbnRCdWlsZGVyLlNldEh0dHBDbGllbnRIYW5kbGVyKGh0dHBDbGllbnRIYW5kbGVyKTtcXHJcXG52YXIgb0F1dGgyQ2xpZW50ID0gYXdhaXQgb0F1dGgyQ2xpZW50QnVpbGRlci5CdWlsZEFzeW5jKCk7XFxyXFxuXFxyXFxuSUNyZWRlbnRpYWxzUHJvdmlkZXIgY3JlZGVudGlhbHNQcm92aWRlciA9IG5ldyBPQXV0aDJDbGllbnRDcmVkZW50aWFsc1Byb3ZpZGVyKFxcXCJwcm9kLXVhYS0xXFxcIiwgb0F1dGgyQ2xpZW50KTtcXHJcXG5cXHJcXG52YXIgY29ubmVjdGlvbkZhY3RvcnkgPSBuZXcgQ29ubmVjdGlvbkZhY3RvcnlcXHJcXG57XFxyXFxuICBDcmVkZW50aWFsc1Byb3ZpZGVyID0gY3JlZGVudGlhbHNQcm92aWRlclxcclxcbn07XFxyXFxudmFyIGNvbm5lY3Rpb24gPSBhd2FpdCBjb25uZWN0aW9uRmFjdG9yeS5DcmVhdGVDb25uZWN0aW9uQXN5bmMoKTtcXG5cIlxuICAgICAgfSlcbiAgICB9KSwgXCJcXG5cIiwgX2pzeHMoX2NvbXBvbmVudHMucCwge1xuICAgICAgY2hpbGRyZW46IFtcIk5vdGU6IEluIGNhc2UgeW91ciBBdXRob3JpemF0aW9uIHNlcnZlciByZXF1aXJlcyBleHRyYSByZXF1ZXN0IHBhcmFtZXRlcnNcXHJcXG5iZXlvbmQgd2hhdCB0aGUgc3BlY2lmaWNhdGlvbiByZXF1aXJlcywgeW91IGNhbiBhZGQgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCI8a2V5LCB2YWx1ZT5cIlxuICAgICAgfSksIFwiIHBhaXJzIHRvIGFcXHJcXG5cIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIkRpY3Rpb25hcnlcIlxuICAgICAgfSksIFwiIGFuZCBwYXNzaW5nIGl0IHRvIHRoZSBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIk9BdXRoMkNsaWVudENyZWRlbnRpYWxzUHJvdmlkZXJcIlxuICAgICAgfSksIFwiXFxyXFxuY29uc3RydWN0b3IgcmF0aGVyIHRoYW4gYW4gXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJFTVBUWVwiXG4gICAgICB9KSwgXCIgb25lIGFzIHNob3duIGFib3ZlLlwiXVxuICAgIH0pLCBcIlxcblwiLCBfanN4KF9jb21wb25lbnRzLmgzLCB7XG4gICAgICBpZDogXCJvYXV0aDItcmVmcmVzaGluZy10b2tlblwiLFxuICAgICAgY2hpbGRyZW46IFwiUmVmcmVzaGluZyB0aGUgVG9rZW5cIlxuICAgIH0pLCBcIlxcblwiLCBfanN4cyhfY29tcG9uZW50cy5wLCB7XG4gICAgICBjaGlsZHJlbjogW1wiV2hlbiB0b2tlbnMgZXhwaXJlLCB0aGUgYnJva2VyIHJlZnVzZXMgZnVydGhlciBvcGVyYXRpb25zIG92ZXIgdGhlIGNvbm5lY3Rpb24uXFxyXFxuSXQgaXMgcG9zc2libGUgdG8gY2FsbCBcIiwgX2pzeChfY29tcG9uZW50cy5jb2RlLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIklDcmVkZW50aWFsc1Byb3ZpZGVyI0dldENyZWRlbnRpYWxzQXN5bmMoKVwiXG4gICAgICB9KSwgXCIgYmVmb3JlIGV4cGlyaW5nIGFuZFxcclxcbnNlbmQgdGhlIG5ldyB0b2tlbiB0byB0aGUgc2VydmVyLiBUaGlzIGlzIG5vdCBjb252ZW5pZW50IGZvciBhcHBsaWNhdGlvbnMgc28sXFxyXFxudGhlIC5ORVQgY2xpZW50IHByb3ZpZGVzIGhlbHAgd2l0aCB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJDcmVkZW50aWFsc1JlZnJlc2hlclwiXG4gICAgICB9KSwgXCIuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJTZWUgdGhlIFwiLCBfanN4cyhfY29tcG9uZW50cy5hLCB7XG4gICAgICAgIGhyZWY6IFwiaHR0cHM6Ly9naXRodWIuY29tL3JhYmJpdG1xL3JhYmJpdG1xLWRvdG5ldC1jbGllbnQvYmxvYi9tYWluL3Byb2plY3RzL1Rlc3QvT0F1dGgyL1Rlc3RPQXV0aDIuY3NcIixcbiAgICAgICAgY2hpbGRyZW46IFtfanN4KF9jb21wb25lbnRzLmNvZGUsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJUZXN0T0F1dGgyXCJcbiAgICAgICAgfSksIFwiIGNsYXNzXCJdXG4gICAgICB9KSwgXCJcXHJcXG5mb3IgaG93IHRvIHVzZSB0aGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJDcmVkZW50aWFsc1JlZnJlc2hlclwiXG4gICAgICB9KSwgXCIgY2xhc3MuXCJdXG4gICAgfSksIFwiXFxuXCIsIF9qc3hzKF9jb21wb25lbnRzLnAsIHtcbiAgICAgIGNoaWxkcmVuOiBbXCJUaGUgXCIsIF9qc3goX2NvbXBvbmVudHMuY29kZSwge1xuICAgICAgICBjaGlsZHJlbjogXCJDcmVkZW50aWFsc1JlZnJlc2hlclwiXG4gICAgICB9KSwgXCIgc2NoZWR1bGVzIGEgcmVmcmVzaCBhZnRlciAyLzMgb2YgdGhlIHRva2VuIHZhbGlkaXR5XFxyXFxudGltZS4gRm9yIGV4YW1wbGUsIGlmIHRoZSB0b2tlbiBleHBpcmVzIGluIDYwIG1pbnV0ZXMsIGl0IGlzIHJlZnJlc2hlZCBhZnRlciA0MFxcclxcbm1pbnV0ZXMuXCJdXG4gICAgfSldXG4gIH0pO1xufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudChwcm9wcyA9IHt9KSB7XG4gIGNvbnN0IHt3cmFwcGVyOiBNRFhMYXlvdXR9ID0ge1xuICAgIC4uLl9wcm92aWRlQ29tcG9uZW50cygpLFxuICAgIC4uLnByb3BzLmNvbXBvbmVudHNcbiAgfTtcbiAgcmV0dXJuIE1EWExheW91dCA/IF9qc3goTURYTGF5b3V0LCB7XG4gICAgLi4ucHJvcHMsXG4gICAgY2hpbGRyZW46IF9qc3goX2NyZWF0ZU1keENvbnRlbnQsIHtcbiAgICAgIC4uLnByb3BzXG4gICAgfSlcbiAgfSkgOiBfY3JlYXRlTWR4Q29udGVudChwcm9wcyk7XG59XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./client-libraries/dotnet-api-guide.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanM/MjA0NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbXBvcnQge01EWENvbXBvbmVudHN9IGZyb20gJ21keC90eXBlcy5qcydcbiAqIEBpbXBvcnQge0NvbXBvbmVudCwgUmVhY3RFbGVtZW50LCBSZWFjdE5vZGV9IGZyb20gJ3JlYWN0J1xuICovXG5cbi8qKlxuICogQGNhbGxiYWNrIE1lcmdlQ29tcG9uZW50c1xuICogICBDdXN0b20gbWVyZ2UgZnVuY3Rpb24uXG4gKiBAcGFyYW0ge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSBjdXJyZW50Q29tcG9uZW50c1xuICogICBDdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgY29udGV4dC5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMuXG4gKlxuICogQHR5cGVkZWYgUHJvcHNcbiAqICAgQ29uZmlndXJhdGlvbiBmb3IgYE1EWFByb3ZpZGVyYC5cbiAqIEBwcm9wZXJ0eSB7UmVhY3ROb2RlIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NoaWxkcmVuXVxuICogICBDaGlsZHJlbiAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbiB8IG51bGwgfCB1bmRlZmluZWR9IFtkaXNhYmxlUGFyZW50Q29udGV4dD1mYWxzZV1cbiAqICAgVHVybiBvZmYgb3V0ZXIgY29tcG9uZW50IGNvbnRleHQgKGRlZmF1bHQ6IGBmYWxzZWApLlxuICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuLyoqIEB0eXBlIHtSZWFkb25seTxNRFhDb21wb25lbnRzPn0gKi9cbmNvbnN0IGVtcHR5Q29tcG9uZW50cyA9IHt9XG5cbmNvbnN0IE1EWENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KGVtcHR5Q29tcG9uZW50cylcblxuLyoqXG4gKiBHZXQgY3VycmVudCBjb21wb25lbnRzIGZyb20gdGhlIE1EWCBDb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz4gfCBNZXJnZUNvbXBvbmVudHMgfCBudWxsIHwgdW5kZWZpbmVkfSBbY29tcG9uZW50c11cbiAqICAgQWRkaXRpb25hbCBjb21wb25lbnRzIHRvIHVzZSBvciBhIGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyB0aGVtIChvcHRpb25hbCkuXG4gKiBAcmV0dXJucyB7TURYQ29tcG9uZW50c31cbiAqICAgQ3VycmVudCBjb21wb25lbnRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlTURYQ29tcG9uZW50cyhjb21wb25lbnRzKSB7XG4gIGNvbnN0IGNvbnRleHRDb21wb25lbnRzID0gUmVhY3QudXNlQ29udGV4dChNRFhDb250ZXh0KVxuXG4gIC8vIE1lbW9pemUgdG8gYXZvaWQgdW5uZWNlc3NhcnkgdG9wLWxldmVsIGNvbnRleHQgY2hhbmdlc1xuICByZXR1cm4gUmVhY3QudXNlTWVtbyhcbiAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBDdXN0b20gbWVyZ2UgdmlhIGEgZnVuY3Rpb24gcHJvcFxuICAgICAgaWYgKHR5cGVvZiBjb21wb25lbnRzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBjb21wb25lbnRzKGNvbnRleHRDb21wb25lbnRzKVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gey4uLmNvbnRleHRDb21wb25lbnRzLCAuLi5jb21wb25lbnRzfVxuICAgIH0sXG4gICAgW2NvbnRleHRDb21wb25lbnRzLCBjb21wb25lbnRzXVxuICApXG59XG5cbi8qKlxuICogUHJvdmlkZXIgZm9yIE1EWCBjb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8UHJvcHM+fSBwcm9wZXJ0aWVzXG4gKiAgIFByb3BlcnRpZXMuXG4gKiBAcmV0dXJucyB7UmVhY3RFbGVtZW50fVxuICogICBFbGVtZW50LlxuICogQHNhdGlzZmllcyB7Q29tcG9uZW50fVxuICovXG5leHBvcnQgZnVuY3Rpb24gTURYUHJvdmlkZXIocHJvcGVydGllcykge1xuICAvKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuICBsZXQgYWxsQ29tcG9uZW50c1xuXG4gIGlmIChwcm9wZXJ0aWVzLmRpc2FibGVQYXJlbnRDb250ZXh0KSB7XG4gICAgYWxsQ29tcG9uZW50cyA9XG4gICAgICB0eXBlb2YgcHJvcGVydGllcy5jb21wb25lbnRzID09PSAnZnVuY3Rpb24nXG4gICAgICAgID8gcHJvcGVydGllcy5jb21wb25lbnRzKGVtcHR5Q29tcG9uZW50cylcbiAgICAgICAgOiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgfHwgZW1wdHlDb21wb25lbnRzXG4gIH0gZWxzZSB7XG4gICAgYWxsQ29tcG9uZW50cyA9IHVzZU1EWENvbXBvbmVudHMocHJvcGVydGllcy5jb21wb25lbnRzKVxuICB9XG5cbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgTURYQ29udGV4dC5Qcm92aWRlcixcbiAgICB7dmFsdWU6IGFsbENvbXBvbmVudHN9LFxuICAgIHByb3BlcnRpZXMuY2hpbGRyZW5cbiAgKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ })

}]);