"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkrabbitmq_website"] = globalThis["webpackChunkrabbitmq_website"] || []).push([["content---rabbitmq-website-blog-2024-08-21-amqp-benchmarksf-44-5cf"],{

/***/ "./.docusaurus/docusaurus-plugin-content-blog/default/site-blog-2024-08-21-amqp-benchmarks-index-md-f44.json":
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"permalink":"/rabbitmq-website/blog/2024/08/21/amqp-benchmarks","editUrl":"https://github.com/rabbitmq/rabbitmq-website/tree/main/blog/2024-08-21-amqp-benchmarks/index.md","source":"@site/blog/2024-08-21-amqp-benchmarks/index.md","title":"AMQP 1.0 Benchmarks","description":"This blog post demonstrates that native AMQP 1.0 in RabbitMQ 4.0 provides significant performance and scalability improvements compared to AMQP 1.0 in RabbitMQ 3.13.","date":"2024-08-21T00:00:00.000Z","tags":[{"inline":true,"label":"AMQP 1.0","permalink":"/rabbitmq-website/blog/tags/amqp-1-0"},{"inline":true,"label":"RabbitMQ 4.0","permalink":"/rabbitmq-website/blog/tags/rabbit-mq-4-0"},{"inline":true,"label":"Performance","permalink":"/rabbitmq-website/blog/tags/performance"}],"readingTime":16.905,"hasTruncateMarker":true,"authors":[{"name":"David Ansari","url":"https://github.com/ansd","socials":{"github":"https://github.com/ansd","linkedin":"https://www.linkedin.com/in/ansd/","mastodon":"https://m.ansd.xyz/@ansd","bluesky":"https://bsky.app/profile/ansd.xyz"},"imageURL":"https://github.com/ansd.png","key":"dansari","page":null}],"frontMatter":{"title":"AMQP 1.0 Benchmarks","tags":["AMQP 1.0","RabbitMQ 4.0","Performance"],"authors":["dansari"],"image":"./throughput-classic-queue.svg"},"unlisted":false,"prevItem":{"title":"RabbitMQ 4.0: New Quorum Queue Features","permalink":"/rabbitmq-website/blog/2024/08/28/quorum-queues-in-4.0"},"nextItem":{"title":"Package Repository Updates","permalink":"/rabbitmq-website/blog/2024/08/11/package-repository-updates"}}');

/***/ }),

/***/ "./blog/2024-08-21-amqp-benchmarks/index.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assets: () => (/* binding */ assets),\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   metadata: () => (/* reexport default export from named module */ _site_docusaurus_docusaurus_plugin_content_blog_default_site_blog_2024_08_21_amqp_benchmarks_index_md_f44_json__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var _site_docusaurus_docusaurus_plugin_content_blog_default_site_blog_2024_08_21_amqp_benchmarks_index_md_f44_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.docusaurus/docusaurus-plugin-content-blog/default/site-blog-2024-08-21-amqp-benchmarks-index-md-f44.json\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n\n\nconst frontMatter = {\n\ttitle: 'AMQP 1.0 Benchmarks',\n\ttags: [\n\t\t'AMQP 1.0',\n\t\t'RabbitMQ 4.0',\n\t\t'Performance'\n\t],\n\tauthors: [\n\t\t'dansari'\n\t],\n\timage: './throughput-classic-queue.svg'\n};\nconst contentTitle = undefined;\n\nconst assets = {\n\"image\": (__webpack_require__(\"./node_modules/file-loader/dist/cjs.js?name=assets/images/[name]-[contenthash].[ext]!./blog/2024-08-21-amqp-benchmarks/throughput-classic-queue.svg\")[\"default\"]),\n\"authorsImageUrls\": [undefined],\n};\n\n\n\nconst toc = [{\n  \"value\": \"Classic Queues\",\n  \"id\": \"classic-queues\",\n  \"level\": 2\n}, {\n  \"value\": \"AMQP 1.0 in 4.0\",\n  \"id\": \"amqp-10-in-40\",\n  \"level\": 3\n}, {\n  \"value\": \"AMQP 1.0 in 3.13\",\n  \"id\": \"amqp-10-in-313\",\n  \"level\": 3\n}, {\n  \"value\": \"AMQP 0.9.1 in 4.0\",\n  \"id\": \"amqp-091-in-40\",\n  \"level\": 3\n}, {\n  \"value\": \"Summary\",\n  \"id\": \"summary-classic-queues\",\n  \"level\": 3\n}, {\n  \"value\": \"Quorum Queues\",\n  \"id\": \"quorum-queues\",\n  \"level\": 2\n}, {\n  \"value\": \"Flow Control Configuration\",\n  \"id\": \"flow-control-configuration\",\n  \"level\": 4\n}, {\n  \"value\": \"AMQP 1.0 in 4.0\",\n  \"id\": \"amqp-10-in-40-1\",\n  \"level\": 3\n}, {\n  \"value\": \"AMQP 1.0 in 3.13\",\n  \"id\": \"amqp-10-in-313-1\",\n  \"level\": 3\n}, {\n  \"value\": \"AMQP 0.9.1 in 4.0\",\n  \"id\": \"amqp-091-in-40-1\",\n  \"level\": 3\n}, {\n  \"value\": \"Summary\",\n  \"id\": \"summary-quorum-queues\",\n  \"level\": 3\n}, {\n  \"value\": \"Streams\",\n  \"id\": \"streams\",\n  \"level\": 2\n}, {\n  \"value\": \"AMQP 1.0 in 4.0\",\n  \"id\": \"amqp-10-in-40-2\",\n  \"level\": 3\n}, {\n  \"value\": \"AMQP 1.0 in 3.13\",\n  \"id\": \"amqp-10-in-313-2\",\n  \"level\": 3\n}, {\n  \"value\": \"AMQP 0.9.1 in 4.0\",\n  \"id\": \"amqp-091-in-40-2\",\n  \"level\": 3\n}, {\n  \"value\": \"Summary\",\n  \"id\": \"summary-streams\",\n  \"level\": 3\n}, {\n  \"value\": \"Many Connections\",\n  \"id\": \"many-connections\",\n  \"level\": 2\n}, {\n  \"value\": \"AMQP 1.0 in 4.0\",\n  \"id\": \"amqp-10-in-40-3\",\n  \"level\": 3\n}, {\n  \"value\": \"AMQP 1.0 in 3.13\",\n  \"id\": \"amqp-10-in-313-3\",\n  \"level\": 3\n}, {\n  \"value\": \"AMQP 0.9.1 in 4.0\",\n  \"id\": \"amqp-091-in-40-3\",\n  \"level\": 3\n}, {\n  \"value\": \"Summary\",\n  \"id\": \"summary-many-connections\",\n  \"level\": 3\n}, {\n  \"value\": \"Conclusion\",\n  \"id\": \"conclusion\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    figcaption: \"figcaption\",\n    figure: \"figure\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    img: \"img\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  }, {Details} = _components;\n  if (!Details) _missingMdxReference(\"Details\", true);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This blog post demonstrates that \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/blog/2024/08/05/native-amqp\",\n        children: \"native AMQP 1.0\"\n      }), \" in RabbitMQ 4.0 provides significant performance and scalability improvements compared to AMQP 1.0 in RabbitMQ 3.13.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Additionally, this blog post suggests that AMQP 1.0 can perform slightly better than AMQP 0.9.1 in RabbitMQ 4.0.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(Details, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"summary\", {\n        children: \"Setup\"\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: \"The following setup applies to all benchmarks in this blog post:\"\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n        children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n          children: \"Intel NUC 11\"\n        }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n          children: \"8 CPU cores\"\n        }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n          children: \"32 GB RAM\"\n        }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n          children: \"Ubuntu 22.04\"\n        }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n          children: \"Single node RabbitMQ server\"\n        }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n          children: [\"Server runs with (only) 3 scheduler threads (set via \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n            href: \"https://www.erlang.org/doc/apps/erts/erl_cmd.html#emulator-flags\",\n            children: \"runtime flags\"\n          }), \" as \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            children: \"+S 3\"\n          }), \")\"]\n        }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n          children: \"Erlang/OTP 27.0.1\"\n        }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n          children: \"Clients and server run on the same box\"\n        }), \"\\n\"]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: \"We use the latest RabbitMQ versions at the time of writing:\"\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n        children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n            href: \"https://github.com/rabbitmq/rabbitmq-server/releases/tag/v4.0.0-beta.5\",\n            children: \"v4.0.0-beta.5\"\n          })\n        }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n            href: \"https://github.com/rabbitmq/rabbitmq-server/releases/tag/v3.13.6\",\n            children: \"v3.13.6\"\n          })\n        }), \"\\n\"]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n        children: [\"The following \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"/docs/configure#advanced-config-file\",\n          children: \"advanced.config\"\n        }), \" is applied:\"]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          className: \"language-erl\",\n          children: \"[\\r\\n {rabbit, [\\r\\n  {loopback_users, []}\\r\\n ]},\\r\\n\\r\\n {rabbitmq_management_agent, [\\r\\n  {disable_metrics_collector, true}\\r\\n ]}\\r\\n].\\n\"\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n        children: [\"Metrics collection is disabled in the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"rabbitmq_management_agent\"\n        }), \" plugin.\\r\\nFor \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"https://www.rabbitmq.com/docs/production-checklist\",\n          children: \"production environments\"\n        }), \", \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"https://www.rabbitmq.com/docs/prometheus\",\n          children: \"Prometheus\"\n        }), \" is the recommended option.\"]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: \"RabbitMQ server is started as follows:\"\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          className: \"language-bash\",\n          children: \"make run-broker \\\\\\r\\n    TEST_TMPDIR=\\\"$HOME/scratch/rabbit/test\\\" \\\\\\r\\n    RABBITMQ_CONFIG_FILE=\\\"$HOME/scratch/rabbit/advanced.config\\\" \\\\\\r\\n    PLUGINS=\\\"rabbitmq_prometheus rabbitmq_management rabbitmq_amqp1_0\\\" \\\\\\r\\n    RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=\\\"+S 3\\\"\\n\"\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n        children: [\"The \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"rabbitmq_amqp1_0\"\n        }), \" plugin is a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"https://github.com/rabbitmq/rabbitmq-server/blob/v4.0.0-beta.5/deps/rabbitmq_amqp1_0/README.md\",\n          children: \"no-op plugin\"\n        }), \" in RabbitMQ 4.0.\"]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n        children: [\"The AMQP 1.0 benchmarks run \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"https://github.com/ssorj/quiver\",\n          children: \"quiver\"\n        }), \" in a Docker container:\"]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"$ docker run -it --rm --add-host host.docker.internal:host-gateway ssorj/quiver:latest\\r\\nbash-5.1# quiver --version\\r\\nquiver 0.4.0-SNAPSHOT\\n\"\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"classic-queues\",\n      children: \"Classic Queues\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This section benchmarks \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/classic-queues\",\n        children: \"classic queues\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"We declare a classic queue called \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"my-classic-queue\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"deps/rabbitmq_management/bin/rabbitmqadmin declare queue \\\\\\r\\n    name=my-classic-queue queue_type=classic durable=true\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"amqp-10-in-40\",\n      children: \"AMQP 1.0 in 4.0\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The client sends and receives 1 million messages.\\r\\nEach message contains a payload of 12 bytes.\\r\\nThe receiver repeatedly tops up 200 \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-transport-v1.0-os.html#doc-flow-control\",\n        children: \"link credits\"\n      }), \" at a time.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"# quiver //host.docker.internal//queues/my-classic-queue \\\\\\r\\n    --durable --count 1m --duration 10m --body-size 12 --credit 200\\r\\n\\r\\nRESULTS\\r\\n\\r\\nCount ............................................. 1,000,000 messages\\r\\nDuration ............................................... 10.1 seconds\\r\\nSender rate .......................................... 99,413 messages/s\\r\\nReceiver rate ........................................ 99,423 messages/s\\r\\nEnd-to-end rate ...................................... 99,413 messages/s\\r\\n\\r\\nLatencies by percentile:\\r\\n\\r\\n          0% ........ 0 ms       90.00% ........ 1 ms\\r\\n         25% ........ 1 ms       99.00% ........ 2 ms\\r\\n         50% ........ 1 ms       99.90% ........ 2 ms\\r\\n        100% ........ 9 ms       99.99% ........ 9 ms\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"amqp-10-in-313\",\n      children: \"AMQP 1.0 in 3.13\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"# quiver //host.docker.internal//amq/queue/my-classic-queue \\\\\\r\\n    --durable --count 1m --duration 10m --body-size 12 --credit 200\\r\\n\\r\\nRESULTS\\r\\n\\r\\nCount ............................................. 1,000,000 messages\\r\\nDuration ............................................... 45.9 seconds\\r\\nSender rate .......................................... 43,264 messages/s\\r\\nReceiver rate ........................................ 21,822 messages/s\\r\\nEnd-to-end rate ...................................... 21,790 messages/s\\r\\n\\r\\nLatencies by percentile:\\r\\n\\r\\n          0% ....... 67 ms       90.00% .... 24445 ms\\r\\n         25% .... 23056 ms       99.00% .... 24780 ms\\r\\n         50% .... 23433 ms       99.90% .... 24869 ms\\r\\n        100% .... 24873 ms       99.99% .... 24873 ms\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The same benchmark against RabbitMQ 3.13 results in 4.5 times lower throughput.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(Details, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"summary\", {\n        children: \"Detailed test execution\"\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"---------------------- Sender -----------------------  --------------------- Receiver ----------------------  --------\\r\\nTime [s]      Count [m]  Rate [m/s]  CPU [%]  RSS [M]  Time [s]      Count [m]  Rate [m/s]  CPU [%]  RSS [M]  Lat [ms]\\r\\n-----------------------------------------------------  -----------------------------------------------------  --------\\r\\n     2.1        130,814      65,342        8     79.1       2.1          3,509       1,753        1      7.5       777\\r\\n     4.1        206,588      37,849        6     79.1       4.1          5,995       1,242        0      7.5     2,458\\r\\n     6.1        294,650      43,987        6     79.1       6.1          9,505       1,753        1      7.5     5,066\\r\\n     8.1        360,184      32,734        5     79.4       8.1         13,893       2,194        0      7.5     6,190\\r\\n    10.1        458,486      49,102        6     79.4      10.1         15,793         950        1      7.5     9,259\\r\\n    12.1        524,020      32,734        5     79.4      12.1         21,644       2,923        1      7.5    11,163\\r\\n    14.1        622,322      49,102        5     79.4      14.1         25,154       1,753        1      7.5    13,451\\r\\n    16.1        687,856      32,734        4     79.4      16.1         27,639       1,241        1      7.5    15,246\\r\\n    18.1        786,158      49,102        6     81.0      18.1         30,124       1,241        1      7.5    17,649\\r\\n    20.1        884,460      49,102        6     81.0      20.1         32,610       1,242        1      7.5    19,408\\r\\n    22.1        949,994      32,734        4     81.0      22.1         35,535       1,462        0      7.5    21,293\\r\\n    24.1        999,912      24,934        4     81.8      24.1         38,167       1,315        1      7.5    23,321\\r\\n    26.1        999,974          31        2      0.0      26.1        117,745      39,749       11      7.5    24,475\\r\\n       -              -           -        -        -      28.1        202,589      42,380       11      7.5    24,364\\r\\n       -              -           -        -        -      30.1        292,554      44,938       13      7.5    24,244\\r\\n       -              -           -        -        -      32.1        377,691      42,526       15      7.5    23,955\\r\\n       -              -           -        -        -      34.1        469,704      45,961       14      7.5    23,660\\r\\n       -              -           -        -        -      36.1        555,719      42,965       12      7.5    23,463\\r\\n       -              -           -        -        -      38.1        649,048      46,618       12      7.5    23,264\\r\\n       -              -           -        -        -      40.1        737,696      44,280       15      7.5    23,140\\r\\n       -              -           -        -        -      42.1        826,491      44,353       15      7.5    23,100\\r\\n       -              -           -        -        -      44.1        917,187      45,303       16      7.5    23,066\\r\\n       -              -           -        -        -      46.1        999,974      41,394       14      0.0    22,781\\n\"\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"amqp-091-in-40\",\n      children: \"AMQP 0.9.1 in 4.0\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"For our AMQP 0.9.1 benchmarks we use \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://perftest.rabbitmq.com/\",\n        children: \"PerfTest\"\n      }), \".\\r\\nWe try to run a somewhat fair comparison of our previous AMQP 1.0 benchmark.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Since an AMQP 1.0 \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.a, {\n        href: \"/docs/amqp#target-address-v2\",\n        children: [\"/queues/\", \":queue\"]\n      }), \" target address sends to the default exchange, we also send to the default exchange via AMQP 0.9.1.\\r\\nSince we used \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#type-header\",\n        children: \"durable\"\n      }), \" messages with AMQP 1.0, we set the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"persistent\"\n      }), \" flag in AMQP 0.9.1.\\r\\nSince RabbitMQ settles with the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#type-released\",\n        children: \"released\"\n      }), \" outcome when a message cannot be routed, we set the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"mandatory\"\n      }), \" flag in AMQP 0.9.1.\\r\\nSince RabbitMQ \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"v4.0.0-beta.5\"\n      }), \" uses a default \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbit.max_link_credit\"\n      }), \" of 128 granting 128 more credits to the sending client when remaining credit falls below 0.5 * 128, we configure the AMQP 0.9.1 publisher to have at most 1.5 * 128 = 192 messages unconfirmed at a time.\\r\\nSince we used 200 link credits in the previous run, we configure the AMQP 0.9.1 consumer with a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/consumer-prefetch\",\n        children: \"prefetch\"\n      }), \" of 200.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"$ java -jar target/perf-test.jar \\\\\\r\\n    --predeclared --exchange amq.default \\\\\\r\\n    --routing-key my-classic-queue --queue my-classic-queue \\\\\\r\\n    --flag persistent --flag mandatory \\\\\\r\\n    --pmessages 1000000 --size 12 --confirm 192 --qos 200 --multi-ack-every 200\\r\\n\\r\\nid: test-151706-485, sending rate avg: 88534 msg/s\\r\\nid: test-151706-485, receiving rate avg: 88534 msg/s\\r\\nid: test-151706-485, consumer latency min/median/75th/95th/99th 99/975/1320/1900/2799 µs\\r\\nid: test-151706-485, confirm latency min/median/75th/95th/99th 193/1691/2113/2887/3358 µs\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"summary-classic-queues\",\n      children: \"Summary\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.figure, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n          alt: \"Figure 1: Classic queue end-to-end message rate\",\n          src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2024-08-21-amqp-benchmarks/throughput-classic-queue.svg\")[\"default\"]) + \"\",\n          width: \"600\",\n          height: \"371\"\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.figcaption, {\n          children: \"Figure 1: Classic queue end-to-end message rate\"\n        })]\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"quorum-queues\",\n      children: \"Quorum Queues\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This section benchmarks \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/quorum-queues\",\n        children: \"quorum queues\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"We declare a quorum queue called \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"my-quorum-queue\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"deps/rabbitmq_management/bin/rabbitmqadmin declare queue \\\\\\r\\n    name=my-quorum-queue queue_type=quorum durable=true\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4, {\n      id: \"flow-control-configuration\",\n      children: \"Flow Control Configuration\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"For highest data safety, quorum queues \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://man7.org/linux/man-pages/man2/fsync.2.html\",\n        children: \"fsync\"\n      }), \" all \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/ra\",\n        children: \"Ra\"\n      }), \" commands including:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"https://github.com/rabbitmq/rabbitmq-server/blob/v4.0.0-beta.5/deps/rabbit/src/rabbit_fifo.erl#L144\",\n          children: \"enqueue\"\n        }), \": sender enqueues a message\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"https://github.com/rabbitmq/rabbitmq-server/blob/v4.0.0-beta.5/deps/rabbit/src/rabbit_fifo.erl#L149\",\n          children: \"settle\"\n        }), \": receiver accepts a message\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"https://github.com/rabbitmq/rabbitmq-server/blob/v4.0.0-beta.5/deps/rabbit/src/rabbit_fifo.erl#L152\",\n          children: \"credit\"\n        }), \": receiver tops up link credit\"]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Before a quorum queue confirms receipt of a message to the publisher, it ensures that any file modifications are flushed to disk, making the data safe even if the RabbitMQ node crashes shortly after.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The SSD of my Linux box is slow, taking 5-15 ms per fsync.\\r\\nSince we want to compare AMQP protocol implementations without being bottlenecked by a cheap disk, the tests in this section increase flow control settings:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(Details, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"summary\", {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"advanced.config\"\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"[\\r\\n {rabbit, [\\r\\n  {loopback_users, []},\\r\\n\\r\\n  %% RabbitMQ internal flow control for AMQP 0.9.1\\r\\n  %% Default: {400, 200}\\r\\n  {credit_flow_default_credit, {5000, 2500}},\\r\\n\\r\\n  %% Maximum incoming-window of AMQP 1.0 session.\\r\\n  %% Default: 400\\r\\n  {max_incoming_window, 5000},\\r\\n\\r\\n  %% Maximum link-credit RabbitMQ grants to AMQP 1.0 sender.\\r\\n  %% Default: 128\\r\\n  {max_link_credit, 2000},\\r\\n\\r\\n  %% Maximum link-credit RabbitMQ AMQP 1.0 session grants to sending queue.\\r\\n  %% Default: 256\\r\\n  {max_queue_credit, 5000}\\r\\n ]},\\r\\n\\r\\n {rabbitmq_management_agent, [\\r\\n  {disable_metrics_collector, true}\\r\\n ]}\\r\\n].\\n\"\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This configuration allows more Ra commands to be batched before RabbitMQ calls fsync.\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {\n        children: \"For production use cases, we recommend enterprise-grade high performance disks that fsync faster\"\n      }), \", in which case there is likely no need to increase flow control settings.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"RabbitMQ flow control settings present a trade-off:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Low values ensure stability in production.\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"High values can result in higher performance for individual connections but may lead to higher memory spikes when many connections publish large messages concurrently.\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"RabbitMQ uses conservative flow control default settings to favour stability in production over winning performance benchmarks.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"amqp-10-in-40-1\",\n      children: \"AMQP 1.0 in 4.0\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"# quiver //host.docker.internal//queues/my-quorum-queue \\\\\\r\\n    --durable --count 1m --duration 10m --body-size 12 --credit 5000\\r\\n\\r\\nRESULTS\\r\\n\\r\\nCount ............................................. 1,000,000 messages\\r\\nDuration ............................................... 12.0 seconds\\r\\nSender rate .......................................... 83,459 messages/s\\r\\nReceiver rate ........................................ 83,396 messages/s\\r\\nEnd-to-end rate ...................................... 83,181 messages/s\\r\\n\\r\\nLatencies by percentile:\\r\\n\\r\\n          0% ........ 9 ms       90.00% ....... 47 ms\\r\\n         25% ....... 27 ms       99.00% ....... 61 ms\\r\\n         50% ....... 35 ms       99.90% ....... 76 ms\\r\\n        100% ....... 81 ms       99.99% ....... 81 ms\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(Details, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"summary\", {\n        children: \"Default Flow Control Settings\"\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n        children: [\"The previous benchmark calls fsync 1,244 times in the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"https://github.com/rabbitmq/ra/blob/e95ab7b9df1f8f4ffec8535d60185b3bc33a09bc/src/ra_log_wal.erl#L770\",\n          children: \"ra_log_wal\"\n        }), \" module (that implements the Raft write-ahead log).\"]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: \"The same benchmark with default flow control settings calls fsync 15,493 times resulting in significantly lower throughput:\"\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"# quiver //host.docker.internal//queues/my-quorum-queue \\\\\\r\\n    --durable --count 1m --duration 10m --body-size 12 --credit 5000\\r\\n\\r\\nRESULTS\\r\\n\\r\\nCount ............................................. 1,000,000 messages\\r\\nDuration .............................................. 100.2 seconds\\r\\nSender rate ........................................... 9,986 messages/s\\r\\nReceiver rate ......................................... 9,987 messages/s\\r\\nEnd-to-end rate ....................................... 9,983 messages/s\\r\\n\\r\\nLatencies by percentile:\\r\\n\\r\\n          0% ....... 10 ms       90.00% ....... 24 ms\\r\\n         25% ....... 14 ms       99.00% ....... 30 ms\\r\\n         50% ....... 18 ms       99.90% ....... 38 ms\\r\\n        100% ....... 55 ms       99.99% ....... 47 ms\\n\"\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: \"Each fsync took 5.9 ms on average.\"\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"(15,493 - 1,244) * 5.9 ms = 84 seconds\\n\"\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n        children: [\"Therefore, this benchmark with default flow control settings is blocked for 84 seconds longer executing \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"fsync\"\n        }), \" than the previous benchmark with increased flow control settings.\\r\\nThis shows how critical enterprise-grade high performance disks are to get the best results out of quorum queues.\\r\\nFor your production workloads, we recommend using disks with lower \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"fsync\"\n        }), \" latency rather than tweaking\\r\\nRabbitMQ flow control settings.\"]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n        children: [\"It's worth noting that the Raft WAL log is shared by all quorum queue replicas on a given RabbitMQ node.\\r\\nThis means that \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"ra_log_wal\"\n        }), \" will automatically batch multiple Raft commands (operations) into a single \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"fsync\"\n        }), \"\\r\\ncall when there are dozens of quorum queues with hundreds of connections.\\r\\nConsequently, flushing an individual Ra command to disk becomes cheaper on average when there is more traffic on the node.\\r\\nOur benchmark ran somewhat artificially with a single connection as fast as possible.\"]\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"amqp-10-in-313-1\",\n      children: \"AMQP 1.0 in 3.13\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"# quiver //host.docker.internal//amq/queue/my-quorum-queue \\\\\\r\\n    --durable --count 1m --duration 10m --body-size 12 --credit 5000\\r\\n\\r\\n---------------------- Sender -----------------------  --------------------- Receiver ----------------------  --------\\r\\nTime [s]      Count [m]  Rate [m/s]  CPU [%]  RSS [M]  Time [s]      Count [m]  Rate [m/s]  CPU [%]  RSS [M]  Lat [ms]\\r\\n-----------------------------------------------------  -----------------------------------------------------  --------\\r\\n     2.1        163,582      81,709       11     84.2       2.1         29,548      14,759        3      7.5       840\\r\\n     4.1        336,380      86,356       12    185.3       4.1         29,840         146        0      7.5     2,331\\r\\n     6.1        524,026      93,729       14    328.0       6.1         29,840           0        0      7.5         0\\r\\n     8.1        687,864      81,837       11    462.3       8.1         31,302         730        1      7.5     6,780\\r\\n    10.1        884,470      98,303       14    605.4      10.1         31,447          72        0      7.5     7,897\\r\\n    12.1        999,924      57,669        7    687.5      12.1         31,447           0        0      7.5         0\\r\\n    14.1        999,924           0        0    687.5      14.1         31,447           0        0      7.5         0\\r\\n    16.1        999,924           0        0    687.5      16.1         31,447           0        1      7.5         0\\r\\n    18.1        999,924           0        1    688.3      18.1         31,447           0        0      7.5         0\\r\\nreceiver timed out\\r\\n    20.1        999,924           0        0    688.3      20.1         31,447           0        0      7.5         0\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"RabbitMQ 3.13 cannot handle this workload and the benchmark fails.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(Details, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"summary\", {\n        children: \"Default Flow Control Settings\"\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: \"The benchmark also fails with default flow control settings:\"\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"# quiver //host.docker.internal//amq/queue/my-quorum-queue \\\\\\r\\n    --durable --count 1m --duration 10m --body-size 12 --credit 5000\\r\\n\\r\\n---------------------- Sender -----------------------  --------------------- Receiver ----------------------  --------\\r\\nTime [s]      Count [m]  Rate [m/s]  CPU [%]  RSS [M]  Time [s]      Count [m]  Rate [m/s]  CPU [%]  RSS [M]  Lat [ms]\\r\\n-----------------------------------------------------  -----------------------------------------------------  --------\\r\\n     2.1        130,814      65,342        9     70.0       2.1         26,915      13,437        6      7.5     1,213\\r\\n     4.1        196,348      32,718        5     70.2       4.1         28,084         584        0      7.5     3,093\\r\\n     6.1        261,882      32,734        7     70.2       6.1         30,131       1,022        1      7.5     4,952\\r\\n     8.1        360,184      49,126        6     70.2       8.1         32,325       1,096        0      7.5     6,637\\r\\n    10.1        425,718      32,734        6     70.2      10.1         34,225         949        1      7.5     8,089\\r\\n    12.1        491,252      32,734        5     70.2      12.1         34,225           0        0      7.5         0\\r\\n    14.1        589,554      49,102        7     70.2      14.1         34,225           0        0      7.5         0\\r\\n    16.1        655,088      32,734        5     70.2      16.1         34,225           0        0      7.5         0\\r\\n    18.1        720,622      32,734        6     70.2      18.1         34,225           0        0      7.5         0\\r\\nreceiver timed out\\n\"\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"amqp-091-in-40-1\",\n      children: \"AMQP 0.9.1 in 4.0\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Since we set \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"max_link_credit\"\n      }), \" to 2,000, we allow for a maximum of 2,000 * 1.5 = 3,000 unconfirmed messages in the publisher.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"$ java -jar target/perf-test.jar \\\\\\r\\n    --predeclared --exchange amq.default \\\\\\r\\n    --routing-key my-quorum-queue --queue my-quorum-queue \\\\\\r\\n    --flag persistent --flag mandatory \\\\\\r\\n    --pmessages 1000000 --size 12 --confirm 3000 --qos 5000 --multi-ack-every 5000\\r\\n\\r\\nid: test-085526-136, sending rate avg: 70067 msg/s\\r\\nid: test-085526-136, receiving rate avg: 70067 msg/s\\r\\nid: test-085526-136, consumer latency min/median/75th/95th/99th 8803/33127/40424/53407/62883 µs\\r\\nid: test-085526-136, confirm latency min/median/75th/95th/99th 8551/30323/38317/52103/63131 µs\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(Details, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"summary\", {\n        children: \"Default Flow Control Settings\"\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"$ java -jar target/perf-test.jar \\\\\\r\\n    --predeclared --exchange amq.default \\\\\\r\\n    --routing-key my-quorum-queue --queue my-quorum-queue \\\\\\r\\n    --flag persistent --flag mandatory \\\\\\r\\n    --pmessages 1000000 --size 12 --confirm 192 --qos 5000 --multi-ack-every 5000\\r\\n\\r\\nid: test-084359-441, sending rate avg: 9931 msg/s\\r\\nid: test-084359-441, receiving rate avg: 9931 msg/s\\r\\nid: test-084359-441, consumer latency min/median/75th/95th/99th 7512/17054/26256/34249/38641 µs\\r\\nid: test-084359-441, confirm latency min/median/75th/95th/99th 9432/16586/23918/32636/36858 µs\\n\"\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: \"These results are similar to the results of the default flow control settings in AMQP 1.0 in 4.0 because both benchmarks are bottlenecked by my slow disk.\"\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"summary-quorum-queues\",\n      children: \"Summary\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.figure, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n          alt: \"Figure 2: Quorum queue end-to-end message rate\",\n          src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2024-08-21-amqp-benchmarks/throughput-quorum-queue.svg\")[\"default\"]) + \"\",\n          width: \"600\",\n          height: \"371\"\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.figcaption, {\n          children: \"Figure 2: Quorum queue end-to-end message rate\"\n        })]\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"streams\",\n      children: \"Streams\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This sections benchmarks \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/docs/streams\",\n        children: \"streams\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"We declare a stream called \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"my-stream\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"deps/rabbitmq_management/bin/rabbitmqadmin declare queue \\\\\\r\\n    name=my-stream queue_type=stream durable=true\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"(We run with default RabbitMQ flow control settings.)\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"We want the receiver to start consuming from the very beginning of the stream.\\r\\nQuiver doesn't support passing a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"filter\"\n      }), \" field to the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#type-source\",\n        children: \"source\"\n      }), \" where we could specify a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmq:stream-offset-spec\"\n      }), \" value \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"first\"\n      }), \".\\r\\nTherefore, for this benchmark it's easier to patch RabbitMQ to use stream offset spec \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"first\"\n      }), \" by default instead of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"next\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(Details, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"summary\", {\n        children: \"git diff\"\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"diff --git a/deps/rabbit/src/rabbit_stream_queue.erl b/deps/rabbit/src/rabbit_stream_queue.erl\\r\\nindex e36ad708eb..acd193d76f 100644\\r\\n--- a/deps/rabbit/src/rabbit_stream_queue.erl\\r\\n+++ b/deps/rabbit/src/rabbit_stream_queue.erl\\r\\n@@ -344,7 +344,7 @@ consume(Q, Spec, #stream_client{} = QState0)\\r\\n                        {term(), non_neg_integer()}) ->\\r\\n     {ok, osiris:offset_spec()} | {error, term()}.\\r\\n parse_offset_arg(undefined) ->\\r\\n-    {ok, next};\\r\\n+    {ok, first};\\r\\n parse_offset_arg({_, <<\\\"first\\\">>}) ->\\r\\n     {ok, first};\\r\\n parse_offset_arg({_, <<\\\"last\\\">>}) ->\\n\"\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"amqp-10-in-40-2\",\n      children: \"AMQP 1.0 in 4.0\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"# quiver //host.docker.internal//queues/my-stream \\\\\\r\\n    --durable --count 1m --duration 10m --body-size 12 --credit 5000\\r\\n---------------------- Sender -----------------------  --------------------- Receiver ----------------------  --------\\r\\nTime [s]      Count [m]  Rate [m/s]  CPU [%]  RSS [M]  Time [s]      Count [m]  Rate [m/s]  CPU [%]  RSS [M]  Lat [ms]\\r\\n-----------------------------------------------------  -----------------------------------------------------  --------\\r\\n     2.1        278,782     139,321       25      8.0       2.1        215,185     107,539       22      7.6       224\\r\\n     4.1        554,492     137,717       25      8.0       4.1        434,027     109,312       24      7.6       651\\r\\n     6.1        825,082     135,160       25      8.0       6.1        650,236     107,997       26      7.6     1,079\\r\\n     8.1        999,992      87,368       17      0.0       8.1        888,973     119,249       29      7.6     1,469\\r\\n       -              -           -        -        -      10.1        999,993      55,455       13      0.0     1,583\\r\\n\\r\\nRESULTS\\r\\n\\r\\nCount ............................................. 1,000,000 messages\\r\\nDuration ................................................ 8.9 seconds\\r\\nSender rate ......................................... 136,705 messages/s\\r\\nReceiver rate ....................................... 112,587 messages/s\\r\\nEnd-to-end rate ..................................... 112,196 messages/s\\r\\n\\r\\nLatencies by percentile:\\r\\n\\r\\n          0% ........ 7 ms       90.00% ..... 1553 ms\\r\\n         25% ...... 519 ms       99.00% ..... 1612 ms\\r\\n         50% ..... 1011 ms       99.90% ..... 1615 ms\\r\\n        100% ..... 1616 ms       99.99% ..... 1616 ms\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"It is easy to observe a substantially higher throughput.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Note that end-to-end latencies are very high just because the sender can write into the stream at a higher rate than RabbitMQ being able\\r\\nto dispatch messages to the consumer (\\\"receiver\\\" in \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"quiver\"\n      }), \" terms).\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"amqp-10-in-313-2\",\n      children: \"AMQP 1.0 in 3.13\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"# quiver //host.docker.internal//amq/queue/my-stream \\\\\\r\\n    --durable --count 1m --duration 10m --body-size 12 --credit 5000\\r\\n\\r\\n---------------------- Sender -----------------------  --------------------- Receiver ----------------------  --------\\r\\nTime [s]      Count [m]  Rate [m/s]  CPU [%]  RSS [M]  Time [s]      Count [m]  Rate [m/s]  CPU [%]  RSS [M]  Lat [ms]\\r\\n-----------------------------------------------------  -----------------------------------------------------  --------\\r\\n     2.1        196,350      98,077       12     70.1       2.1          4,094       2,045        0      7.7       195\\r\\n     4.1        392,956      98,205       13    138.5       4.1          4,094           0        0      7.7         0\\r\\n     6.1        524,026      65,470       10    196.5       6.1          4,094           0        0      7.7         0\\r\\n     8.1        655,096      65,470       11    259.4       8.1          4,094           0        0      7.7         0\\r\\n    10.1        786,166      65,470       10    307.5      10.1          4,094           0        0      7.7         0\\r\\nreceiver timed out\\r\\n    12.1        917,236      65,470        9    355.5      12.1          4,094           0        0      7.7         0\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"RabbitMQ 3.13 cannot handle this workload and the benchmark fails.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"amqp-091-in-40-2\",\n      children: \"AMQP 0.9.1 in 4.0\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"$ java -jar target/perf-test.jar \\\\\\r\\n    --predeclared --exchange amq.default \\\\\\r\\n    --routing-key my-stream --queue my-stream \\\\\\r\\n    --flag persistent --flag mandatory \\\\\\r\\n    --pmessages 1000000 --size 12 --confirm 192 --qos 5000 --multi-ack-every 5000\\r\\n\\r\\nid: test-104223-225, sending rate avg: 88912 msg/s\\r\\nid: test-104223-225, receiving rate avg: 88912 msg/s\\r\\nid: test-104223-225, consumer latency min/median/75th/95th/99th 701/1340/1523/2500/4524 µs\\r\\nid: test-104223-225, confirm latency min/median/75th/95th/99th 788/1983/2130/2437/2970 µs\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Since streams store messages in AMQP 1.0 format, this workload requires RabbitMQ to translate each message between AMQP 0.9.1 and AMQP 1.0.\\r\\nThis explains why stream throughput is lower when using AMQP 0.9.1 clients compared to AMQP 1.0 clients.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"summary-streams\",\n      children: \"Summary\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.figure, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n          alt: \"Figure 3: Stream end-to-end message rate\",\n          src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2024-08-21-amqp-benchmarks/throughput-stream.svg\")[\"default\"]) + \"\",\n          width: \"600\",\n          height: \"371\"\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.figcaption, {\n          children: \"Figure 3: Stream end-to-end message rate\"\n        })]\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"many-connections\",\n      children: \"Many Connections\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This section compares memory usage of connecting 40,000 clients with two AMQP 1.0 sessions / AMQP 0.9.1 channels per connection.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(Details, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"summary\", {\n        children: \"Setup\"\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          className: \"language-bash\",\n          children: \"make run-broker \\\\\\r\\n    TEST_TMPDIR=\\\"$HOME/scratch/rabbit/test\\\" \\\\\\r\\n    RABBITMQ_CONFIG_FILE=\\\"$HOME/scratch/rabbit/rabbitmq.conf\\\" \\\\\\r\\n    PLUGINS=\\\"rabbitmq_amqp1_0\\\" \\\\\\r\\n    RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=\\\"+P 3000000 +S 6\\\" \\\\\\r\\n    ERL_MAX_PORTS=3000000 \\n\"\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n        children: [\"In the following \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"rabbitmq.conf\"\n        }), \", we use small buffer sizes to better compare the memory usage of the protocol implementations.\"]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          className: \"language-ini\",\n          children: \"tcp_listen_options.sndbuf = 2048\\r\\ntcp_listen_options.recbuf = 2048\\r\\nvm_memory_high_watermark.relative = 0.95\\r\\nvm_memory_high_watermark_paging_ratio = 0.95\\r\\nloopback_users = none\\n\"\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(Details, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"summary\", {\n          children: \"AMQP 1.0\"\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-go\",\n            children: \"package main\\r\\n\\r\\nimport (\\r\\n\\t\\\"context\\\"\\r\\n\\t\\\"log\\\"\\r\\n\\t\\\"time\\\"\\r\\n\\r\\n\\t\\\"github.com/Azure/go-amqp\\\"\\r\\n)\\r\\n\\r\\nfunc main() {\\r\\n\\tfor i := 0; i < 40_000; i++ {\\r\\n\\t\\tif i%1000 == 0 {\\r\\n\\t\\t\\tlog.Printf(\\\"opened %d connections\\\", i)\\r\\n\\t\\t}\\r\\n\\t\\tconn, err := amqp.Dial(\\r\\n\\t\\t\\tcontext.TODO(),\\r\\n\\t\\t\\t\\\"amqp://localhost\\\",\\r\\n\\t\\t\\t&amqp.ConnOptions{SASLType: amqp.SASLTypeAnonymous()})\\r\\n\\t\\tif err != nil {\\r\\n\\t\\t\\tlog.Fatal(\\\"open connection:\\\", err)\\r\\n\\t\\t}\\r\\n\\t\\t_, err = conn.NewSession(context.TODO(), nil)\\r\\n\\t\\tif err != nil {\\r\\n\\t\\t\\tlog.Fatal(\\\"begin session:\\\", err)\\r\\n\\t\\t}\\r\\n\\t\\t_, err = conn.NewSession(context.TODO(), nil)\\r\\n\\t\\tif err != nil {\\r\\n\\t\\t\\tlog.Fatal(\\\"begin session:\\\", err)\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tlog.Println(\\\"opened all connections\\\")\\r\\n\\ttime.Sleep(5 * time.Hour)\\r\\n}\\n\"\n          })\n        })]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(Details, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"summary\", {\n          children: \"AMQP 0.9.1\"\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-go\",\n            children: \"package main\\r\\n\\r\\nimport (\\r\\n\\t\\\"log\\\"\\r\\n\\t\\\"time\\\"\\r\\n\\r\\n\\tamqp \\\"github.com/rabbitmq/amqp091-go\\\"\\r\\n)\\r\\n\\r\\nfunc main() {\\r\\n\\tfor i := 0; i < 40_000; i++ {\\r\\n\\t\\tif i%1000 == 0 {\\r\\n\\t\\t\\tlog.Printf(\\\"opened %d connections\\\", i)\\r\\n\\t\\t}\\r\\n\\t\\tconn, err := amqp.Dial(\\\"amqp://guest:guest@localhost\\\")\\r\\n\\t\\tif err != nil {\\r\\n\\t\\t\\tlog.Fatal(\\\"open connection:\\\", err)\\r\\n\\t\\t}\\r\\n\\t\\t_, err = conn.Channel()\\r\\n\\t\\tif err != nil {\\r\\n\\t\\t\\tlog.Fatal(\\\"open channel:\\\", err)\\r\\n\\t\\t}\\r\\n\\t\\t_, err = conn.Channel()\\r\\n\\t\\tif err != nil {\\r\\n\\t\\t\\tlog.Fatal(\\\"open channel:\\\", err)\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tlog.Println(\\\"opened all connections\\\")\\r\\n\\ttime.Sleep(5 * time.Hour)\\r\\n}\\n\"\n          })\n        })]\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The examples below directly invoke \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://www.erlang.org/doc/apps/erts/erlang.html#memory/0\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"erlang:memory/0\"\n        })\n      }), \" on the node,\\r\\na function that returns the memory size in bytes for each memory type.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(Details, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"summary\", {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"rabbitmq-diagnostics\"\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n        children: [\"To retrieve the same information from a running node, use \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"/docs/cli\",\n          children: \"CLI\"\n        }), \" command \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"/docs/man/rabbitmq-diagnostics.8\",\n          children: \"rabbitmq-diagnostics\"\n        }), \" like so:\"]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          className: \"language-shell\",\n          children: \"rabbitmq-diagnostics memory_breakdown\\n\"\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n        children: [\"This command can format the numbers using different information units (e.g. MiB, GiB) and supports JSON\\r\\noutput with \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"--formatter=json\"\n        }), \":\"]\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          className: \"language-shell\",\n          children: \"# pipes the output to `jq` for more readable formatting\\r\\nrabbitmq-diagnostics memory_breakdown --formatter=json | jq\\n\"\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"amqp-10-in-40-3\",\n      children: \"AMQP 1.0 in 4.0\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Here are the runtime-reported memory footprint numbers:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"1> erlang:memory().\\r\\n[{total,5330809208},\\r\\n {processes,4788022888},\\r\\n {processes_used,4787945960},\\r\\n {system,542786320},\\r\\n {atom,999681},\\r\\n {atom_used,974364},\\r\\n {binary,194810368},\\r\\n {code,19328950},\\r\\n {ets,94161808}]\\r\\n\\r\\n2> erlang:system_info(process_count).\\r\\n360312\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"amqp-10-in-313-3\",\n      children: \"AMQP 1.0 in 3.13\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"To compare, the runtime-reported memory footprint numbers in this test are:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"1> erlang:memory().\\r\\n[{total,12066294144},\\r\\n {processes,11156497904},\\r\\n {processes_used,11156461208},\\r\\n {system,909796240},\\r\\n {atom,1089809},\\r\\n {atom_used,1062780},\\r\\n {binary,192784464},\\r\\n {code,22068126},\\r\\n {ets,318872128}]\\r\\n\\r\\n2> erlang:system_info(process_count).\\r\\n1480318\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"We observe that the memory usage of \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"processes\"\n      }), \" in RabbitMQ 3.13 is 11.1 GB compared to only 4.8 GB in RabbitMQ 4.0 (a reduction of about 56%).\\r\\nAs explained in the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/blog/2024/08/05/native-amqp#amqp-10-in-rabbitmq-313\",\n        children: \"previous\"\n      }), \" blog post, the RabbitMQ 3.13 implementation of AMQP 1.0 is resource heavy because each AMQP 1.0 session in the plugin includes an AMQP 0.9.1 client and maintains AMQP 0.9.1 state.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"amqp-091-in-40-3\",\n      children: \"AMQP 0.9.1 in 4.0\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-erlang\",\n        children: \"1> erlang:memory().\\r\\n[{total,5409763512},\\r\\n {processes,4716150248},\\r\\n {processes_used,4715945080},\\r\\n {system,693613264},\\r\\n {atom,991489},\\r\\n {atom_used,962578},\\r\\n {binary,187229040},\\r\\n {code,19118766},\\r\\n {ets,235605424}]\\r\\n\\r\\n2> erlang:system_info(process_count).\\r\\n600314\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {\n      id: \"summary-many-connections\",\n      children: \"Summary\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.figure, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n          alt: \"Figure 4: Memory usage of 40,000 connections and 80,000 sessions / channels\",\n          src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2024-08-21-amqp-benchmarks/memory-many-connections.svg\")[\"default\"]) + \"\",\n          width: \"600\",\n          height: \"371\"\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.figcaption, {\n          children: \"Figure 4: Memory usage of 40,000 connections and 80,000 sessions / channels\"\n        })]\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"conclusion\",\n      children: \"Conclusion\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"This blog post demonstrated that the new native AMQP 1.0 implementation in RabbitMQ 4.0 performs multiple times better than AMQP 1.0 in RabbitMQ 3.13.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"We also observed that AMQP 1.0 can perform better than AMQP 0.9.1.\\r\\nHowever, it’s challenging to provide a fair comparison.\\r\\nThis blog post used an AMQP 1.0 client written in C and an AMQP 0.9.1 client written in Java.\\r\\nTherefore, we do not claim or promise that you will observe better throughput with your AMQP 1.0 workloads.\\r\\nThe AMQP 0.9.1 implementation in RabbitMQ performs well since it has been stable and optimized for over 15 years.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Use cases where AMQP 1.0 will likely outperform AMQP 0.9.1 include:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Sending to or receiving from a stream because a stream encodes messages in AMQP 1.0 format (as covered in this blog post).\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Leveraging queue locality using the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"https://github.com/rabbitmq/rabbitmq-amqp-java-client\",\n          children: \"RabbitMQ AMQP 1.0 Java client\"\n        }), \". (This feature will be covered separately.)\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Publishing to or consuming from other queues when one target queue reaches its limits on the same connection (as covered in the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"/blog/2024/09/02/amqp-flow-control\",\n          children: \"AMQP 1.0 flow control\"\n        }), \" blog post).\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./blog/2024-08-21-amqp-benchmarks/index.md\n");

/***/ }),

/***/ "./node_modules/@mdx-js/react/lib/index.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDXProvider: () => (/* binding */ MDXProvider),\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\n\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nfunction useMDXComponents(components) {\n  const contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nfunction MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ub2RlX21vZHVsZXMvQG1keC1qcy9yZWFjdC9saWIvaW5kZXguanM/MjA0NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbXBvcnQge01EWENvbXBvbmVudHN9IGZyb20gJ21keC90eXBlcy5qcydcbiAqIEBpbXBvcnQge0NvbXBvbmVudCwgUmVhY3RFbGVtZW50LCBSZWFjdE5vZGV9IGZyb20gJ3JlYWN0J1xuICovXG5cbi8qKlxuICogQGNhbGxiYWNrIE1lcmdlQ29tcG9uZW50c1xuICogICBDdXN0b20gbWVyZ2UgZnVuY3Rpb24uXG4gKiBAcGFyYW0ge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSBjdXJyZW50Q29tcG9uZW50c1xuICogICBDdXJyZW50IGNvbXBvbmVudHMgZnJvbSB0aGUgY29udGV4dC5cbiAqIEByZXR1cm5zIHtNRFhDb21wb25lbnRzfVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMuXG4gKlxuICogQHR5cGVkZWYgUHJvcHNcbiAqICAgQ29uZmlndXJhdGlvbiBmb3IgYE1EWFByb3ZpZGVyYC5cbiAqIEBwcm9wZXJ0eSB7UmVhY3ROb2RlIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2NoaWxkcmVuXVxuICogICBDaGlsZHJlbiAob3B0aW9uYWwpLlxuICogQHByb3BlcnR5IHtSZWFkb25seTxNRFhDb21wb25lbnRzPiB8IE1lcmdlQ29tcG9uZW50cyB8IG51bGwgfCB1bmRlZmluZWR9IFtjb21wb25lbnRzXVxuICogICBBZGRpdGlvbmFsIGNvbXBvbmVudHMgdG8gdXNlIG9yIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZW0gKG9wdGlvbmFsKS5cbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbiB8IG51bGwgfCB1bmRlZmluZWR9IFtkaXNhYmxlUGFyZW50Q29udGV4dD1mYWxzZV1cbiAqICAgVHVybiBvZmYgb3V0ZXIgY29tcG9uZW50IGNvbnRleHQgKGRlZmF1bHQ6IGBmYWxzZWApLlxuICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuLyoqIEB0eXBlIHtSZWFkb25seTxNRFhDb21wb25lbnRzPn0gKi9cbmNvbnN0IGVtcHR5Q29tcG9uZW50cyA9IHt9XG5cbmNvbnN0IE1EWENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KGVtcHR5Q29tcG9uZW50cylcblxuLyoqXG4gKiBHZXQgY3VycmVudCBjb21wb25lbnRzIGZyb20gdGhlIE1EWCBDb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8TURYQ29tcG9uZW50cz4gfCBNZXJnZUNvbXBvbmVudHMgfCBudWxsIHwgdW5kZWZpbmVkfSBbY29tcG9uZW50c11cbiAqICAgQWRkaXRpb25hbCBjb21wb25lbnRzIHRvIHVzZSBvciBhIGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyB0aGVtIChvcHRpb25hbCkuXG4gKiBAcmV0dXJucyB7TURYQ29tcG9uZW50c31cbiAqICAgQ3VycmVudCBjb21wb25lbnRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlTURYQ29tcG9uZW50cyhjb21wb25lbnRzKSB7XG4gIGNvbnN0IGNvbnRleHRDb21wb25lbnRzID0gUmVhY3QudXNlQ29udGV4dChNRFhDb250ZXh0KVxuXG4gIC8vIE1lbW9pemUgdG8gYXZvaWQgdW5uZWNlc3NhcnkgdG9wLWxldmVsIGNvbnRleHQgY2hhbmdlc1xuICByZXR1cm4gUmVhY3QudXNlTWVtbyhcbiAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBDdXN0b20gbWVyZ2UgdmlhIGEgZnVuY3Rpb24gcHJvcFxuICAgICAgaWYgKHR5cGVvZiBjb21wb25lbnRzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBjb21wb25lbnRzKGNvbnRleHRDb21wb25lbnRzKVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gey4uLmNvbnRleHRDb21wb25lbnRzLCAuLi5jb21wb25lbnRzfVxuICAgIH0sXG4gICAgW2NvbnRleHRDb21wb25lbnRzLCBjb21wb25lbnRzXVxuICApXG59XG5cbi8qKlxuICogUHJvdmlkZXIgZm9yIE1EWCBjb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7UmVhZG9ubHk8UHJvcHM+fSBwcm9wZXJ0aWVzXG4gKiAgIFByb3BlcnRpZXMuXG4gKiBAcmV0dXJucyB7UmVhY3RFbGVtZW50fVxuICogICBFbGVtZW50LlxuICogQHNhdGlzZmllcyB7Q29tcG9uZW50fVxuICovXG5leHBvcnQgZnVuY3Rpb24gTURYUHJvdmlkZXIocHJvcGVydGllcykge1xuICAvKiogQHR5cGUge1JlYWRvbmx5PE1EWENvbXBvbmVudHM+fSAqL1xuICBsZXQgYWxsQ29tcG9uZW50c1xuXG4gIGlmIChwcm9wZXJ0aWVzLmRpc2FibGVQYXJlbnRDb250ZXh0KSB7XG4gICAgYWxsQ29tcG9uZW50cyA9XG4gICAgICB0eXBlb2YgcHJvcGVydGllcy5jb21wb25lbnRzID09PSAnZnVuY3Rpb24nXG4gICAgICAgID8gcHJvcGVydGllcy5jb21wb25lbnRzKGVtcHR5Q29tcG9uZW50cylcbiAgICAgICAgOiBwcm9wZXJ0aWVzLmNvbXBvbmVudHMgfHwgZW1wdHlDb21wb25lbnRzXG4gIH0gZWxzZSB7XG4gICAgYWxsQ29tcG9uZW50cyA9IHVzZU1EWENvbXBvbmVudHMocHJvcGVydGllcy5jb21wb25lbnRzKVxuICB9XG5cbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgTURYQ29udGV4dC5Qcm92aWRlcixcbiAgICB7dmFsdWU6IGFsbENvbXBvbmVudHN9LFxuICAgIHByb3BlcnRpZXMuY2hpbGRyZW5cbiAgKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@mdx-js/react/lib/index.js\n");

/***/ }),

/***/ "./node_modules/file-loader/dist/cjs.js?name=assets/images/[name]-[contenthash].[ext]!./blog/2024-08-21-amqp-benchmarks/throughput-classic-queue.svg":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/throughput-classic-queue-215d3f10d1e0213152fab2f26ca3921e.svg\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZmlsZS1sb2FkZXIvZGlzdC9janMuanM/bmFtZT1hc3NldHMvaW1hZ2VzL1tuYW1lXS1bY29udGVudGhhc2hdLltleHRdIS4vYmxvZy8yMDI0LTA4LTIxLWFtcXAtYmVuY2htYXJrcy90aHJvdWdocHV0LWNsYXNzaWMtcXVldWUuc3ZnIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ibG9nLzIwMjQtMDgtMjEtYW1xcC1iZW5jaG1hcmtzL3Rocm91Z2hwdXQtY2xhc3NpYy1xdWV1ZS5zdmc/M2FjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy90aHJvdWdocHV0LWNsYXNzaWMtcXVldWUtMjE1ZDNmMTBkMWUwMjEzMTUyZmFiMmYyNmNhMzkyMWUuc3ZnXCI7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/file-loader/dist/cjs.js?name=assets/images/[name]-[contenthash].[ext]!./blog/2024-08-21-amqp-benchmarks/throughput-classic-queue.svg\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2024-08-21-amqp-benchmarks/memory-many-connections.svg":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/memory-many-connections-af340c0a7efe58d8b521dd3abb1117ba.svg\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYmxvZy8yMDI0LTA4LTIxLWFtcXAtYmVuY2htYXJrcy9tZW1vcnktbWFueS1jb25uZWN0aW9ucy5zdmciLCJtYXBwaW5ncyI6Ijs7OztBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFiYml0bXEtd2Vic2l0ZS8uL2Jsb2cvMjAyNC0wOC0yMS1hbXFwLWJlbmNobWFya3MvbWVtb3J5LW1hbnktY29ubmVjdGlvbnMuc3ZnP2Y5OTgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImFzc2V0cy9pbWFnZXMvbWVtb3J5LW1hbnktY29ubmVjdGlvbnMtYWYzNDBjMGE3ZWZlNThkOGI1MjFkZDNhYmIxMTE3YmEuc3ZnXCI7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2024-08-21-amqp-benchmarks/memory-many-connections.svg\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2024-08-21-amqp-benchmarks/throughput-classic-queue.svg":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/throughput-classic-queue-215d3f10d1e0213152fab2f26ca3921e.svg\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYmxvZy8yMDI0LTA4LTIxLWFtcXAtYmVuY2htYXJrcy90aHJvdWdocHV0LWNsYXNzaWMtcXVldWUuc3ZnIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi9ibG9nLzIwMjQtMDgtMjEtYW1xcC1iZW5jaG1hcmtzL3Rocm91Z2hwdXQtY2xhc3NpYy1xdWV1ZS5zdmc/M2Q4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy90aHJvdWdocHV0LWNsYXNzaWMtcXVldWUtMjE1ZDNmMTBkMWUwMjEzMTUyZmFiMmYyNmNhMzkyMWUuc3ZnXCI7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2024-08-21-amqp-benchmarks/throughput-classic-queue.svg\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2024-08-21-amqp-benchmarks/throughput-quorum-queue.svg":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/throughput-quorum-queue-7f61bcd561f964e3e5318aefb455dec1.svg\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYmxvZy8yMDI0LTA4LTIxLWFtcXAtYmVuY2htYXJrcy90aHJvdWdocHV0LXF1b3J1bS1xdWV1ZS5zdmciLCJtYXBwaW5ncyI6Ijs7OztBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFiYml0bXEtd2Vic2l0ZS8uL2Jsb2cvMjAyNC0wOC0yMS1hbXFwLWJlbmNobWFya3MvdGhyb3VnaHB1dC1xdW9ydW0tcXVldWUuc3ZnPzg4MWIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImFzc2V0cy9pbWFnZXMvdGhyb3VnaHB1dC1xdW9ydW0tcXVldWUtN2Y2MWJjZDU2MWY5NjRlM2U1MzE4YWVmYjQ1NWRlYzEuc3ZnXCI7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2024-08-21-amqp-benchmarks/throughput-quorum-queue.svg\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2024-08-21-amqp-benchmarks/throughput-stream.svg":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/throughput-stream-a6526579118b787eb9d281abc8b4ef9a.svg\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYmxvZy8yMDI0LTA4LTIxLWFtcXAtYmVuY2htYXJrcy90aHJvdWdocHV0LXN0cmVhbS5zdmciLCJtYXBwaW5ncyI6Ijs7OztBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFiYml0bXEtd2Vic2l0ZS8uL2Jsb2cvMjAyNC0wOC0yMS1hbXFwLWJlbmNobWFya3MvdGhyb3VnaHB1dC1zdHJlYW0uc3ZnPzU4MjUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImFzc2V0cy9pbWFnZXMvdGhyb3VnaHB1dC1zdHJlYW0tYTY1MjY1NzkxMThiNzg3ZWI5ZDI4MWFiYzhiNGVmOWEuc3ZnXCI7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./blog/2024-08-21-amqp-benchmarks/throughput-stream.svg\n");

/***/ })

}]);