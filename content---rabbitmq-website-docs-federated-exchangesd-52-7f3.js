"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkrabbitmq_website"] = globalThis["webpackChunkrabbitmq_website"] || []).push([["content---rabbitmq-website-docs-federated-exchangesd-52-7f3"],{

/***/ "./.docusaurus/docusaurus-plugin-content-docs/default/site-versioned-docs-version-4-1-federated-exchanges-index-md-d52.json":
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"id":"federated-exchanges/index","title":"Federated Exchanges","description":"<!--","source":"@site/versioned_docs/version-4.1/federated-exchanges/index.md","sourceDirName":"federated-exchanges","slug":"/federated-exchanges/","permalink":"/rabbitmq-website/docs/federated-exchanges/","draft":false,"unlisted":false,"editUrl":"https://github.com/rabbitmq/rabbitmq-website/tree/main/versioned_docs/version-4.1/federated-exchanges/index.md","tags":[],"version":"4.1","frontMatter":{"title":"Federated Exchanges"},"sidebar":"docsSidebar","previous":{"title":"Federation Plugin","permalink":"/rabbitmq-website/docs/federation"},"next":{"title":"Federated Queues","permalink":"/rabbitmq-website/docs/federated-queues/"}}');

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./versioned_docs/version-4.1/federated-exchanges/federated-exchange.svg":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/federated-exchange-1a1b58cac03ce9782dee5426e5f3d7f4.svg\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vdmVyc2lvbmVkX2RvY3MvdmVyc2lvbi00LjEvZmVkZXJhdGVkLWV4Y2hhbmdlcy9mZWRlcmF0ZWQtZXhjaGFuZ2Uuc3ZnIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi92ZXJzaW9uZWRfZG9jcy92ZXJzaW9uLTQuMS9mZWRlcmF0ZWQtZXhjaGFuZ2VzL2ZlZGVyYXRlZC1leGNoYW5nZS5zdmc/ZGEwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy9mZWRlcmF0ZWQtZXhjaGFuZ2UtMWExYjU4Y2FjMDNjZTk3ODJkZWU1NDI2ZTVmM2Q3ZjQuc3ZnXCI7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./versioned_docs/version-4.1/federated-exchanges/federated-exchange.svg\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./versioned_docs/version-4.1/federated-exchanges/federation01.png":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/federation01-163e196f584a2ace33bb454dff49864a.png\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vdmVyc2lvbmVkX2RvY3MvdmVyc2lvbi00LjEvZmVkZXJhdGVkLWV4Y2hhbmdlcy9mZWRlcmF0aW9uMDEucG5nIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi92ZXJzaW9uZWRfZG9jcy92ZXJzaW9uLTQuMS9mZWRlcmF0ZWQtZXhjaGFuZ2VzL2ZlZGVyYXRpb24wMS5wbmc/ZWUwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy9mZWRlcmF0aW9uMDEtMTYzZTE5NmY1ODRhMmFjZTMzYmI0NTRkZmY0OTg2NGEucG5nXCI7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./versioned_docs/version-4.1/federated-exchanges/federation01.png\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./versioned_docs/version-4.1/federated-exchanges/federation02.png":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/federation02-aea983e39f247dd57c1b963402c2bb85.png\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vdmVyc2lvbmVkX2RvY3MvdmVyc2lvbi00LjEvZmVkZXJhdGVkLWV4Y2hhbmdlcy9mZWRlcmF0aW9uMDIucG5nIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi92ZXJzaW9uZWRfZG9jcy92ZXJzaW9uLTQuMS9mZWRlcmF0ZWQtZXhjaGFuZ2VzL2ZlZGVyYXRpb24wMi5wbmc/MDM0YSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy9mZWRlcmF0aW9uMDItYWVhOTgzZTM5ZjI0N2RkNTdjMWI5NjM0MDJjMmJiODUucG5nXCI7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./versioned_docs/version-4.1/federated-exchanges/federation02.png\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./versioned_docs/version-4.1/federated-exchanges/federation03.png":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/federation03-b110b3e6494a3725ea55ba728ede532c.png\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vdmVyc2lvbmVkX2RvY3MvdmVyc2lvbi00LjEvZmVkZXJhdGVkLWV4Y2hhbmdlcy9mZWRlcmF0aW9uMDMucG5nIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi92ZXJzaW9uZWRfZG9jcy92ZXJzaW9uLTQuMS9mZWRlcmF0ZWQtZXhjaGFuZ2VzL2ZlZGVyYXRpb24wMy5wbmc/ZGEyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy9mZWRlcmF0aW9uMDMtYjExMGIzZTY0OTRhMzcyNWVhNTViYTcyOGVkZTUzMmMucG5nXCI7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./versioned_docs/version-4.1/federated-exchanges/federation03.png\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./versioned_docs/version-4.1/federated-exchanges/federation04.png":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/federation04-b5e2962659f006f77e3802b104e0159e.png\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vdmVyc2lvbmVkX2RvY3MvdmVyc2lvbi00LjEvZmVkZXJhdGVkLWV4Y2hhbmdlcy9mZWRlcmF0aW9uMDQucG5nIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi92ZXJzaW9uZWRfZG9jcy92ZXJzaW9uLTQuMS9mZWRlcmF0ZWQtZXhjaGFuZ2VzL2ZlZGVyYXRpb24wNC5wbmc/ZDg1NiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy9mZWRlcmF0aW9uMDQtYjVlMjk2MjY1OWYwMDZmNzdlMzgwMmIxMDRlMDE1OWUucG5nXCI7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./versioned_docs/version-4.1/federated-exchanges/federation04.png\n");

/***/ }),

/***/ "./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./versioned_docs/version-4.1/federated-exchanges/federation05.png":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/federation05-0c122308d4368be70e127f3db80fc49d.png\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsLWxvYWRlci9kaXN0L2Nqcy5qcz9saW1pdD0xMDAwMCZuYW1lPWFzc2V0cy9pbWFnZXMvW25hbWVdLVtjb250ZW50aGFzaF0uW2V4dF0mZmFsbGJhY2s9L21udC9kL3h5MjQwMS9jb2RlRG9jL3JhYmJpdG1xLXdlYnNpdGUvbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vdmVyc2lvbmVkX2RvY3MvdmVyc2lvbi00LjEvZmVkZXJhdGVkLWV4Y2hhbmdlcy9mZWRlcmF0aW9uMDUucG5nIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhYmJpdG1xLXdlYnNpdGUvLi92ZXJzaW9uZWRfZG9jcy92ZXJzaW9uLTQuMS9mZWRlcmF0ZWQtZXhjaGFuZ2VzL2ZlZGVyYXRpb24wNS5wbmc/MWQzNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy9mZWRlcmF0aW9uMDUtMGMxMjIzMDhkNDM2OGJlNzBlMTI3ZjNkYjgwZmM0OWQucG5nXCI7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./versioned_docs/version-4.1/federated-exchanges/federation05.png\n");

/***/ }),

/***/ "./versioned_docs/version-4.1/federated-exchanges/index.md":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assets: () => (/* binding */ assets),\n/* harmony export */   contentTitle: () => (/* binding */ contentTitle),\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   frontMatter: () => (/* binding */ frontMatter),\n/* harmony export */   metadata: () => (/* reexport default export from named module */ _site_docusaurus_docusaurus_plugin_content_docs_default_site_versioned_docs_version_4_1_federated_exchanges_index_md_d52_json__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var _site_docusaurus_docusaurus_plugin_content_docs_default_site_versioned_docs_version_4_1_federated_exchanges_index_md_d52_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.docusaurus/docusaurus-plugin-content-docs/default/site-versioned-docs-version-4-1-federated-exchanges-index-md-d52.json\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./node_modules/@mdx-js/react/lib/index.js\");\n/* harmony import */ var _theme_Tabs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/Tabs/index.js\");\n/* harmony import */ var _theme_TabItem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./node_modules/@docusaurus/theme-classic/lib/theme/TabItem/index.js\");\n\n\nconst frontMatter = {\n\ttitle: 'Federated Exchanges'\n};\nconst contentTitle = 'Federated Exchanges';\n\nconst assets = {\n\n};\n\n\n\n\n\nconst toc = [{\n  \"value\": \"Overview\",\n  \"id\": \"overview\",\n  \"level\": 2\n}, {\n  \"value\": \"Use Cases\",\n  \"id\": \"use-cases\",\n  \"level\": 2\n}, {\n  \"value\": \"Limitations\",\n  \"id\": \"limitations\",\n  \"level\": 2\n}, {\n  \"value\": \"Usage and Configuration\",\n  \"id\": \"usage\",\n  \"level\": 2\n}, {\n  \"value\": \"Complex Topologies and Loop Handling\",\n  \"id\": \"loops\",\n  \"level\": 2\n}, {\n  \"value\": \"Implementation\",\n  \"id\": \"details\",\n  \"level\": 2\n}, {\n  \"value\": \"Example Topologies\",\n  \"id\": \"topology-diagrams\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    em: \"em\",\n    h1: \"h1\",\n    h2: \"h2\",\n    header: \"header\",\n    img: \"img\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.useMDXComponents)(),\n    ...props.components\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.header, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1, {\n        id: \"federated-exchanges\",\n        children: \"Federated Exchanges\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"overview\",\n      children: \"Overview\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"This guide covers federated exchanges, a subset of functionality offered by the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./federation\",\n        children: \"Federation plugin\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Some covered topics include:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"An overview of exchange federation\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Common \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#use-cases\",\n          children: \"use cases\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#usage\",\n          children: \"Usage and configuration\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#limitations\",\n          children: \"Limitations\"\n        }), \" of exchange federation\"]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#topology-diagrams\",\n          children: \"Example topologies\"\n        })\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n          href: \"#details\",\n          children: \"Implementation details\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"A separate \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./federation-reference\",\n        children: \"Federation plugin reference\"\n      }), \" guide is available.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Exchange federation is a mechanism that allows a flow of messages through an exchange\\r\\nin one location (called the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"upstream\"\n      }), \" or the source) be replicated to exchanges in other\\r\\nlocations (\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"downstreams\"\n      }), \"). The downstreams are independent nodes or clusters that can span\\r\\nwide area networks (geo regions). The replication process is asynchronous and tolerates\\r\\nconnectivity failures.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"A federated exchange links to other exchanges. Conceptually, messages\\r\\npublished to the upstream exchanges are copied to the federated\\r\\nexchange, as though they were published directly to the federated exchange.\\r\\nThe upstream exchanges do not need to be reconfigured. They are assumed\\r\\nto be located on a separate node or in a separate cluster.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"An upstream definition is a URI with certain recognised query parameters that\\r\\ncontrol link connection parameters. Upstreams can be managed using \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./cli\",\n        children: \"CLI tools\"\n      }), \"\\r\\nor the HTTP API with \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"https://github.com/rabbitmq/rabbitmq-federation-management\",\n        children: \"an additional plugin\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Here is a diagram showing a single upstream exchange (the source exchange) in one\\r\\nnode linking to a single downstream exchange (the federated exchange) in another node:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"figure\", {\n      className: \"without-borders\",\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n          alt: \"Basic federated exchange\",\n          src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./versioned_docs/version-4.1/federated-exchanges/federated-exchange.svg\")[\"default\"]) + \"\",\n          width: \"610\",\n          height: \"296\"\n        })\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"When exchange federation is used, usually only a subset of exchanges in a cluster is federated.\\r\\nSome exchanges can be inherently local to the \\\"site\\\" (cluster) and its uses.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Exchange federation will propagate \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"/tutorials/amqp-concepts\",\n        children: \"bindings\"\n      }), \"\\r\\nfrom the downstream to the upstreams when possible. It will also apply optimizations and propagate messages selectively if needed.\\r\\nThis is covered in \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#details\",\n        children: \"future sections\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"use-cases\",\n      children: \"Use Cases\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Federated exchanges can be used to replicate a flow of certain message types to remote locations.\\r\\nCombined with continuous \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./backup#definitions-backup\",\n        children: \"schema synchronisation\"\n      }), \" and\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./ttl\",\n        children: \"queue and message TTL\"\n      }), \", this can be used to maintain a warm standby\\r\\nwith reasonably up-to-date data within a controlled time window.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Another use would be to implement massive fanout with a single \\\"source\\\"\\r\\nexchange in one cluster (which acts as the source and need not be federated) can be declared\\r\\nas upstream by many other federated exchanges in other brokers. In\\r\\nturn, each of these can be upstream for many more exchanges, and so\\r\\non.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"See the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"#topology-diagrams\",\n        children: \"example diagrams below\"\n      }), \" for some possible arrangements.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"limitations\",\n      children: \"Limitations\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Exchange federation supports all built-in exchange types.\\r\\n3rd party exchange types might work depending on their semantics.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"The default exchange (with the blank name) cannot be federated as it is not a typical\\r\\nexchange and relies on node-local optimizations other exchange types do not use.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Exchanges with the internal property set to \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"true\"\n      }), \" are declared and internally used\\r\\nby RabbitMQ and cannot be federated.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"usage\",\n      children: \"Usage and Configuration\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Federation configuration uses \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./parameters\",\n        children: \"runtime parameters and policies\"\n      }), \", which means it can be configured\\r\\nand reconfigured on the fly as system topology changes. There are two key pieces of configuration involved:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Upstreams: these are remote endpoints in a federated system\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"Federation policies: these control what exchanges are federated and what upstreams (sources) they will connect to\"\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Both of those are configured on the downstream nodes or clusters.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To add an upstream, use the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"rabbitmqctl set_parameter\"\n      }), \" command. It accepts three parameters:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {\n      children: [\"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"Parameter type, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"federation-upstream\"\n        })]\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li, {\n        children: \"An upstream name that federation policies will refer to\"\n      }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {\n        children: [\"An upstream definition JSON document with at least one mandatory key, \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"uri\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The following example configures an upstream named \\\"origin\\\" which can be contacted at \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"code\", {\n        children: \"remote-host.local:5672\"\n      }), \":\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"examples\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"bash\",\n        label: \"bash\",\n        default: true,\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-bash\",\n            children: \"# Adds a federation upstream named \\\"origin\\\"\\r\\nrabbitmqctl set_parameter federation-upstream origin '{\\\"uri\\\":\\\"amqp://remote-host.local:5672\\\"}'\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"PowerShell\",\n        label: \"PowerShell\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-PowerShell\",\n            children: \"# Adds a federation upstream named \\\"origin\\\"\\r\\nrabbitmqctl.bat set_parameter federation-upstream origin '\\\"{\\\"\\\"uri\\\"\\\":\\\"\\\"amqp://remote-host.local:5672\\\"\\\"}\\\"'\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"More upstream definition parameters are covered in the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./federation-reference\",\n        children: \"Federation Reference guide\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Once an upstream has been specified, a policy that controls federation can be added. It is added just like\\r\\nany other \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./policies\",\n        children: \"policy\"\n      }), \", using:\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_theme_Tabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      groupId: \"examples\",\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"bash\",\n        label: \"bash\",\n        default: true,\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-bash\",\n            children: \"# Adds a policy named \\\"exchange-federation\\\"\\r\\nrabbitmqctl set_policy exchange-federation \\\\\\r\\n    \\\"^federated\\\\.\\\" \\\\\\r\\n    '{\\\"federation-upstream-set\\\":\\\"all\\\"}' \\\\\\r\\n    --priority 10 \\\\\\r\\n    --apply-to exchanges\\n\"\n          })\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_theme_TabItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        value: \"PowerShell\",\n        label: \"PowerShell\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n            className: \"language-PowerShell\",\n            children: \"# Adds a policy named \\\"exchange-federation\\\"\\r\\nrabbitmqctl.bat set_policy exchange-federation `\\r\\n    \\\"^federated\\\\.\\\" `\\r\\n    '\\\"{\\\"\\\"federation-upstream-set\\\"\\\":\\\"\\\"all\\\"\\\"}\\\"' `\\r\\n    --priority 10 `\\r\\n    --apply-to exchanges\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"In the example above, the policy will match exchanges whose name begins with a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"federated.\"\n      }), \" prefix\\r\\nin the default virtual host. Those exchanges will set up federation links for all declared upstreams.\\r\\nThe name of the policy is \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"exchange-federation\"\n      }), \". As with any policy, if multiple policies match an exchange,\\r\\nthe one with the highest priority will be used. Multiple policy definitions will not be combined, even if their\\r\\npriorities are equal.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Once configured, a federation link (connection) will be opened for every matching exchange and upstream pair.\\r\\nBy \\\"matching exchange\\\" here we mean an exchange that is matched by the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./policies\",\n        children: \"federation policy pattern\"\n      }), \".\\r\\nIf no exchanges matched, no links will be started.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"To deactivate federation for the matching exchanges, delete the policy using its name:\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        className: \"language-bash\",\n        children: \"rabbitmqctl clear_policy exchange-federation\\n\"\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"loops\",\n      children: \"Complex Topologies and Loop Handling\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"A federated exchange can be \\\"upstream\\\" from another federated exchange. One can even form \\\"loops\\\", for\\r\\nexample, exchange A declares exchange B to be upstream from it, and exchange B declares exchange A\\r\\nto be upstream from it. More complex multiply-connected arrangements are allowed.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Such complex topologies will be increasingly difficult to reason about and troubleshoot, however.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"To prevent messages being continually copied and re-routed (in a never-ending cycle) there is a limit placed\\r\\non the number of times a message can be copied over a link (\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./federation-reference#upstream-sets\",\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n          children: \"max-hops\"\n        })\n      }), \" below).\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"It is recommended that all the exchanges linked by federation are of the\\r\\nsame type. Mixing types can and likely will lead to confusing routing behaviours.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"details\",\n      children: \"Implementation\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"Inter-broker communication is implemented using AMQP 0-9-1 (optionally\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./ssl\",\n        children: \"secured with TLS\"\n      }), \"). Bindings are grouped together and binding operations such as\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"queue.bind\"\n      }), \" and \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n        children: \"queue.unbind\"\n      }), \" commands are sent to the upstream side of\\r\\nthe link when bindings change in the downstream.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Therefore the  exchange only receives messages for which it has bindings. The\\r\\nbindings are replicated with the upstream asynchronously so the effect of adding\\r\\nor removing a binding is only guaranteed to be seen eventually.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"The messages are buffered in an internally declared queue created in the upstream\\r\\nexchange's cluster. This is called the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em, {\n        children: \"upstream queue\"\n      }), \".\\r\\nIt is the upstream queue which is bound to the upstream\\r\\nexchange with the grouped bindings. It is possible to tailor\\r\\nsome of the properties of this queue in the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a, {\n        href: \"./federation-reference#upstreams\",\n        children: \"upstream configuration\"\n      }), \".\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Here is a detailed diagram showing a single federated\\r\\nexchange linking to a single upstream exchange including the\\r\\nupstream queue and bindings created by the federation plugin\\r\\nshown in grey. The fat arrow on the upstream link indicates\\r\\nmessages republished by the federated exchange. Some\\r\\npotential publisher clients are shown publishing to both\\r\\nexchanges.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"figure\", {\n      className: \"without-borders\",\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n          alt: \"Simple federation\",\n          src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./versioned_docs/version-4.1/federated-exchanges/federation01.png\")[\"default\"]) + \"\",\n          width: \"969\",\n          height: \"338\"\n        })\n      })\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n      children: \"Publications to either exchange may be received by queues bound to\\r\\nthe federated exchange, but publications directly to the federated\\r\\nexchange cannot be received by queues bound to the upstream\\r\\nexchange.\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {\n      id: \"topology-diagrams\",\n      children: \"Example Topologies\"\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n      children: [\"We illustrate some example federation topologies. Where RabbitMQ brokers are\\r\\nshown in these diagrams indicated by a \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"img\", {\n        src: \"/img/rabbitmq-logo.svg\",\n        height: \"15\"\n      }), \" it can be a cluster of nodes or a standalone node.\"]\n    }), \"\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"table\", {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"thead\", {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"strong\", {\n              children: \"Topology\"\n            })\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"strong\", {\n              children: \"Description\"\n            })\n          })]\n        })\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tbody\", {\n        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"Pair of federated exchanges\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"td\", {\n            children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"p\", {\n              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n                children: \"Each exchange links to the other in this symmetric arrangement. A\\r\\npublisher and consumer connected to each broker are illustrated.\\r\\nBoth consumers can receive messages published by either publisher.\"\n              })\n            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"figure\", {\n              className: \"without-borders\",\n              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n                children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n                  alt: \"Symmetric pair\",\n                  src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./versioned_docs/version-4.1/federated-exchanges/federation02.png\")[\"default\"]) + \"\",\n                  width: \"1016\",\n                  height: \"363\"\n                })\n              })\n            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"p\", {\n              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n                children: [\"Both links are declared with \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n                  children: \"max-hops=1\"\n                }), \" so that\\r\\nmessages are copied only once, otherwise the consumers will see\\r\\nmultiple copies of the same message (up to the \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n                  children: \"max-hops\"\n                }), \" limit).\"]\n              })\n            })]\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"Complete Graph\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"td\", {\n            children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"p\", {\n              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n                children: \"This arrangement is the analogue of the pair of federated exchanges\\r\\nbut for three exchanges. Each exchange links to both the others.\"\n              })\n            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"figure\", {\n              className: \"without-borders\",\n              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n                children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n                  alt: \"Three-way federation\",\n                  src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./versioned_docs/version-4.1/federated-exchanges/federation03.png\")[\"default\"]) + \"\",\n                  width: \"738\",\n                  height: \"427\"\n                })\n              })\n            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"p\", {\n              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n                children: [\"Again \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n                  children: \"max-hops=1\"\n                }), \" because the \\\"hop distance\\\" to any\\r\\nother exchange is exactly one. This will be the case in any complete\\r\\ngraph of federated exchanges.\"]\n              })\n            })]\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"Fan-out\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"td\", {\n            children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"p\", {\n              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n                children: \"One source exchange (which it is not necessary to federate)\\r\\nis linked to by a tree of exchanges, which can extend to any depth.\\r\\nIn this case messages published to the source exchange can be\\r\\nreceived by any consumer connected to any broker in the tree.\"\n              })\n            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"figure\", {\n              className: \"without-borders\",\n              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n                children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n                  alt: \"Fan-out\",\n                  src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./versioned_docs/version-4.1/federated-exchanges/federation04.png\")[\"default\"]) + \"\",\n                  width: \"827\",\n                  height: \"861\"\n                })\n              })\n            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"p\", {\n              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n                children: [\"Because there are no loops it is not as crucial to get the\\r\\n\", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n                  children: \"max-hops\"\n                }), \" value right, but it must be at least\\r\\nas large as the longest connecting path. For a tree this is\\r\\nthe number of levels minus one.\"]\n              })\n            })]\n          })]\n        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"tr\", {\n          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n            children: \"Ring\"\n          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"td\", {\n            children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"p\", {\n              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {\n                children: [\"In this ring of six brokers each federated exchange links to just\\r\\none other in the ring. The \", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {\n                  children: \"\\\"max-hops\\\"\"\n                }), \" property is set\\r\\nto 5 so that every exchange in the ring sees the message exactly\\r\\nonce.\"]\n              })\n            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"figure\", {\n              className: \"without-borders\",\n              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n                children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.img, {\n                  alt: \"Ring\",\n                  src: (__webpack_require__(\"./node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[contenthash].[ext]&fallback=/mnt/d/xy2401/codeDoc/rabbitmq-website/node_modules/file-loader/dist/cjs.js!./versioned_docs/version-4.1/federated-exchanges/federation05.png\")[\"default\"]) + \"\",\n                  width: \"536\",\n                  height: \"566\"\n                })\n              })\n            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"p\", {\n              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {\n                children: \"This topology, though relatively cheap in queues and connections, is\\r\\nrather fragile compared to a completely connected graph. One broker\\r\\n(or connection) failure breaks the ring.\"\n              })\n            })]\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ...(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__.useMDXComponents)(),\n    ...props.components\n  };\n  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout, {\n    ...props,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./versioned_docs/version-4.1/federated-exchanges/index.md\n");

/***/ })

}]);